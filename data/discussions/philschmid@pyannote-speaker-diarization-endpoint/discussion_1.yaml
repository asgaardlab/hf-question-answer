!!python/object:huggingface_hub.community.DiscussionWithDetails
author: hbredin
conflicting_files: null
created_at: 2024-01-21 16:39:36+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5fcf602140b27fad857dfa8d/zFcElfPxAsEXYCkfOHflp.png?w=200&h=200&f=face
      fullname: "Herv\xE9 Bredin"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hbredin
      type: user
    createdAt: '2024-01-21T16:39:36.000Z'
    data:
      edited: false
      editors:
      - hbredin
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7940060496330261
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5fcf602140b27fad857dfa8d/zFcElfPxAsEXYCkfOHflp.png?w=200&h=200&f=face
          fullname: "Herv\xE9 Bredin"
          isHf: false
          isPro: false
          name: hbredin
          type: user
        html: "<p>Hey <span data-props=\"{&quot;user&quot;:&quot;philschmid&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/philschmid\"\
          >@<span class=\"underline\">philschmid</span></a></span>\n\n\t</span></span>,\
          \ </p>\n<p>I am the creator of pyannote.</p>\n<p>Could you please share\
          \ in the README, how one would send requests to this endpoint from Python,\
          \ once deployed on Huggingface Inference Endpoint?</p>\n<p>I have trouble\
          \ understanding how one should load the audio on client side, and how to\
          \ send extra parameters as well.</p>\n<pre><code class=\"language-python\"\
          ><span class=\"hljs-keyword\">import</span> httpx\n<span class=\"hljs-keyword\"\
          >with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\"\
          >\"sample.wav\"</span>, <span class=\"hljs-string\">\"rb\"</span>) <span\
          \ class=\"hljs-keyword\">as</span> f:\n    audio = f.read()\n\ndata = {\n\
          \    <span class=\"hljs-string\">\"inputs\"</span>: audio,\n    <span class=\"\
          hljs-string\">\"parameters\"</span>: {<span class=\"hljs-string\">\"num_speakers\"\
          </span>: <span class=\"hljs-number\">2</span>},\n}\n\nheaders = {<span class=\"\
          hljs-string\">'Authorization'</span>: <span class=\"hljs-string\">f'Bearer\
          \ <span class=\"hljs-subst\">{ENDPOINT_TOKEN}</span>'</span>}\nr = httpx.post(ENDPOINT_URL,\
          \ json=data, headers=headers)\n</code></pre>\n<p>The above won't work because\
          \ <code>httpx</code> will complain that <code>audio</code> is <code>bytes</code>.\
          \ </p>\n<p>Thanks!</p>\n<p>Herv\xE9.</p>\n"
        raw: "Hey @philschmid, \r\n\r\nI am the creator of pyannote.\r\n\r\nCould\
          \ you please share in the README, how one would send requests to this endpoint\
          \ from Python, once deployed on Huggingface Inference Endpoint?\r\n\r\n\
          I have trouble understanding how one should load the audio on client side,\
          \ and how to send extra parameters as well.\r\n\r\n```python\r\nimport httpx\r\
          \nwith open(\"sample.wav\", \"rb\") as f:\r\n    audio = f.read()\r\n\r\n\
          data = {\r\n    \"inputs\": audio,\r\n    \"parameters\": {\"num_speakers\"\
          : 2},\r\n}\r\n\r\nheaders = {'Authorization': f'Bearer {ENDPOINT_TOKEN}'}\r\
          \nr = httpx.post(ENDPOINT_URL, json=data, headers=headers)\r\n```\r\n\r\n\
          The above won't work because `httpx` will complain that `audio` is `bytes`.\
          \ \r\n\r\nThanks!\r\n\r\nHerv\xE9.\r\n"
        updatedAt: '2024-01-21T16:39:36.384Z'
      numEdits: 0
      reactions: []
    id: 65ad48c8356bf23b4a647b18
    type: comment
  author: hbredin
  content: "Hey @philschmid, \r\n\r\nI am the creator of pyannote.\r\n\r\nCould you\
    \ please share in the README, how one would send requests to this endpoint from\
    \ Python, once deployed on Huggingface Inference Endpoint?\r\n\r\nI have trouble\
    \ understanding how one should load the audio on client side, and how to send\
    \ extra parameters as well.\r\n\r\n```python\r\nimport httpx\r\nwith open(\"sample.wav\"\
    , \"rb\") as f:\r\n    audio = f.read()\r\n\r\ndata = {\r\n    \"inputs\": audio,\r\
    \n    \"parameters\": {\"num_speakers\": 2},\r\n}\r\n\r\nheaders = {'Authorization':\
    \ f'Bearer {ENDPOINT_TOKEN}'}\r\nr = httpx.post(ENDPOINT_URL, json=data, headers=headers)\r\
    \n```\r\n\r\nThe above won't work because `httpx` will complain that `audio` is\
    \ `bytes`. \r\n\r\nThanks!\r\n\r\nHerv\xE9.\r\n"
  created_at: 2024-01-21 16:39:36+00:00
  edited: false
  hidden: false
  id: 65ad48c8356bf23b4a647b18
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1624629516652-5ff5d596f244529b3ec0fb89.png?w=200&h=200&f=face
      fullname: Philipp Schmid
      isHf: true
      isOrgMember: false
      isOwner: true
      isPro: false
      name: philschmid
      type: user
    createdAt: '2024-01-22T06:47:45.000Z'
    data:
      edited: false
      editors:
      - philschmid
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6333929300308228
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1624629516652-5ff5d596f244529b3ec0fb89.png?w=200&h=200&f=face
          fullname: Philipp Schmid
          isHf: true
          isPro: false
          name: philschmid
          type: user
        html: "<p>Could you try sending a binary bod with a content-type header?<br>Something\
          \ like bekow= </p>\n<pre><code class=\"language-python\"><span class=\"\
          hljs-comment\"># Path to your audio file</span>\nfile_path = <span class=\"\
          hljs-string\">\"path/to/your/audiofile.mp3\"</span>\n\n<span class=\"hljs-comment\"\
          ># Read the binary content of the file</span>\n<span class=\"hljs-keyword\"\
          >with</span> <span class=\"hljs-built_in\">open</span>(file_path, <span\
          \ class=\"hljs-string\">'rb'</span>) <span class=\"hljs-keyword\">as</span>\
          \ audio_file:\n    file_content = audio_file.read()\n\n<span class=\"hljs-comment\"\
          ># Get the content type of the file</span>\ncontent_type = mimetypes.guess_type(file_path)[<span\
          \ class=\"hljs-number\">0</span>]\n\n<span class=\"hljs-comment\"># Prepare\
          \ headers</span>\nheaders = {\n    <span class=\"hljs-string\">'Content-Type'</span>:\
          \ content_type\n}\n\n<span class=\"hljs-comment\"># Send POST request</span>\n\
          response = requests.post(url, headers=headers, data=file_content)\n</code></pre>\n"
        raw: "Could you try sending a binary bod with a content-type header? \nSomething\
          \ like bekow= \n```python\n# Path to your audio file\nfile_path = \"path/to/your/audiofile.mp3\"\
          \n\n# Read the binary content of the file\nwith open(file_path, 'rb') as\
          \ audio_file:\n    file_content = audio_file.read()\n\n# Get the content\
          \ type of the file\ncontent_type = mimetypes.guess_type(file_path)[0]\n\n\
          # Prepare headers\nheaders = {\n    'Content-Type': content_type\n}\n\n\
          # Send POST request\nresponse = requests.post(url, headers=headers, data=file_content)\n\
          ```\n"
        updatedAt: '2024-01-22T06:47:45.584Z'
      numEdits: 0
      reactions: []
    id: 65ae0f91356bf23b4aaccd68
    type: comment
  author: philschmid
  content: "Could you try sending a binary bod with a content-type header? \nSomething\
    \ like bekow= \n```python\n# Path to your audio file\nfile_path = \"path/to/your/audiofile.mp3\"\
    \n\n# Read the binary content of the file\nwith open(file_path, 'rb') as audio_file:\n\
    \    file_content = audio_file.read()\n\n# Get the content type of the file\n\
    content_type = mimetypes.guess_type(file_path)[0]\n\n# Prepare headers\nheaders\
    \ = {\n    'Content-Type': content_type\n}\n\n# Send POST request\nresponse =\
    \ requests.post(url, headers=headers, data=file_content)\n```\n"
  created_at: 2024-01-22 06:47:45+00:00
  edited: false
  hidden: false
  id: 65ae0f91356bf23b4aaccd68
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5fcf602140b27fad857dfa8d/zFcElfPxAsEXYCkfOHflp.png?w=200&h=200&f=face
      fullname: "Herv\xE9 Bredin"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hbredin
      type: user
    createdAt: '2024-01-22T07:13:06.000Z'
    data:
      edited: false
      editors:
      - hbredin
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9556943774223328
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5fcf602140b27fad857dfa8d/zFcElfPxAsEXYCkfOHflp.png?w=200&h=200&f=face
          fullname: "Herv\xE9 Bredin"
          isHf: false
          isPro: false
          name: hbredin
          type: user
        html: '<p>Thanks but my question was more related to sending both <em>binary</em>
          audio <strong>and</strong> <em>json</em> parameters.</p>

          <p>With trials and errors, I found a solution on my side (a different but
          similar endpoint) by going through a base64 conversion and sending the whole
          thing as JSON.<br>I believe updating the documentation with an audio+parameter
          example would help.</p>

          <p>Closing as I found a solution.</p>

          '
        raw: 'Thanks but my question was more related to sending both _binary_ audio
          **and** _json_ parameters.


          With trials and errors, I found a solution on my side (a different but similar
          endpoint) by going through a base64 conversion and sending the whole thing
          as JSON.

          I believe updating the documentation with an audio+parameter example would
          help.


          Closing as I found a solution.

          '
        updatedAt: '2024-01-22T07:13:06.213Z'
      numEdits: 0
      reactions: []
      relatedEventId: 65ae1582abf6d1ccb7903419
    id: 65ae1582abf6d1ccb7903417
    type: comment
  author: hbredin
  content: 'Thanks but my question was more related to sending both _binary_ audio
    **and** _json_ parameters.


    With trials and errors, I found a solution on my side (a different but similar
    endpoint) by going through a base64 conversion and sending the whole thing as
    JSON.

    I believe updating the documentation with an audio+parameter example would help.


    Closing as I found a solution.

    '
  created_at: 2024-01-22 07:13:06+00:00
  edited: false
  hidden: false
  id: 65ae1582abf6d1ccb7903417
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5fcf602140b27fad857dfa8d/zFcElfPxAsEXYCkfOHflp.png?w=200&h=200&f=face
      fullname: "Herv\xE9 Bredin"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hbredin
      type: user
    createdAt: '2024-01-22T07:13:06.000Z'
    data:
      status: closed
    id: 65ae1582abf6d1ccb7903419
    type: status-change
  author: hbredin
  created_at: 2024-01-22 07:13:06+00:00
  id: 65ae1582abf6d1ccb7903419
  new_status: closed
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1624629516652-5ff5d596f244529b3ec0fb89.png?w=200&h=200&f=face
      fullname: Philipp Schmid
      isHf: true
      isOrgMember: false
      isOwner: true
      isPro: false
      name: philschmid
      type: user
    createdAt: '2024-01-22T07:35:30.000Z'
    data:
      edited: false
      editors:
      - philschmid
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6511827111244202
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1624629516652-5ff5d596f244529b3ec0fb89.png?w=200&h=200&f=face
          fullname: Philipp Schmid
          isHf: true
          isPro: false
          name: philschmid
          type: user
        html: '<p>When sending a binary you can add "query" parameter which will then
          be passed in as "parameters" </p>

          '
        raw: 'When sending a binary you can add "query" parameter which will then
          be passed in as "parameters" '
        updatedAt: '2024-01-22T07:35:30.933Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - hbredin
    id: 65ae1ac21f4b7b68fd627812
    type: comment
  author: philschmid
  content: 'When sending a binary you can add "query" parameter which will then be
    passed in as "parameters" '
  created_at: 2024-01-22 07:35:30+00:00
  edited: false
  hidden: false
  id: 65ae1ac21f4b7b68fd627812
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: philschmid/pyannote-speaker-diarization-endpoint
repo_type: model
status: closed
target_branch: null
title: Example use with requests/httpx in Python?
