!!python/object:huggingface_hub.community.DiscussionWithDetails
author: alfred78
conflicting_files: null
created_at: 2023-09-04 07:11:39+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/03047013801fca6b6c2f0eb278610c37.svg
      fullname: fongfong
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: alfred78
      type: user
    createdAt: '2023-09-04T08:11:39.000Z'
    data:
      edited: false
      editors:
      - alfred78
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6459947228431702
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/03047013801fca6b6c2f0eb278610c37.svg
          fullname: fongfong
          isHf: false
          isPro: false
          name: alfred78
          type: user
        html: "<p>Following <a href=\"http://huggingface.co/HuggingFaceH4/starchat-beta\"\
          >example code</a>  shows how to use pipeline to generate code with starchat:</p>\n\
          <pre><code class=\"language-python\">outputs = pipe(prompt, max_new_tokens=<span\
          \ class=\"hljs-number\">256</span>, do_sample=<span class=\"hljs-literal\"\
          >True</span>, temperature=<span class=\"hljs-number\">0.2</span>, top_k=<span\
          \ class=\"hljs-number\">50</span>, top_p=<span class=\"hljs-number\">0.95</span>,\
          \ eos_token_id=<span class=\"hljs-number\">49155</span>)\n</code></pre>\n\
          <p>while this demo is a \"once-turn\" conversation, how to implement a multi-turn\
          \ conversation then?</p>\n<p>I noticed following comments in above <a href=\"\
          http://huggingface.co/HuggingFaceH4/starchat-beta\">example code</a> , so\
          \ I assume here I should utilize the token ID <code>49155 </code> to indicate\
          \ starchat whether a conversation turn is ended or not. But how to code?</p>\n\
          <pre><code class=\"language-python\"><span class=\"hljs-comment\"># We use\
          \ a special &lt;|end|&gt; token with ID 49155 to denote ends of a turn</span>\n\
          </code></pre>\n<p>Following is a pseudo code snippet I can figure out (\
          \ I am using gradio herein), but can anyone tell me it is correct or not?\
          \  Shall I use a <code>for</code> to loop ? Thanks a lot.</p>\n<pre><code\
          \ class=\"language-python\">count=<span class=\"hljs-number\">0</span>\n\
          eos_token_id = <span class=\"hljs-number\">0</span>\nchatbot = gr.Chatbot()\n\
          history = gr.State([])\ncount += <span class=\"hljs-number\">1</span>\n\
          <span class=\"hljs-keyword\">if</span> count % <span class=\"hljs-number\"\
          >5</span> == <span class=\"hljs-number\">0</span>: <span class=\"hljs-comment\"\
          ># try 5 rounds query at most for each turn</span>\n    <span class=\"hljs-comment\"\
          >#indicate end of this turn</span>\n    eos_token_id = <span class=\"hljs-number\"\
          >49155</span>\n    count = <span class=\"hljs-number\">0</span>\n\nsubmitBtn.click(predict,\n\
          \                    [user_input, chatbot, history, eos_token_id],\n   \
          \                 [chatbot, history],\n                    show_progress=<span\
          \ class=\"hljs-literal\">True</span>)\nsubmitBtn.click(reset_user_input,\
          \ [], [user_input])\nemptyBtn.click(reset_state, outputs=[chatbot, history],\
          \ show_progress=<span class=\"hljs-literal\">True</span>)\n</code></pre>\n"
        raw: "Following [example code](http://huggingface.co/HuggingFaceH4/starchat-beta)\
          \  shows how to use pipeline to generate code with starchat:\r\n```python\r\
          \noutputs = pipe(prompt, max_new_tokens=256, do_sample=True, temperature=0.2,\
          \ top_k=50, top_p=0.95, eos_token_id=49155)\r\n```\r\n\r\nwhile this demo\
          \ is a \"once-turn\" conversation, how to implement a multi-turn conversation\
          \ then?\r\n\r\nI noticed following comments in above [example code](http://huggingface.co/HuggingFaceH4/starchat-beta)\
          \ , so I assume here I should utilize the token ID ```49155 ``` to indicate\
          \ starchat whether a conversation turn is ended or not. But how to code?\r\
          \n```python\r\n# We use a special <|end|> token with ID 49155 to denote\
          \ ends of a turn\r\n```\r\n\r\nFollowing is a pseudo code snippet I can\
          \ figure out ( I am using gradio herein), but can anyone tell me it is correct\
          \ or not?  Shall I use a ```for``` to loop ? Thanks a lot.\r\n\r\n```python\r\
          \ncount=0\r\neos_token_id = 0\r\nchatbot = gr.Chatbot()\r\nhistory = gr.State([])\r\
          \ncount += 1\r\nif count % 5 == 0: # try 5 rounds query at most for each\
          \ turn\r\n    #indicate end of this turn\r\n    eos_token_id = 49155\r\n\
          \    count = 0\r\n\r\nsubmitBtn.click(predict,\r\n                    [user_input,\
          \ chatbot, history, eos_token_id],\r\n                    [chatbot, history],\r\
          \n                    show_progress=True)\r\nsubmitBtn.click(reset_user_input,\
          \ [], [user_input])\r\nemptyBtn.click(reset_state, outputs=[chatbot, history],\
          \ show_progress=True)\r\n```"
        updatedAt: '2023-09-04T08:11:39.305Z'
      numEdits: 0
      reactions: []
    id: 64f5913b6e335217131a662c
    type: comment
  author: alfred78
  content: "Following [example code](http://huggingface.co/HuggingFaceH4/starchat-beta)\
    \  shows how to use pipeline to generate code with starchat:\r\n```python\r\n\
    outputs = pipe(prompt, max_new_tokens=256, do_sample=True, temperature=0.2, top_k=50,\
    \ top_p=0.95, eos_token_id=49155)\r\n```\r\n\r\nwhile this demo is a \"once-turn\"\
    \ conversation, how to implement a multi-turn conversation then?\r\n\r\nI noticed\
    \ following comments in above [example code](http://huggingface.co/HuggingFaceH4/starchat-beta)\
    \ , so I assume here I should utilize the token ID ```49155 ``` to indicate starchat\
    \ whether a conversation turn is ended or not. But how to code?\r\n```python\r\
    \n# We use a special <|end|> token with ID 49155 to denote ends of a turn\r\n\
    ```\r\n\r\nFollowing is a pseudo code snippet I can figure out ( I am using gradio\
    \ herein), but can anyone tell me it is correct or not?  Shall I use a ```for```\
    \ to loop ? Thanks a lot.\r\n\r\n```python\r\ncount=0\r\neos_token_id = 0\r\n\
    chatbot = gr.Chatbot()\r\nhistory = gr.State([])\r\ncount += 1\r\nif count % 5\
    \ == 0: # try 5 rounds query at most for each turn\r\n    #indicate end of this\
    \ turn\r\n    eos_token_id = 49155\r\n    count = 0\r\n\r\nsubmitBtn.click(predict,\r\
    \n                    [user_input, chatbot, history, eos_token_id],\r\n      \
    \              [chatbot, history],\r\n                    show_progress=True)\r\
    \nsubmitBtn.click(reset_user_input, [], [user_input])\r\nemptyBtn.click(reset_state,\
    \ outputs=[chatbot, history], show_progress=True)\r\n```"
  created_at: 2023-09-04 07:11:39+00:00
  edited: false
  hidden: false
  id: 64f5913b6e335217131a662c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/adb20aa32bf3545b37dc8e3574e37759.svg
      fullname: Min Tan
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: edwardtan
      type: user
    createdAt: '2023-09-11T02:59:20.000Z'
    data:
      edited: false
      editors:
      - edwardtan
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5745694041252136
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/adb20aa32bf3545b37dc8e3574e37759.svg
          fullname: Min Tan
          isHf: false
          isPro: false
          name: edwardtan
          type: user
        html: '<p>may be you can use TextIteratorStreamer or TextStreamer from <a
          rel="nofollow" href="mailto:transform@4.3x.x">transform@4.3x.x</a></p>

          '
        raw: may be you can use TextIteratorStreamer or TextStreamer from transform@4.3x.x
        updatedAt: '2023-09-11T02:59:20.949Z'
      numEdits: 0
      reactions: []
    id: 64fe82887eeb6dbf40ea1e68
    type: comment
  author: edwardtan
  content: may be you can use TextIteratorStreamer or TextStreamer from transform@4.3x.x
  created_at: 2023-09-11 01:59:20+00:00
  edited: false
  hidden: false
  id: 64fe82887eeb6dbf40ea1e68
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 25
repo_id: HuggingFaceH4/starchat-beta
repo_type: model
status: open
target_branch: null
title: any example code to demo a multi-turn conversation with starchat-beta?
