!!python/object:huggingface_hub.community.DiscussionWithDetails
author: hacky
conflicting_files: null
created_at: 2023-09-28 00:07:46+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/0e000e9503849cd4e6c73887610276f2.svg
      fullname: hacky huang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hacky
      type: user
    createdAt: '2023-09-28T01:07:46.000Z'
    data:
      edited: false
      editors:
      - hacky
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9559734463691711
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/0e000e9503849cd4e6c73887610276f2.svg
          fullname: hacky huang
          isHf: false
          isPro: false
          name: hacky
          type: user
        html: '<p>As is reported in the technical report, phi-1.5 can obtain 40.2%
          pass rate for GSM8K via coding. Did anyone manage to replicate the result?
          It would be great if you could share your evaluation script somewhere. </p>

          '
        raw: 'As is reported in the technical report, phi-1.5 can obtain 40.2% pass
          rate for GSM8K via coding. Did anyone manage to replicate the result? It
          would be great if you could share your evaluation script somewhere. '
        updatedAt: '2023-09-28T01:07:46.732Z'
      numEdits: 0
      reactions: []
    id: 6514d1e2e62687e14afcf916
    type: comment
  author: hacky
  content: 'As is reported in the technical report, phi-1.5 can obtain 40.2% pass
    rate for GSM8K via coding. Did anyone manage to replicate the result? It would
    be great if you could share your evaluation script somewhere. '
  created_at: 2023-09-28 00:07:46+00:00
  edited: false
  hidden: false
  id: 6514d1e2e62687e14afcf916
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/89aa67bee7d8118063ac4bdb7c1e18c2.svg
      fullname: wanglamao
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: wanglamao
      type: user
    createdAt: '2023-10-16T06:06:30.000Z'
    data:
      edited: false
      editors:
      - wanglamao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6918893456459045
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/89aa67bee7d8118063ac4bdb7c1e18c2.svg
          fullname: wanglamao
          isHf: false
          isPro: false
          name: wanglamao
          type: user
        html: '<p>I tried to run <code>gsm8k_yaml</code> task of <a rel="nofollow"
          href="https://github.com/EleutherAI/lm-evaluation-harness/tree/big-refactor">EleutherAI/lm-evaluation-harness</a>
          and  got acc=0.3055. </p>

          <p><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/64361bcaf81a16e74367d2e2/E2YhMf-aQpSYJr-1l-hCR.png"><img
          alt="image.png" src="https://cdn-uploads.huggingface.co/production/uploads/64361bcaf81a16e74367d2e2/E2YhMf-aQpSYJr-1l-hCR.png"></a></p>

          <p>The evaluation didn''t work out of the box and my modifications involve:</p>

          <ul>

          <li>enable the <code>get_answer</code> filter in yaml file</li>

          <li>use <code>gold_alias</code> instead of <code>doc_to_target</code></li>

          </ul>

          '
        raw: "I tried to run `gsm8k_yaml` task of [EleutherAI/lm-evaluation-harness](https://github.com/EleutherAI/lm-evaluation-harness/tree/big-refactor)\
          \ and  got acc=0.3055. \n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/64361bcaf81a16e74367d2e2/E2YhMf-aQpSYJr-1l-hCR.png)\n\
          \nThe evaluation didn't work out of the box and my modifications involve:\n\
          - enable the `get_answer` filter in yaml file\n- use `gold_alias` instead\
          \ of `doc_to_target`\n\n\n"
        updatedAt: '2023-10-16T06:06:30.514Z'
      numEdits: 0
      reactions: []
    id: 652cd2e6b118f26df7713a9f
    type: comment
  author: wanglamao
  content: "I tried to run `gsm8k_yaml` task of [EleutherAI/lm-evaluation-harness](https://github.com/EleutherAI/lm-evaluation-harness/tree/big-refactor)\
    \ and  got acc=0.3055. \n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/64361bcaf81a16e74367d2e2/E2YhMf-aQpSYJr-1l-hCR.png)\n\
    \nThe evaluation didn't work out of the box and my modifications involve:\n- enable\
    \ the `get_answer` filter in yaml file\n- use `gold_alias` instead of `doc_to_target`\n\
    \n\n"
  created_at: 2023-10-16 05:06:30+00:00
  edited: false
  hidden: false
  id: 652cd2e6b118f26df7713a9f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1666203761402-6157454831624da88210e627.jpeg?w=200&h=200&f=face
      fullname: Gustavo de Rosa
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: gugarosa
      type: user
    createdAt: '2023-10-30T17:06:52.000Z'
    data:
      edited: false
      editors:
      - gugarosa
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7506228089332581
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1666203761402-6157454831624da88210e627.jpeg?w=200&h=200&f=face
          fullname: Gustavo de Rosa
          isHf: false
          isPro: false
          name: gugarosa
          type: user
        html: "<p>Hello <span data-props=\"{&quot;user&quot;:&quot;hacky&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/hacky\"\
          >@<span class=\"underline\">hacky</span></a></span>\n\n\t</span></span>!</p>\n\
          <p>I am not able to share the full GSM8k evaluation due to some internal\
          \ imports, but this snippet might help you in using code for the evaluation:</p>\n\
          <pre><code class=\"language-python\"><span class=\"hljs-keyword\">def</span>\
          \ <span class=\"hljs-title function_\">_timeout_handler</span>(<span class=\"\
          hljs-params\">signum: <span class=\"hljs-built_in\">int</span>, frame: <span\
          \ class=\"hljs-type\">Any</span></span>) -&gt; <span class=\"hljs-literal\"\
          >None</span>:\n    <span class=\"hljs-keyword\">raise</span> Exception()\n\
          \n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\"\
          >_validate_completion</span>(<span class=\"hljs-params\">completion: <span\
          \ class=\"hljs-built_in\">str</span>, label: <span class=\"hljs-built_in\"\
          >str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\n \
          \   completion_lines = completion.split(<span class=\"hljs-string\">\"TA:\"\
          </span>)[<span class=\"hljs-number\">1</span>].strip().split(<span class=\"\
          hljs-string\">\"\\n\"</span>)\n    completion_code = <span class=\"hljs-string\"\
          >\"\\n\"</span>.join(completion_lines[<span class=\"hljs-number\">1</span>:]\
          \ <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">\"\
          :\"</span> <span class=\"hljs-keyword\">in</span> completion_lines[<span\
          \ class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">else</span>\
          \ completion_lines)\n\n    <span class=\"hljs-keyword\">try</span>:\n  \
          \      signal.signal(signal.SIGALRM, _timeout_handler)\n        signal.alarm(<span\
          \ class=\"hljs-number\">2</span>)\n\n        <span class=\"hljs-keyword\"\
          >try</span>:\n            stdout = io.StringIO()\n            <span class=\"\
          hljs-keyword\">with</span> contextlib.redirect_stdout(stdout):\n       \
          \         <span class=\"hljs-built_in\">exec</span>(\n                 \
          \   <span class=\"hljs-string\">\"import math\\nfrom math import *\\nimport\
          \ numpy as np\\nimport hashlib\\n\"</span>\n                    + completion_code\n\
          \                    + <span class=\"hljs-string\">\"\\n\\n\"</span>\n \
          \                   + <span class=\"hljs-string\">\"if type(result) == str:\\\
          n\\tresult = result.replace(',', '')\\n\"</span>\n                    +\
          \ <span class=\"hljs-string\">f\"assert(int(result) == <span class=\"hljs-subst\"\
          >{label}</span>)\"</span>,\n                    {},\n                )\n\
          \            signal.alarm(<span class=\"hljs-number\">0</span>)\n      \
          \      prediction = <span class=\"hljs-number\">1</span>\n        <span\
          \ class=\"hljs-keyword\">except</span> Exception:\n            prediction\
          \ = <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-keyword\"\
          >finally</span>:\n            signal.alarm(<span class=\"hljs-number\">0</span>)\n\
          \n    <span class=\"hljs-keyword\">except</span> Exception:\n        prediction\
          \ = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-keyword\"\
          >return</span> prediction\n</code></pre>\n<p>The overall idea is to execute\
          \ the code that was generated by the model and assert whether its outputs\
          \ are equal to the ground-truth label. We also added some public imports\
          \ to prevent many answers from failing.</p>\n"
        raw: "Hello @hacky!\n\nI am not able to share the full GSM8k evaluation due\
          \ to some internal imports, but this snippet might help you in using code\
          \ for the evaluation:\n\n```python\ndef _timeout_handler(signum: int, frame:\
          \ Any) -> None:\n    raise Exception()\n\ndef _validate_completion(completion:\
          \ str, label: str) -> bool:\n    completion_lines = completion.split(\"\
          TA:\")[1].strip().split(\"\\n\")\n    completion_code = \"\\n\".join(completion_lines[1:]\
          \ if \":\" in completion_lines[0] else completion_lines)\n\n    try:\n \
          \       signal.signal(signal.SIGALRM, _timeout_handler)\n        signal.alarm(2)\n\
          \n        try:\n            stdout = io.StringIO()\n            with contextlib.redirect_stdout(stdout):\n\
          \                exec(\n                    \"import math\\nfrom math import\
          \ *\\nimport numpy as np\\nimport hashlib\\n\"\n                    + completion_code\n\
          \                    + \"\\n\\n\"\n                    + \"if type(result)\
          \ == str:\\n\\tresult = result.replace(',', '')\\n\"\n                 \
          \   + f\"assert(int(result) == {label})\",\n                    {},\n  \
          \              )\n            signal.alarm(0)\n            prediction =\
          \ 1\n        except Exception:\n            prediction = 0\n        finally:\n\
          \            signal.alarm(0)\n\n    except Exception:\n        prediction\
          \ = 0\n\n    return prediction\n```\n\nThe overall idea is to execute the\
          \ code that was generated by the model and assert whether its outputs are\
          \ equal to the ground-truth label. We also added some public imports to\
          \ prevent many answers from failing."
        updatedAt: '2023-10-30T17:06:52.748Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - hacky
    id: 653fe2ac96fd5908387def76
    type: comment
  author: gugarosa
  content: "Hello @hacky!\n\nI am not able to share the full GSM8k evaluation due\
    \ to some internal imports, but this snippet might help you in using code for\
    \ the evaluation:\n\n```python\ndef _timeout_handler(signum: int, frame: Any)\
    \ -> None:\n    raise Exception()\n\ndef _validate_completion(completion: str,\
    \ label: str) -> bool:\n    completion_lines = completion.split(\"TA:\")[1].strip().split(\"\
    \\n\")\n    completion_code = \"\\n\".join(completion_lines[1:] if \":\" in completion_lines[0]\
    \ else completion_lines)\n\n    try:\n        signal.signal(signal.SIGALRM, _timeout_handler)\n\
    \        signal.alarm(2)\n\n        try:\n            stdout = io.StringIO()\n\
    \            with contextlib.redirect_stdout(stdout):\n                exec(\n\
    \                    \"import math\\nfrom math import *\\nimport numpy as np\\\
    nimport hashlib\\n\"\n                    + completion_code\n                \
    \    + \"\\n\\n\"\n                    + \"if type(result) == str:\\n\\tresult\
    \ = result.replace(',', '')\\n\"\n                    + f\"assert(int(result)\
    \ == {label})\",\n                    {},\n                )\n            signal.alarm(0)\n\
    \            prediction = 1\n        except Exception:\n            prediction\
    \ = 0\n        finally:\n            signal.alarm(0)\n\n    except Exception:\n\
    \        prediction = 0\n\n    return prediction\n```\n\nThe overall idea is to\
    \ execute the code that was generated by the model and assert whether its outputs\
    \ are equal to the ground-truth label. We also added some public imports to prevent\
    \ many answers from failing."
  created_at: 2023-10-30 16:06:52+00:00
  edited: false
  hidden: false
  id: 653fe2ac96fd5908387def76
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1666203761402-6157454831624da88210e627.jpeg?w=200&h=200&f=face
      fullname: Gustavo de Rosa
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: gugarosa
      type: user
    createdAt: '2023-11-13T18:45:41.000Z'
    data:
      status: closed
    id: 65526ed5929eae1101e1b931
    type: status-change
  author: gugarosa
  created_at: 2023-11-13 18:45:41+00:00
  id: 65526ed5929eae1101e1b931
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 36
repo_id: microsoft/phi-1_5
repo_type: model
status: closed
target_branch: null
title: Evaluating phi-1.5 on GSM8K
