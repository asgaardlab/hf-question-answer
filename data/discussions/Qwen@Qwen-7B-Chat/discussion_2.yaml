!!python/object:huggingface_hub.community.DiscussionWithDetails
author: twang2218
conflicting_files: null
created_at: 2023-08-03 12:08:13+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/IIYLstf-q7ZFWDZ3FHyiC.jpeg?w=200&h=200&f=face
      fullname: Tao Wang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: twang2218
      type: user
    createdAt: '2023-08-03T13:08:13.000Z'
    data:
      edited: false
      editors:
      - twang2218
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.32182446122169495
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/IIYLstf-q7ZFWDZ3FHyiC.jpeg?w=200&h=200&f=face
          fullname: Tao Wang
          isHf: false
          isPro: false
          name: twang2218
          type: user
        html: "<p>\u5F53\u4F7F\u7528</p>\n<pre><code class=\"language-py\">tokenizer.convert_tokens_to_string([k])\n\
          </code></pre>\n<p>\u7684\u65F6\u5019\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E0B\
          \u9519\u8BEF\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u6267\u884C\uFF1A</p>\n<pre><code\
          \ class=\"language-js\"><span class=\"hljs-title function_\">convert_tokens_to_string</span>(b<span\
          \ class=\"hljs-string\">'ictionary'</span>) <span class=\"hljs-attr\">failed</span>:\
          \ <span class=\"hljs-string\">'QWenTokenizer'</span> object has no attribute\
          \ <span class=\"hljs-string\">'byte_decoder'</span>\n</code></pre>\n<p>\u7ECF\
          \u8FC7\u7FFB\u9605\u4EE3\u7801\u53D1\u73B0\uFF1A</p>\n<p><a href=\"https://huggingface.co/Qwen/Qwen-7B-Chat/blob/main/tokenization_qwen.py#L197-L206\"\
          >https://huggingface.co/Qwen/Qwen-7B-Chat/blob/main/tokenization_qwen.py#L197-L206</a></p>\n\
          <pre><code class=\"language-py\">    <span class=\"hljs-keyword\">def</span>\
          \ <span class=\"hljs-title function_\">convert_tokens_to_string</span>(<span\
          \ class=\"hljs-params\">self, tokens: <span class=\"hljs-type\">List</span>[<span\
          \ class=\"hljs-built_in\">str</span>]</span>) -&gt; <span class=\"hljs-built_in\"\
          >str</span>:\n        <span class=\"hljs-string\">\"\"\"</span>\n<span class=\"\
          hljs-string\">        Converts a sequence of tokens in a single string.\
          \ The most simple way to do it is `\" \".join(tokens)` but we</span>\n<span\
          \ class=\"hljs-string\">        often want to remove sub-word tokenization\
          \ artifacts at the same time.</span>\n<span class=\"hljs-string\">     \
          \   \"\"\"</span>\n        text = <span class=\"hljs-string\">\"\"</span>.join(tokens)\n\
          \        text = <span class=\"hljs-built_in\">bytearray</span>([self.byte_decoder[c]\
          \ <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\"\
          >in</span> text]).decode(\n            <span class=\"hljs-string\">\"utf-8\"\
          </span>, errors=self.errors\n        )\n        <span class=\"hljs-keyword\"\
          >return</span> text\n</code></pre>\n<p>\u5176\u4E2D\u786E\u5B9E\u662F\u7528\
          \u4E86 <code>self.byte_decoder[c]</code>\uFF0C\u4F46\u662F\u65E0\u8BBA\u662F\
          \ <code>QWenTokenizer</code> \u8FD8\u662F <code>PreTrainedTokenizer</code>\
          \ \u90FD\u6CA1\u6709\u8FD9\u4E2A\u53D8\u91CF\u3002</p>\n"
        raw: "\u5F53\u4F7F\u7528\r\n\r\n```py\r\ntokenizer.convert_tokens_to_string([k])\r\
          \n```\r\n\r\n\u7684\u65F6\u5019\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E0B\u9519\
          \u8BEF\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u6267\u884C\uFF1A\r\n\r\n```js\r\n\
          convert_tokens_to_string(b'ictionary') failed: 'QWenTokenizer' object has\
          \ no attribute 'byte_decoder'\r\n```\r\n\r\n\u7ECF\u8FC7\u7FFB\u9605\u4EE3\
          \u7801\u53D1\u73B0\uFF1A\r\n\r\nhttps://huggingface.co/Qwen/Qwen-7B-Chat/blob/main/tokenization_qwen.py#L197-L206\r\
          \n\r\n```py\r\n    def convert_tokens_to_string(self, tokens: List[str])\
          \ -> str:\r\n        \"\"\"\r\n        Converts a sequence of tokens in\
          \ a single string. The most simple way to do it is `\" \".join(tokens)`\
          \ but we\r\n        often want to remove sub-word tokenization artifacts\
          \ at the same time.\r\n        \"\"\"\r\n        text = \"\".join(tokens)\r\
          \n        text = bytearray([self.byte_decoder[c] for c in text]).decode(\r\
          \n            \"utf-8\", errors=self.errors\r\n        )\r\n        return\
          \ text\r\n```\r\n\r\n\u5176\u4E2D\u786E\u5B9E\u662F\u7528\u4E86 `self.byte_decoder[c]`\uFF0C\
          \u4F46\u662F\u65E0\u8BBA\u662F `QWenTokenizer` \u8FD8\u662F `PreTrainedTokenizer`\
          \ \u90FD\u6CA1\u6709\u8FD9\u4E2A\u53D8\u91CF\u3002"
        updatedAt: '2023-08-03T13:08:13.022Z'
      numEdits: 0
      reactions: []
    id: 64cba6bd8256a8efea517024
    type: comment
  author: twang2218
  content: "\u5F53\u4F7F\u7528\r\n\r\n```py\r\ntokenizer.convert_tokens_to_string([k])\r\
    \n```\r\n\r\n\u7684\u65F6\u5019\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E0B\u9519\u8BEF\
    \uFF0C\u5BFC\u81F4\u65E0\u6CD5\u6267\u884C\uFF1A\r\n\r\n```js\r\nconvert_tokens_to_string(b'ictionary')\
    \ failed: 'QWenTokenizer' object has no attribute 'byte_decoder'\r\n```\r\n\r\n\
    \u7ECF\u8FC7\u7FFB\u9605\u4EE3\u7801\u53D1\u73B0\uFF1A\r\n\r\nhttps://huggingface.co/Qwen/Qwen-7B-Chat/blob/main/tokenization_qwen.py#L197-L206\r\
    \n\r\n```py\r\n    def convert_tokens_to_string(self, tokens: List[str]) -> str:\r\
    \n        \"\"\"\r\n        Converts a sequence of tokens in a single string.\
    \ The most simple way to do it is `\" \".join(tokens)` but we\r\n        often\
    \ want to remove sub-word tokenization artifacts at the same time.\r\n       \
    \ \"\"\"\r\n        text = \"\".join(tokens)\r\n        text = bytearray([self.byte_decoder[c]\
    \ for c in text]).decode(\r\n            \"utf-8\", errors=self.errors\r\n   \
    \     )\r\n        return text\r\n```\r\n\r\n\u5176\u4E2D\u786E\u5B9E\u662F\u7528\
    \u4E86 `self.byte_decoder[c]`\uFF0C\u4F46\u662F\u65E0\u8BBA\u662F `QWenTokenizer`\
    \ \u8FD8\u662F `PreTrainedTokenizer` \u90FD\u6CA1\u6709\u8FD9\u4E2A\u53D8\u91CF\
    \u3002"
  created_at: 2023-08-03 12:08:13+00:00
  edited: false
  hidden: false
  id: 64cba6bd8256a8efea517024
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/9921ca8568f9d53c919681d8960ad802.svg
      fullname: jklj077
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: jklj077
      type: user
    createdAt: '2023-08-08T03:33:34.000Z'
    data:
      edited: false
      editors:
      - jklj077
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7978155016899109
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/9921ca8568f9d53c919681d8960ad802.svg
          fullname: jklj077
          isHf: false
          isPro: false
          name: jklj077
          type: user
        html: '<p>Thank you for raising this issue. This has been fixed, please try</p>

          <pre><code class="language-python"><span class="hljs-meta">&gt;&gt;&gt;
          </span>tokenizer = AutoTokenizer.from_pretrained(<span class="hljs-string">''Qwen/Qwen-7B''</span>,
          trust_remote_code=<span class="hljs-literal">True</span>, force_download=<span
          class="hljs-literal">True</span>)

          <span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.convert_tokens_to_string([<span
          class="hljs-string">b''ictionary''</span>])

          <span class="hljs-string">''ictionary''</span>

          </code></pre>

          <p>I''ll close  this for now. If there are other problems, please open a
          new one.</p>

          '
        raw: 'Thank you for raising this issue. This has been fixed, please try


          ```python

          >>> tokenizer = AutoTokenizer.from_pretrained(''Qwen/Qwen-7B'', trust_remote_code=True,
          force_download=True)

          >>> tokenizer.convert_tokens_to_string([b''ictionary''])

          ''ictionary''

          ```


          I''ll close  this for now. If there are other problems, please open a new
          one.'
        updatedAt: '2023-08-08T03:33:34.139Z'
      numEdits: 0
      reactions: []
      relatedEventId: 64d1b78e7e20ec9ea0fcd484
    id: 64d1b78e7e20ec9ea0fcd483
    type: comment
  author: jklj077
  content: 'Thank you for raising this issue. This has been fixed, please try


    ```python

    >>> tokenizer = AutoTokenizer.from_pretrained(''Qwen/Qwen-7B'', trust_remote_code=True,
    force_download=True)

    >>> tokenizer.convert_tokens_to_string([b''ictionary''])

    ''ictionary''

    ```


    I''ll close  this for now. If there are other problems, please open a new one.'
  created_at: 2023-08-08 02:33:34+00:00
  edited: false
  hidden: false
  id: 64d1b78e7e20ec9ea0fcd483
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/9921ca8568f9d53c919681d8960ad802.svg
      fullname: jklj077
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: jklj077
      type: user
    createdAt: '2023-08-08T03:33:34.000Z'
    data:
      status: closed
    id: 64d1b78e7e20ec9ea0fcd484
    type: status-change
  author: jklj077
  created_at: 2023-08-08 02:33:34+00:00
  id: 64d1b78e7e20ec9ea0fcd484
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: Qwen/Qwen-7B-Chat
repo_type: model
status: closed
target_branch: null
title: "\u8C03\u7528 QWenTokenizer.convert_tokens_to_string() \u62A5\u7F3A\u5931 byte_decoder"
