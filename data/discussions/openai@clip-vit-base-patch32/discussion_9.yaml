!!python/object:huggingface_hub.community.DiscussionWithDetails
author: AFRF
conflicting_files: null
created_at: 2023-11-29 21:23:37+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/b1479975278b0542e2335c2b92ca8a02.svg
      fullname: Andres Ramos
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AFRF
      type: user
    createdAt: '2023-11-29T21:23:37.000Z'
    data:
      edited: false
      editors:
      - AFRF
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.944450318813324
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/b1479975278b0542e2335c2b92ca8a02.svg
          fullname: Andres Ramos
          isHf: false
          isPro: false
          name: AFRF
          type: user
        html: '<p>Hi all, I''ve been working on image-image search tasks and CLIP
          has work really well for me, currently I want to take the performance of
          my approach further and I was thinking in fine tuning the CLIP model for
          this task. For this, I''m just generating the embeddings of the images,
          store them in a vector index and the just computing the cosine similarity
          between the embedding of my search image and all the embeddings in the vector
          index. Im not really using any zero-shot application or image-text comparison
          and I''ve seen all the fine-tuning approaches for CLIP models I read use
          text-image pairs for the fine tuning, I don''t understand how I should fine
          tune the model to increase the performance of my application, should I use
          text-image pairs? Or should I only fine tune the visual encoder of the model,
          and if thats the case anyone has some examples of how can i do it?</p>

          '
        raw: Hi all, I've been working on image-image search tasks and CLIP has work
          really well for me, currently I want to take the performance of my approach
          further and I was thinking in fine tuning the CLIP model for this task.
          For this, I'm just generating the embeddings of the images, store them in
          a vector index and the just computing the cosine similarity between the
          embedding of my search image and all the embeddings in the vector index.
          Im not really using any zero-shot application or image-text comparison and
          I've seen all the fine-tuning approaches for CLIP models I read use text-image
          pairs for the fine tuning, I don't understand how I should fine tune the
          model to increase the performance of my application, should I use text-image
          pairs? Or should I only fine tune the visual encoder of the model, and if
          thats the case anyone has some examples of how can i do it?
        updatedAt: '2023-11-29T21:23:37.584Z'
      numEdits: 0
      reactions: []
    id: 6567abd9063938c9b4181e32
    type: comment
  author: AFRF
  content: Hi all, I've been working on image-image search tasks and CLIP has work
    really well for me, currently I want to take the performance of my approach further
    and I was thinking in fine tuning the CLIP model for this task. For this, I'm
    just generating the embeddings of the images, store them in a vector index and
    the just computing the cosine similarity between the embedding of my search image
    and all the embeddings in the vector index. Im not really using any zero-shot
    application or image-text comparison and I've seen all the fine-tuning approaches
    for CLIP models I read use text-image pairs for the fine tuning, I don't understand
    how I should fine tune the model to increase the performance of my application,
    should I use text-image pairs? Or should I only fine tune the visual encoder of
    the model, and if thats the case anyone has some examples of how can i do it?
  created_at: 2023-11-29 21:23:37+00:00
  edited: false
  hidden: false
  id: 6567abd9063938c9b4181e32
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 9
repo_id: openai/clip-vit-base-patch32
repo_type: model
status: open
target_branch: null
title: Fine-tuning CLIP model for image-image search
