!!python/object:huggingface_hub.community.DiscussionWithDetails
author: macadeliccc
conflicting_files: []
created_at: 2023-11-28 21:59:39+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6455cc8d679315e4ef16fbec/NcB1yDz0ZBtXXFiApnFyl.png?w=200&h=200&f=face
      fullname: Tim Dolan
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: macadeliccc
      type: user
    createdAt: '2023-11-28T21:59:39.000Z'
    data:
      edited: false
      editors:
      - macadeliccc
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.719594419002533
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6455cc8d679315e4ef16fbec/NcB1yDz0ZBtXXFiApnFyl.png?w=200&h=200&f=face
          fullname: Tim Dolan
          isHf: false
          isPro: false
          name: macadeliccc
          type: user
        html: "<p>Output from Single-turn demo:</p>\n<p>GPT4 Correct User: Hello,\
          \ how are you? GPT4 Correct Assistant: I'm doing great, thank you for asking!\
          \ How can I assist you today?</p>\n<p>Output from multi-turn demo:</p>\n\
          <p>GPT4 Correct User: Hello GPT4 Correct Assistant:  GPT4 Correct User:\
          \ How are you today? GPT4 Correct Assistant: I'm doing great, thank you\
          \ for asking! How about you?</p>\n<p>Output from coding demo:</p>\n<p>Coding\
          \ conversation response: Code User: Implement quicksort using C++ Code Assistant:\
          \ Here's an example of how you can implement quicksort in C++:</p>\n<pre><code\
          \ class=\"language-cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\"\
          >include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\
          <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span>\
          \ std;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span>\
          \ <span class=\"hljs-title\">quickSort</span><span class=\"hljs-params\"\
          >(<span class=\"hljs-type\">int</span> arr[], <span class=\"hljs-type\"\
          >int</span> left, <span class=\"hljs-type\">int</span> right)</span> </span>{\n\
          \    <span class=\"hljs-type\">int</span> i = left, j = right;\n    <span\
          \ class=\"hljs-type\">int</span> tmp;\n    <span class=\"hljs-type\">int</span>\
          \ pivot = arr[(left + right) / <span class=\"hljs-number\">2</span>];\n\n\
          \    <span class=\"hljs-comment\">/* partition */</span>\n    <span class=\"\
          hljs-keyword\">while</span> (i &lt;= j) {\n        <span class=\"hljs-keyword\"\
          >while</span> (arr[i] &lt; pivot)\n            i++;\n        <span class=\"\
          hljs-keyword\">while</span> (arr[j] &gt; pivot)\n            j--;\n    \
          \    <span class=\"hljs-keyword\">if</span> (i &lt;= j) {\n            tmp\
          \ = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tmp;\n \
          \           i++;\n            j--;\n        }\n    };\n\n    <span class=\"\
          hljs-comment\">/* recursion */</span>\n    <span class=\"hljs-keyword\"\
          >if</span> (left &lt; j)\n        <span class=\"hljs-built_in\">quickSort</span>(arr,\
          \ left, j);\n    <span class=\"hljs-keyword\">if</span> (i &lt; right)\n\
          \        <span class=\"hljs-built_in\">quickSort</span>(arr, i, right);\n\
          }\n</code></pre>\n"
        raw: "Output from Single-turn demo:\n\nGPT4 Correct User: Hello, how are you?\
          \ GPT4 Correct Assistant: I'm doing great, thank you for asking! How can\
          \ I assist you today?\n\nOutput from multi-turn demo:\n\nGPT4 Correct User:\
          \ Hello GPT4 Correct Assistant:  GPT4 Correct User: How are you today? GPT4\
          \ Correct Assistant: I'm doing great, thank you for asking! How about you?\n\
          \nOutput from coding demo:\n\nCoding conversation response: Code User: Implement\
          \ quicksort using C++ Code Assistant: Here's an example of how you can implement\
          \ quicksort in C++:\n\n```cpp\n#include <iostream>\nusing namespace std;\n\
          \nvoid quickSort(int arr[], int left, int right) {\n    int i = left, j\
          \ = right;\n    int tmp;\n    int pivot = arr[(left + right) / 2];\n\n \
          \   /* partition */\n    while (i <= j) {\n        while (arr[i] < pivot)\n\
          \            i++;\n        while (arr[j] > pivot)\n            j--;\n  \
          \      if (i <= j) {\n            tmp = arr[i];\n            arr[i] = arr[j];\n\
          \            arr[j] = tmp;\n            i++;\n            j--;\n       \
          \ }\n    };\n\n    /* recursion */\n    if (left < j)\n        quickSort(arr,\
          \ left, j);\n    if (i < right)\n        quickSort(arr, i, right);\n}\n\
          ```"
        updatedAt: '2023-11-28T21:59:39.045Z'
      numEdits: 0
      reactions: []
    id: 656662cbe7be83d49955bd4e
    type: comment
  author: macadeliccc
  content: "Output from Single-turn demo:\n\nGPT4 Correct User: Hello, how are you?\
    \ GPT4 Correct Assistant: I'm doing great, thank you for asking! How can I assist\
    \ you today?\n\nOutput from multi-turn demo:\n\nGPT4 Correct User: Hello GPT4\
    \ Correct Assistant:  GPT4 Correct User: How are you today? GPT4 Correct Assistant:\
    \ I'm doing great, thank you for asking! How about you?\n\nOutput from coding\
    \ demo:\n\nCoding conversation response: Code User: Implement quicksort using\
    \ C++ Code Assistant: Here's an example of how you can implement quicksort in\
    \ C++:\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid quickSort(int\
    \ arr[], int left, int right) {\n    int i = left, j = right;\n    int tmp;\n\
    \    int pivot = arr[(left + right) / 2];\n\n    /* partition */\n    while (i\
    \ <= j) {\n        while (arr[i] < pivot)\n            i++;\n        while (arr[j]\
    \ > pivot)\n            j--;\n        if (i <= j) {\n            tmp = arr[i];\n\
    \            arr[i] = arr[j];\n            arr[j] = tmp;\n            i++;\n \
    \           j--;\n        }\n    };\n\n    /* recursion */\n    if (left < j)\n\
    \        quickSort(arr, left, j);\n    if (i < right)\n        quickSort(arr,\
    \ i, right);\n}\n```"
  created_at: 2023-11-28 21:59:39+00:00
  edited: false
  hidden: false
  id: 656662cbe7be83d49955bd4e
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6455cc8d679315e4ef16fbec/NcB1yDz0ZBtXXFiApnFyl.png?w=200&h=200&f=face
      fullname: Tim Dolan
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: macadeliccc
      type: user
    createdAt: '2023-11-28T21:59:39.000Z'
    data:
      oid: 47518856bd4002238ea9cf400b0c34aa9346c352
      parents:
      - d0ecaa0bfaa0ab5a64808b12716efec50d2f39a5
      subject: Added code examples that correspond to each prompt format
    id: 656662cb0000000000000000
    type: commit
  author: macadeliccc
  created_at: 2023-11-28 21:59:39+00:00
  id: 656662cb0000000000000000
  oid: 47518856bd4002238ea9cf400b0c34aa9346c352
  summary: Added code examples that correspond to each prompt format
  type: commit
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/128ceae78490110ae41202851e84d58e.svg
      fullname: Banghua Zhu
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: banghua
      type: user
    createdAt: '2023-11-28T22:21:22.000Z'
    data:
      edited: false
      editors:
      - banghua
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.2431396096944809
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/128ceae78490110ae41202851e84d58e.svg
          fullname: Banghua Zhu
          isHf: false
          isPro: false
          name: banghua
          type: user
        html: "<p>Thank you!! <span data-props=\"{&quot;user&quot;:&quot;macadeliccc&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/macadeliccc\"\
          >@<span class=\"underline\">macadeliccc</span></a></span>\n\n\t</span></span>\
          \ </p>\n"
        raw: 'Thank you!! @macadeliccc '
        updatedAt: '2023-11-28T22:21:22.822Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - macadeliccc
      - count: 1
        reaction: "\U0001F91D"
        users:
        - macadeliccc
      relatedEventId: 656667e293e30c8a60ea5634
    id: 656667e293e30c8a60ea562f
    type: comment
  author: banghua
  content: 'Thank you!! @macadeliccc '
  created_at: 2023-11-28 22:21:22+00:00
  edited: false
  hidden: false
  id: 656667e293e30c8a60ea562f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/128ceae78490110ae41202851e84d58e.svg
      fullname: Banghua Zhu
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: banghua
      type: user
    createdAt: '2023-11-28T22:21:22.000Z'
    data:
      status: merged
    id: 656667e293e30c8a60ea5634
    type: status-change
  author: banghua
  created_at: 2023-11-28 22:21:22+00:00
  id: 656667e293e30c8a60ea5634
  new_status: merged
  type: status-change
is_pull_request: true
merge_commit_oid: c5f53e9fc7978edac5a5ff74e8fe957a6e076212
num: 10
repo_id: berkeley-nest/Starling-LM-7B-alpha
repo_type: model
status: merged
target_branch: refs/heads/main
title: Added code examples that correspond to each prompt format
