!!python/object:huggingface_hub.community.DiscussionWithDetails
author: kchen360
conflicting_files: null
created_at: 2023-11-13 17:52:45+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/947ad2da1f7a9a2466ab90e75e86ab07.svg
      fullname: Kai Chen
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: kchen360
      type: user
    createdAt: '2023-11-13T17:52:45.000Z'
    data:
      edited: false
      editors:
      - kchen360
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.48497411608695984
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/947ad2da1f7a9a2466ab90e75e86ab07.svg
          fullname: Kai Chen
          isHf: false
          isPro: false
          name: kchen360
          type: user
        html: "<p>Hi,</p>\n<p>I tried to run in silico perturbation analysis as tutorial:</p>\n\
          <pre><code>isp = InSilicoPerturber(perturb_type=\"delete\",\n          \
          \              perturb_rank_shift=None,\n                        genes_to_perturb=\"\
          all\",\n                        combos=0,\n                        anchor_gene=None,\n\
          \                        model_type=\"CellClassifier\",\n              \
          \          num_classes=3,\n                        emb_mode=\"cell\",\n\
          \                        cell_emb_style=\"mean_pool\",\n               \
          \         filter_data={\"cell_type\":[\"Cardiomyocyte1\",\"Cardiomyocyte2\"\
          ,\"Cardiomyocyte3\"]},\n                        cell_states_to_model={'state_key':\
          \ 'disease', \n                                              'start_state':\
          \ 'dcm', \n                                              'goal_state': 'nf',\
          \ \n                                              'alt_states': ['hcm']},\n\
          \                        max_ncells=None,\n                        emb_layer=0,\n\
          \                        forward_batch_size=5,\n                       \
          \ nproc=16)\n\nisp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
          ,\n                 \"./data/human_dcm_hcm_nf.dataset\",\n             \
          \    \"./perturb_out/\",\n                 \"emb_test\")\n\nispstats = InSilicoPerturberStats(mode=\"\
          goal_state_shift\",\n                                  genes_perturbed=\"\
          all\",\n                                  combos=0,\n                  \
          \                anchor_gene=None,\n                                  #cell_states_to_model={\"\
          disease\":([\"dcm\"],[\"nf\"],[\"hcm\"])})\n                           \
          \       cell_states_to_model={'state_key': 'disease', \n               \
          \                               'start_state': 'dcm', \n               \
          \                               'goal_state': 'nf', \n                 \
          \                             'alt_states': ['hcm']})\n\nispstats.get_stats(\"\
          ./perturb_out/\",\n                   None,\n                   \"./perturb_stats_out/\"\
          ,\n                   \"emb_test\")\n</code></pre>\n<p>And error occurs\
          \ after a while:</p>\n<pre><code>Filter (num_proc=16): 100%|\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588| 579159/579159 [00:15&lt;00:00, 38123.09 examples/s]\nFilter (num_proc=16):\
          \ 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588| 579159/579159 [00:15&lt;00:00, 36506.16 examples/s]\n\
          Traceback (most recent call last):\n  File \"/home/Geneformer/in_silico_perturbation.py\"\
          , line 66, in &lt;module&gt;\n    isp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
          ,\n  File \"/home/geneformer/in_silico_perturber.py\", line 969, in perturb_data\n\
          \    state_embs_dict = get_cell_state_avg_embs(model,\n  File \"/home/Geneformer/geneformer/in_silico_perturber.py\"\
          , line 290, in get_cell_state_avg_embs\n    outputs = model(\n  File \"\
          /home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 1564, in forward\n    outputs = self.bert(\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 1022, in forward\n    encoder_outputs = self.encoder(\n  File \"\
          /home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 612, in forward\n    layer_outputs = layer_module(\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 497, in forward\n    self_attention_outputs = self.attention(\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 427, in forward\n    self_outputs = self.self(\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n\
          \  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n \
          \ File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 365, in forward\n    context_layer = torch.matmul(attention_probs,\
          \ value_layer)\ntorch.cuda.OutOfMemoryError: CUDA out of memory. Tried to\
          \ allocate 10.00 MiB. GPU 0 has a total capacty of 79.15 GiB of which 7.25\
          \ MiB is free. Including non-PyTorch memory, this process has 79.13 GiB\
          \ memory in use. Of the allocated memory 78.63 GiB is allocated by PyTorch,\
          \ and 12.50 MiB is reserved by PyTorch but unallocated. If reserved but\
          \ unallocated memory is large try setting max_split_size_mb to avoid fragmentation.\
          \  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF\n\
          </code></pre>\n<p>I didn't change any source code and this is the example\
          \ code I tried to run. We have a VRAM of 80 GiB and this error still occurs,\
          \ could I learn if you ever encounter such error and any tip to solve it?\
          \ Thank you very much.</p>\n"
        raw: "Hi,\r\n\r\nI tried to run in silico perturbation analysis as tutorial:\r\
          \n\r\n```\r\nisp = InSilicoPerturber(perturb_type=\"delete\",\r\n      \
          \                  perturb_rank_shift=None,\r\n                        genes_to_perturb=\"\
          all\",\r\n                        combos=0,\r\n                        anchor_gene=None,\r\
          \n                        model_type=\"CellClassifier\",\r\n           \
          \             num_classes=3,\r\n                        emb_mode=\"cell\"\
          ,\r\n                        cell_emb_style=\"mean_pool\",\r\n         \
          \               filter_data={\"cell_type\":[\"Cardiomyocyte1\",\"Cardiomyocyte2\"\
          ,\"Cardiomyocyte3\"]},\r\n                        cell_states_to_model={'state_key':\
          \ 'disease', \r\n                                              'start_state':\
          \ 'dcm', \r\n                                              'goal_state':\
          \ 'nf', \r\n                                              'alt_states':\
          \ ['hcm']},\r\n                        max_ncells=None,\r\n            \
          \            emb_layer=0,\r\n                        forward_batch_size=5,\r\
          \n                        nproc=16)\r\n\r\nisp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
          ,\r\n                 \"./data/human_dcm_hcm_nf.dataset\",\r\n         \
          \        \"./perturb_out/\",\r\n                 \"emb_test\")\r\n\r\nispstats\
          \ = InSilicoPerturberStats(mode=\"goal_state_shift\",\r\n              \
          \                    genes_perturbed=\"all\",\r\n                      \
          \            combos=0,\r\n                                  anchor_gene=None,\r\
          \n                                  #cell_states_to_model={\"disease\":([\"\
          dcm\"],[\"nf\"],[\"hcm\"])})\r\n                                  cell_states_to_model={'state_key':\
          \ 'disease', \r\n                                              'start_state':\
          \ 'dcm', \r\n                                              'goal_state':\
          \ 'nf', \r\n                                              'alt_states':\
          \ ['hcm']})\r\n\r\nispstats.get_stats(\"./perturb_out/\",\r\n          \
          \         None,\r\n                   \"./perturb_stats_out/\",\r\n    \
          \               \"emb_test\")\r\n```\r\n\r\nAnd error occurs after a while:\r\
          \n\r\n```\r\nFilter (num_proc=16): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 579159/579159 [00:15<00:00,\
          \ 38123.09 examples/s]\r\nFilter (num_proc=16): 100%|\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 579159/579159\
          \ [00:15<00:00, 36506.16 examples/s]\r\nTraceback (most recent call last):\r\
          \n  File \"/home/Geneformer/in_silico_perturbation.py\", line 66, in <module>\r\
          \n    isp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
          ,\r\n  File \"/home/geneformer/in_silico_perturber.py\", line 969, in perturb_data\r\
          \n    state_embs_dict = get_cell_state_avg_embs(model,\r\n  File \"/home/Geneformer/geneformer/in_silico_perturber.py\"\
          , line 290, in get_cell_state_avg_embs\r\n    outputs = model(\r\n  File\
          \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 1564, in forward\r\n    outputs = self.bert(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 1022, in forward\r\n    encoder_outputs = self.encoder(\r\n  File\
          \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 612, in forward\r\n    layer_outputs = layer_module(\r\n  File \"\
          /home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 497, in forward\r\n    self_attention_outputs = self.attention(\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 427, in forward\r\n    self_outputs = self.self(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args,\
          \ **kwargs)\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
          , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\
          \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
          , line 365, in forward\r\n    context_layer = torch.matmul(attention_probs,\
          \ value_layer)\r\ntorch.cuda.OutOfMemoryError: CUDA out of memory. Tried\
          \ to allocate 10.00 MiB. GPU 0 has a total capacty of 79.15 GiB of which\
          \ 7.25 MiB is free. Including non-PyTorch memory, this process has 79.13\
          \ GiB memory in use. Of the allocated memory 78.63 GiB is allocated by PyTorch,\
          \ and 12.50 MiB is reserved by PyTorch but unallocated. If reserved but\
          \ unallocated memory is large try setting max_split_size_mb to avoid fragmentation.\
          \  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF\r\
          \n```\r\n\r\nI didn't change any source code and this is the example code\
          \ I tried to run. We have a VRAM of 80 GiB and this error still occurs,\
          \ could I learn if you ever encounter such error and any tip to solve it?\
          \ Thank you very much."
        updatedAt: '2023-11-13T17:52:45.482Z'
      numEdits: 0
      reactions: []
    id: 6552626d09c73282c8b821ba
    type: comment
  author: kchen360
  content: "Hi,\r\n\r\nI tried to run in silico perturbation analysis as tutorial:\r\
    \n\r\n```\r\nisp = InSilicoPerturber(perturb_type=\"delete\",\r\n            \
    \            perturb_rank_shift=None,\r\n                        genes_to_perturb=\"\
    all\",\r\n                        combos=0,\r\n                        anchor_gene=None,\r\
    \n                        model_type=\"CellClassifier\",\r\n                 \
    \       num_classes=3,\r\n                        emb_mode=\"cell\",\r\n     \
    \                   cell_emb_style=\"mean_pool\",\r\n                        filter_data={\"\
    cell_type\":[\"Cardiomyocyte1\",\"Cardiomyocyte2\",\"Cardiomyocyte3\"]},\r\n \
    \                       cell_states_to_model={'state_key': 'disease', \r\n   \
    \                                           'start_state': 'dcm', \r\n       \
    \                                       'goal_state': 'nf', \r\n             \
    \                                 'alt_states': ['hcm']},\r\n                \
    \        max_ncells=None,\r\n                        emb_layer=0,\r\n        \
    \                forward_batch_size=5,\r\n                        nproc=16)\r\n\
    \r\nisp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
    ,\r\n                 \"./data/human_dcm_hcm_nf.dataset\",\r\n               \
    \  \"./perturb_out/\",\r\n                 \"emb_test\")\r\n\r\nispstats = InSilicoPerturberStats(mode=\"\
    goal_state_shift\",\r\n                                  genes_perturbed=\"all\"\
    ,\r\n                                  combos=0,\r\n                         \
    \         anchor_gene=None,\r\n                                  #cell_states_to_model={\"\
    disease\":([\"dcm\"],[\"nf\"],[\"hcm\"])})\r\n                               \
    \   cell_states_to_model={'state_key': 'disease', \r\n                       \
    \                       'start_state': 'dcm', \r\n                           \
    \                   'goal_state': 'nf', \r\n                                 \
    \             'alt_states': ['hcm']})\r\n\r\nispstats.get_stats(\"./perturb_out/\"\
    ,\r\n                   None,\r\n                   \"./perturb_stats_out/\",\r\
    \n                   \"emb_test\")\r\n```\r\n\r\nAnd error occurs after a while:\r\
    \n\r\n```\r\nFilter (num_proc=16): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588| 579159/579159 [00:15<00:00, 38123.09 examples/s]\r\
    \nFilter (num_proc=16): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588| 579159/579159 [00:15<00:00, 36506.16 examples/s]\r\nTraceback\
    \ (most recent call last):\r\n  File \"/home/Geneformer/in_silico_perturbation.py\"\
    , line 66, in <module>\r\n    isp.perturb_data(\"./fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224\"\
    ,\r\n  File \"/home/geneformer/in_silico_perturber.py\", line 969, in perturb_data\r\
    \n    state_embs_dict = get_cell_state_avg_embs(model,\r\n  File \"/home/Geneformer/geneformer/in_silico_perturber.py\"\
    , line 290, in get_cell_state_avg_embs\r\n    outputs = model(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 1564, in forward\r\n    outputs = self.bert(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 1022, in forward\r\n    encoder_outputs = self.encoder(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 612, in forward\r\n    layer_outputs = layer_module(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 497, in forward\r\n    self_attention_outputs = self.attention(\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 427, in forward\r\n    self_outputs = self.self(\r\n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1518, in _wrapped_call_impl\r\n    return self._call_impl(*args, **kwargs)\r\
    \n  File \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/torch/nn/modules/module.py\"\
    , line 1527, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File\
    \ \"/home/anaconda3/envs/biomedical_py310/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\"\
    , line 365, in forward\r\n    context_layer = torch.matmul(attention_probs, value_layer)\r\
    \ntorch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 10.00 MiB.\
    \ GPU 0 has a total capacty of 79.15 GiB of which 7.25 MiB is free. Including\
    \ non-PyTorch memory, this process has 79.13 GiB memory in use. Of the allocated\
    \ memory 78.63 GiB is allocated by PyTorch, and 12.50 MiB is reserved by PyTorch\
    \ but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb\
    \ to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF\r\
    \n```\r\n\r\nI didn't change any source code and this is the example code I tried\
    \ to run. We have a VRAM of 80 GiB and this error still occurs, could I learn\
    \ if you ever encounter such error and any tip to solve it? Thank you very much."
  created_at: 2023-11-13 17:52:45+00:00
  edited: false
  hidden: false
  id: 6552626d09c73282c8b821ba
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/947ad2da1f7a9a2466ab90e75e86ab07.svg
      fullname: Kai Chen
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: kchen360
      type: user
    createdAt: '2023-11-17T20:06:41.000Z'
    data:
      edited: true
      editors:
      - kchen360
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8731853365898132
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/947ad2da1f7a9a2466ab90e75e86ab07.svg
          fullname: Kai Chen
          isHf: false
          isPro: false
          name: kchen360
          type: user
        html: "<p>Follow up this forum, I noticed that memory leaks might happen in\
          \  function get_cell_state_avg_embs() at steps:</p>\n<pre><code>       \
          \     with torch.no_grad():\n                outputs = model(\n        \
          \            input_ids = input_data_minibatch.to(\"cuda\"),\n          \
          \          attention_mask = attention_mask\n                )\n        \
          \    state_embs_i = outputs.hidden_states[layer_to_quant]\n            state_embs_list\
          \ += [state_embs_i]\n</code></pre>\n<p>I noticed that approx 0.1GB will\
          \ be added to cuda in each iteration, with max_ncells=None, it will take\
          \ ~ 1211 iterations (total batch length 60579 with forward batch size of\
          \ 50) to finish the loop. In that case it will need 120GB VRAM to complete\
          \ this loop and I don't think that's what it should be. I know that memory\
          \ will be increased in each iteration since state_embs_list  stays in cuda,\
          \ but could you provide reasonable estimated memory that will be added to\
          \ the cuda in each iteration in your cardiomyopathy knockout cases? Thanks.</p>\n"
        raw: "Follow up this forum, I noticed that memory leaks might happen in  function\
          \ get_cell_state_avg_embs() at steps:\n\n```\n            with torch.no_grad():\n\
          \                outputs = model(\n                    input_ids = input_data_minibatch.to(\"\
          cuda\"),\n                    attention_mask = attention_mask\n        \
          \        )\n            state_embs_i = outputs.hidden_states[layer_to_quant]\n\
          \            state_embs_list += [state_embs_i]\n```\nI noticed that approx\
          \ 0.1GB will be added to cuda in each iteration, with max_ncells=None, it\
          \ will take ~ 1211 iterations (total batch length 60579 with forward batch\
          \ size of 50) to finish the loop. In that case it will need 120GB VRAM to\
          \ complete this loop and I don't think that's what it should be. I know\
          \ that memory will be increased in each iteration since state_embs_list\
          \  stays in cuda, but could you provide reasonable estimated memory that\
          \ will be added to the cuda in each iteration in your cardiomyopathy knockout\
          \ cases? Thanks."
        updatedAt: '2023-11-17T20:25:33.150Z'
      numEdits: 4
      reactions: []
    id: 6557c7d1bf604a77320849fc
    type: comment
  author: kchen360
  content: "Follow up this forum, I noticed that memory leaks might happen in  function\
    \ get_cell_state_avg_embs() at steps:\n\n```\n            with torch.no_grad():\n\
    \                outputs = model(\n                    input_ids = input_data_minibatch.to(\"\
    cuda\"),\n                    attention_mask = attention_mask\n              \
    \  )\n            state_embs_i = outputs.hidden_states[layer_to_quant]\n     \
    \       state_embs_list += [state_embs_i]\n```\nI noticed that approx 0.1GB will\
    \ be added to cuda in each iteration, with max_ncells=None, it will take ~ 1211\
    \ iterations (total batch length 60579 with forward batch size of 50) to finish\
    \ the loop. In that case it will need 120GB VRAM to complete this loop and I don't\
    \ think that's what it should be. I know that memory will be increased in each\
    \ iteration since state_embs_list  stays in cuda, but could you provide reasonable\
    \ estimated memory that will be added to the cuda in each iteration in your cardiomyopathy\
    \ knockout cases? Thanks."
  created_at: 2023-11-17 20:06:41+00:00
  edited: true
  hidden: false
  id: 6557c7d1bf604a77320849fc
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-12-15T09:02:55.000Z'
    data:
      edited: false
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9201596975326538
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: '<p>Thank you for your interest in Geneformer and for your patience!
          We pushed an update that should resolve this issue. If you continue to face
          errors after pulling the updated code, please let us know by either reopening
          this discussion if it''s the same error or opening a new discussion if it''s
          a new error. Please note that the state_embs_dict is now passed after deriving
          it with the EmbExtractor so that it occurs outside of the in silico perturber
          so that it doesn''t need to be repeated when parallelizing the in silico
          perturbation. (see example in examples directory) Thank you!</p>

          '
        raw: Thank you for your interest in Geneformer and for your patience! We pushed
          an update that should resolve this issue. If you continue to face errors
          after pulling the updated code, please let us know by either reopening this
          discussion if it's the same error or opening a new discussion if it's a
          new error. Please note that the state_embs_dict is now passed after deriving
          it with the EmbExtractor so that it occurs outside of the in silico perturber
          so that it doesn't need to be repeated when parallelizing the in silico
          perturbation. (see example in examples directory) Thank you!
        updatedAt: '2023-12-15T09:02:55.626Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - kchen360
      relatedEventId: 657c163f8d360b690d63bb7b
    id: 657c163f8d360b690d63bb7a
    type: comment
  author: ctheodoris
  content: Thank you for your interest in Geneformer and for your patience! We pushed
    an update that should resolve this issue. If you continue to face errors after
    pulling the updated code, please let us know by either reopening this discussion
    if it's the same error or opening a new discussion if it's a new error. Please
    note that the state_embs_dict is now passed after deriving it with the EmbExtractor
    so that it occurs outside of the in silico perturber so that it doesn't need to
    be repeated when parallelizing the in silico perturbation. (see example in examples
    directory) Thank you!
  created_at: 2023-12-15 09:02:55+00:00
  edited: false
  hidden: false
  id: 657c163f8d360b690d63bb7a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-12-15T09:02:55.000Z'
    data:
      status: closed
    id: 657c163f8d360b690d63bb7b
    type: status-change
  author: ctheodoris
  created_at: 2023-12-15 09:02:55+00:00
  id: 657c163f8d360b690d63bb7b
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 276
repo_id: ctheodoris/Geneformer
repo_type: model
status: closed
target_branch: null
title: 'torch.cuda.OutOfMemoryError: CUDA out of memory in in_silico_perturbation'
