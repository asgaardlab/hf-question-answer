!!python/object:huggingface_hub.community.DiscussionWithDetails
author: pchiang5
conflicting_files: null
created_at: 2023-08-03 23:43:13+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
      fullname: PC
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pchiang5
      type: user
    createdAt: '2023-08-04T00:43:13.000Z'
    data:
      edited: false
      editors:
      - pchiang5
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.2968543767929077
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
          fullname: PC
          isHf: false
          isPro: false
          name: pchiang5
          type: user
        html: "<p>Thank you for your help with the tool. </p>\n<p>However, I encountered\
          \ another error <code>too many indices for tensor of dimension 2</code>\
          \ below with the updated version. Was it due to the empty [] that includes\
          \ all the other 27 classes in<code> cell_states_to_model={'state_key': 'cell_type',\
          \ 'start_state': 'A', 'goal_state': 'B', 'alt_states': []},</code>?</p>\n\
          <pre><code>.\n.\n.\n.\n.\nMap (num_proc=20): 100%|\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1682/1682\
          \ [00:00&lt;00:00, 3219.35 examples/s]\nMap (num_proc=20): 100%|\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588| 1681/1681 [00:01&lt;00:00, 853.88 examples/s]\nMap (num_proc=20):\
          \ 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588| 1681/1681 [00:00&lt;00:00, 3065.67 examples/s]\n\
          ---------------------------------------------------------------------------|\
          \ 1334/1681 [00:00&lt;00:00, 4718.28 examples/s]\nIndexError           \
          \                     Traceback (most recent call last)\nCell In[3], line\
          \ 18\n      2 from geneformer import InSilicoPerturberStats\n      3 isp\
          \ = InSilicoPerturber(perturb_type=\"overexpress\",\n      4           \
          \              perturb_rank_shift=None,\n      5                       \
          \  genes_to_perturb=\"all\",\n   (...)\n     16                        \
          \ forward_batch_size=16,\n     17                         nproc=20)\n---&gt;\
          \ 18 isp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
          ,\n     19                  \"/GD/Sequencing_data/benchmark/transformer.dataset\"\
          ,\n     20                  \"/mnt/c/Users/pc/Downloads/GF\",\n     21 \
          \                 \"M7\")\n\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:952,\
          \ in InSilicoPerturber.perturb_data(self, model_directory, input_data_file,\
          \ output_directory, output_prefix)\n    948         return example[state_name]\
          \ in [start_state]\n    950     filtered_input_data = filtered_input_data.filter(filter_for_origin,\
          \ num_proc=self.nproc)\n--&gt; 952 self.in_silico_perturb(model,\n    953\
          \                       filtered_input_data,\n    954                  \
          \     layer_to_quant,\n    955                       state_embs_dict,\n\
          \    956                       output_directory,\n    957              \
          \         output_prefix)\n\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:1096,\
          \ in InSilicoPerturber.in_silico_perturb(self, model, filtered_input_data,\
          \ layer_to_quant, state_embs_dict, output_directory, output_prefix)\n  \
          \ 1089 for combo_lvl in range(self.combos+1):\n   1090     perturbation_batch,\
          \ indices_to_perturb = make_perturbation_batch(example_cell,\n   1091  \
          \                                                                   self.perturb_type,\n\
          \   1092                                                               \
          \      self.tokens_to_perturb,\n   1093                                \
          \                                     self.anchor_token,\n   1094      \
          \                                                               combo_lvl,\n\
          \   1095                                                               \
          \      self.nproc)\n-&gt; 1096     cos_sims_data = quant_cos_sims(model,\n\
          \   1097                                    self.perturb_type,\n   1098\
          \                                    perturbation_batch,\n   1099      \
          \                              self.forward_batch_size,\n   1100       \
          \                             layer_to_quant,\n   1101                 \
          \                   original_emb,\n   1102                             \
          \       self.tokens_to_perturb,\n   1103                               \
          \     indices_to_perturb,\n   1104                                    self.perturb_group,\n\
          \   1105                                    self.cell_states_to_model,\n\
          \   1106                                    state_embs_dict,\n   1107  \
          \                                  self.pad_token_id,\n   1108         \
          \                           model_input_size,\n   1109                 \
          \                   self.nproc)\n   1111     if self.cell_states_to_model\
          \ is None:\n   1112         # update cos sims dict\n   1113         # key\
          \ is tuple of (perturbed_gene, affected_gene)\n   1114         # or (perturbed_gene,\
          \ \"cell_emb\") for avg cell emb change\n   1115         cos_sims_data =\
          \ cos_sims_data.to(\"cuda\")\n\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:389,\
          \ in quant_cos_sims(model, perturb_type, perturbation_batch, forward_batch_size,\
          \ layer_to_quant, original_emb, tokens_to_perturb, indices_to_perturb, perturb_group,\
          \ cell_states_to_model, state_embs_dict, pad_token_id, model_input_size,\
          \ nproc)\n    387     if perturb_group == True:\n    388         overexpressed_to_remove\
          \ = len(tokens_to_perturb)\n--&gt; 389     minibatch_emb = minibatch_emb[:,overexpressed_to_remove:,:]\n\
          \    391 # if quantifying single perturbation in multiple different cells,\
          \ pad original batch and extract embs\n    392 if perturb_group == True:\n\
          \    393     # pad minibatch of original batch to extract embeddings\n \
          \   394     # truncate to the (model input size - # tokens to overexpress)\
          \ to ensure comparability\n    395     # since max input size of perturb\
          \ batch will be reduced by # tokens to overexpress\n\nIndexError: too many\
          \ indices for tensor of dimension 2\n</code></pre>\n"
        raw: "Thank you for your help with the tool. \r\n\r\nHowever, I encountered\
          \ another error `too many indices for tensor of dimension 2` below with\
          \ the updated version. Was it due to the empty [] that includes all the\
          \ other 27 classes in` cell_states_to_model={'state_key': 'cell_type', 'start_state':\
          \ 'A', 'goal_state': 'B', 'alt_states': []},`?\r\n```\r\n.\r\n.\r\n.\r\n\
          .\r\n.\r\nMap (num_proc=20): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1682/1682 [00:00<00:00,\
          \ 3219.35 examples/s]\r\nMap (num_proc=20): 100%|\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          | 1681/1681 [00:01<00:00, 853.88 examples/s]\r\nMap (num_proc=20): 100%|\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588| 1681/1681 [00:00<00:00, 3065.67 examples/s]\r\n---------------------------------------------------------------------------|\
          \ 1334/1681 [00:00<00:00, 4718.28 examples/s]\r\nIndexError            \
          \                    Traceback (most recent call last)\r\nCell In[3], line\
          \ 18\r\n      2 from geneformer import InSilicoPerturberStats\r\n      3\
          \ isp = InSilicoPerturber(perturb_type=\"overexpress\",\r\n      4     \
          \                    perturb_rank_shift=None,\r\n      5               \
          \          genes_to_perturb=\"all\",\r\n   (...)\r\n     16            \
          \             forward_batch_size=16,\r\n     17                        \
          \ nproc=20)\r\n---> 18 isp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
          ,\r\n     19                  \"/GD/Sequencing_data/benchmark/transformer.dataset\"\
          ,\r\n     20                  \"/mnt/c/Users/pc/Downloads/GF\",\r\n    \
          \ 21                  \"M7\")\r\n\r\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:952,\
          \ in InSilicoPerturber.perturb_data(self, model_directory, input_data_file,\
          \ output_directory, output_prefix)\r\n    948         return example[state_name]\
          \ in [start_state]\r\n    950     filtered_input_data = filtered_input_data.filter(filter_for_origin,\
          \ num_proc=self.nproc)\r\n--> 952 self.in_silico_perturb(model,\r\n    953\
          \                       filtered_input_data,\r\n    954                \
          \       layer_to_quant,\r\n    955                       state_embs_dict,\r\
          \n    956                       output_directory,\r\n    957           \
          \            output_prefix)\r\n\r\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:1096,\
          \ in InSilicoPerturber.in_silico_perturb(self, model, filtered_input_data,\
          \ layer_to_quant, state_embs_dict, output_directory, output_prefix)\r\n\
          \   1089 for combo_lvl in range(self.combos+1):\r\n   1090     perturbation_batch,\
          \ indices_to_perturb = make_perturbation_batch(example_cell,\r\n   1091\
          \                                                                     self.perturb_type,\r\
          \n   1092                                                              \
          \       self.tokens_to_perturb,\r\n   1093                             \
          \                                        self.anchor_token,\r\n   1094 \
          \                                                                    combo_lvl,\r\
          \n   1095                                                              \
          \       self.nproc)\r\n-> 1096     cos_sims_data = quant_cos_sims(model,\r\
          \n   1097                                    self.perturb_type,\r\n   1098\
          \                                    perturbation_batch,\r\n   1099    \
          \                                self.forward_batch_size,\r\n   1100   \
          \                                 layer_to_quant,\r\n   1101           \
          \                         original_emb,\r\n   1102                     \
          \               self.tokens_to_perturb,\r\n   1103                     \
          \               indices_to_perturb,\r\n   1104                         \
          \           self.perturb_group,\r\n   1105                             \
          \       self.cell_states_to_model,\r\n   1106                          \
          \          state_embs_dict,\r\n   1107                                 \
          \   self.pad_token_id,\r\n   1108                                    model_input_size,\r\
          \n   1109                                    self.nproc)\r\n   1111    \
          \ if self.cell_states_to_model is None:\r\n   1112         # update cos\
          \ sims dict\r\n   1113         # key is tuple of (perturbed_gene, affected_gene)\r\
          \n   1114         # or (perturbed_gene, \"cell_emb\") for avg cell emb change\r\
          \n   1115         cos_sims_data = cos_sims_data.to(\"cuda\")\r\n\r\nFile\
          \ /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:389,\
          \ in quant_cos_sims(model, perturb_type, perturbation_batch, forward_batch_size,\
          \ layer_to_quant, original_emb, tokens_to_perturb, indices_to_perturb, perturb_group,\
          \ cell_states_to_model, state_embs_dict, pad_token_id, model_input_size,\
          \ nproc)\r\n    387     if perturb_group == True:\r\n    388         overexpressed_to_remove\
          \ = len(tokens_to_perturb)\r\n--> 389     minibatch_emb = minibatch_emb[:,overexpressed_to_remove:,:]\r\
          \n    391 # if quantifying single perturbation in multiple different cells,\
          \ pad original batch and extract embs\r\n    392 if perturb_group == True:\r\
          \n    393     # pad minibatch of original batch to extract embeddings\r\n\
          \    394     # truncate to the (model input size - # tokens to overexpress)\
          \ to ensure comparability\r\n    395     # since max input size of perturb\
          \ batch will be reduced by # tokens to overexpress\r\n\r\nIndexError: too\
          \ many indices for tensor of dimension 2\r\n```"
        updatedAt: '2023-08-04T00:43:13.797Z'
      numEdits: 0
      reactions: []
    id: 64cc49a19172674336440f3c
    type: comment
  author: pchiang5
  content: "Thank you for your help with the tool. \r\n\r\nHowever, I encountered\
    \ another error `too many indices for tensor of dimension 2` below with the updated\
    \ version. Was it due to the empty [] that includes all the other 27 classes in`\
    \ cell_states_to_model={'state_key': 'cell_type', 'start_state': 'A', 'goal_state':\
    \ 'B', 'alt_states': []},`?\r\n```\r\n.\r\n.\r\n.\r\n.\r\n.\r\nMap (num_proc=20):\
    \ 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    | 1682/1682 [00:00<00:00, 3219.35 examples/s]\r\nMap (num_proc=20): 100%|\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1681/1681\
    \ [00:01<00:00, 853.88 examples/s]\r\nMap (num_proc=20): 100%|\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1681/1681 [00:00<00:00,\
    \ 3065.67 examples/s]\r\n---------------------------------------------------------------------------|\
    \ 1334/1681 [00:00<00:00, 4718.28 examples/s]\r\nIndexError                  \
    \              Traceback (most recent call last)\r\nCell In[3], line 18\r\n  \
    \    2 from geneformer import InSilicoPerturberStats\r\n      3 isp = InSilicoPerturber(perturb_type=\"\
    overexpress\",\r\n      4                         perturb_rank_shift=None,\r\n\
    \      5                         genes_to_perturb=\"all\",\r\n   (...)\r\n   \
    \  16                         forward_batch_size=16,\r\n     17              \
    \           nproc=20)\r\n---> 18 isp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
    ,\r\n     19                  \"/GD/Sequencing_data/benchmark/transformer.dataset\"\
    ,\r\n     20                  \"/mnt/c/Users/pc/Downloads/GF\",\r\n     21   \
    \               \"M7\")\r\n\r\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:952,\
    \ in InSilicoPerturber.perturb_data(self, model_directory, input_data_file, output_directory,\
    \ output_prefix)\r\n    948         return example[state_name] in [start_state]\r\
    \n    950     filtered_input_data = filtered_input_data.filter(filter_for_origin,\
    \ num_proc=self.nproc)\r\n--> 952 self.in_silico_perturb(model,\r\n    953   \
    \                    filtered_input_data,\r\n    954                       layer_to_quant,\r\
    \n    955                       state_embs_dict,\r\n    956                  \
    \     output_directory,\r\n    957                       output_prefix)\r\n\r\n\
    File /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:1096,\
    \ in InSilicoPerturber.in_silico_perturb(self, model, filtered_input_data, layer_to_quant,\
    \ state_embs_dict, output_directory, output_prefix)\r\n   1089 for combo_lvl in\
    \ range(self.combos+1):\r\n   1090     perturbation_batch, indices_to_perturb\
    \ = make_perturbation_batch(example_cell,\r\n   1091                         \
    \                                            self.perturb_type,\r\n   1092   \
    \                                                                  self.tokens_to_perturb,\r\
    \n   1093                                                                    \
    \ self.anchor_token,\r\n   1094                                              \
    \                       combo_lvl,\r\n   1095                                \
    \                                     self.nproc)\r\n-> 1096     cos_sims_data\
    \ = quant_cos_sims(model,\r\n   1097                                    self.perturb_type,\r\
    \n   1098                                    perturbation_batch,\r\n   1099  \
    \                                  self.forward_batch_size,\r\n   1100       \
    \                             layer_to_quant,\r\n   1101                     \
    \               original_emb,\r\n   1102                                    self.tokens_to_perturb,\r\
    \n   1103                                    indices_to_perturb,\r\n   1104  \
    \                                  self.perturb_group,\r\n   1105            \
    \                        self.cell_states_to_model,\r\n   1106               \
    \                     state_embs_dict,\r\n   1107                            \
    \        self.pad_token_id,\r\n   1108                                    model_input_size,\r\
    \n   1109                                    self.nproc)\r\n   1111     if self.cell_states_to_model\
    \ is None:\r\n   1112         # update cos sims dict\r\n   1113         # key\
    \ is tuple of (perturbed_gene, affected_gene)\r\n   1114         # or (perturbed_gene,\
    \ \"cell_emb\") for avg cell emb change\r\n   1115         cos_sims_data = cos_sims_data.to(\"\
    cuda\")\r\n\r\nFile /home/pc/miniconda3/envs/geneformer/lib/python3.10/site-packages/geneformer/in_silico_perturber.py:389,\
    \ in quant_cos_sims(model, perturb_type, perturbation_batch, forward_batch_size,\
    \ layer_to_quant, original_emb, tokens_to_perturb, indices_to_perturb, perturb_group,\
    \ cell_states_to_model, state_embs_dict, pad_token_id, model_input_size, nproc)\r\
    \n    387     if perturb_group == True:\r\n    388         overexpressed_to_remove\
    \ = len(tokens_to_perturb)\r\n--> 389     minibatch_emb = minibatch_emb[:,overexpressed_to_remove:,:]\r\
    \n    391 # if quantifying single perturbation in multiple different cells, pad\
    \ original batch and extract embs\r\n    392 if perturb_group == True:\r\n   \
    \ 393     # pad minibatch of original batch to extract embeddings\r\n    394 \
    \    # truncate to the (model input size - # tokens to overexpress) to ensure\
    \ comparability\r\n    395     # since max input size of perturb batch will be\
    \ reduced by # tokens to overexpress\r\n\r\nIndexError: too many indices for tensor\
    \ of dimension 2\r\n```"
  created_at: 2023-08-03 23:43:13+00:00
  edited: false
  hidden: false
  id: 64cc49a19172674336440f3c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-08-04T00:52:59.000Z'
    data:
      edited: false
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7920868992805481
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: '<p>Thank you for your question. Please update your comment with the
          arguments you are using to set up the in silico perturber so we can reproduce
          the error and help troubleshoot.</p>

          '
        raw: Thank you for your question. Please update your comment with the arguments
          you are using to set up the in silico perturber so we can reproduce the
          error and help troubleshoot.
        updatedAt: '2023-08-04T00:52:59.369Z'
      numEdits: 0
      reactions: []
    id: 64cc4bebe3cc4a476d8ec526
    type: comment
  author: ctheodoris
  content: Thank you for your question. Please update your comment with the arguments
    you are using to set up the in silico perturber so we can reproduce the error
    and help troubleshoot.
  created_at: 2023-08-03 23:52:59+00:00
  edited: false
  hidden: false
  id: 64cc4bebe3cc4a476d8ec526
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
      fullname: PC
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pchiang5
      type: user
    createdAt: '2023-08-04T01:04:34.000Z'
    data:
      edited: false
      editors:
      - pchiang5
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.34143561124801636
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
          fullname: PC
          isHf: false
          isPro: false
          name: pchiang5
          type: user
        html: "<p>Thank you for the reminder. Please see below:</p>\n<pre><code>import\
          \ os\nos.environ['TRANSFORMERS_CACHE'] = '/mnt/c/Users/pc/Downloads/cache/'\n\
          from geneformer import InSilicoPerturber\nfrom geneformer import InSilicoPerturberStats\n\
          isp = InSilicoPerturber(perturb_type=\"overexpress\",\n                \
          \        perturb_rank_shift=None,\n                        genes_to_perturb=\"\
          all\",\n                        combos=0,\n                        anchor_gene=None,\n\
          \                        model_type=\"CellClassifier\",\n              \
          \          num_classes=29,\n                        emb_mode=\"cell\",\n\
          \                        cell_emb_style=\"mean_pool\",\n               \
          \         cell_states_to_model={'state_key': 'cell_type', 'start_state':\
          \ 'A', 'goal_state': 'B', 'alt_states': []},\n                        max_ncells=2000,\n\
          \                        emb_layer=0,\n                        forward_batch_size=16,\n\
          \                        nproc=20)\nisp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
          ,\n                 \"/GD/Sequencing_data/benchmark/transformer.dataset\"\
          ,\n                 \"/mnt/c/Users/pc/Downloads/GF\",\n                \
          \ \"M7\")\n</code></pre>\n"
        raw: "Thank you for the reminder. Please see below:\n\n```\nimport os\nos.environ['TRANSFORMERS_CACHE']\
          \ = '/mnt/c/Users/pc/Downloads/cache/'\nfrom geneformer import InSilicoPerturber\n\
          from geneformer import InSilicoPerturberStats\nisp = InSilicoPerturber(perturb_type=\"\
          overexpress\",\n                        perturb_rank_shift=None,\n     \
          \                   genes_to_perturb=\"all\",\n                        combos=0,\n\
          \                        anchor_gene=None,\n                        model_type=\"\
          CellClassifier\",\n                        num_classes=29,\n           \
          \             emb_mode=\"cell\",\n                        cell_emb_style=\"\
          mean_pool\",\n                        cell_states_to_model={'state_key':\
          \ 'cell_type', 'start_state': 'A', 'goal_state': 'B', 'alt_states': []},\n\
          \                        max_ncells=2000,\n                        emb_layer=0,\n\
          \                        forward_batch_size=16,\n                      \
          \  nproc=20)\nisp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
          ,\n                 \"/GD/Sequencing_data/benchmark/transformer.dataset\"\
          ,\n                 \"/mnt/c/Users/pc/Downloads/GF\",\n                \
          \ \"M7\")\n```"
        updatedAt: '2023-08-04T01:04:34.066Z'
      numEdits: 0
      reactions: []
    id: 64cc4ea278fad0f5b69e3784
    type: comment
  author: pchiang5
  content: "Thank you for the reminder. Please see below:\n\n```\nimport os\nos.environ['TRANSFORMERS_CACHE']\
    \ = '/mnt/c/Users/pc/Downloads/cache/'\nfrom geneformer import InSilicoPerturber\n\
    from geneformer import InSilicoPerturberStats\nisp = InSilicoPerturber(perturb_type=\"\
    overexpress\",\n                        perturb_rank_shift=None,\n           \
    \             genes_to_perturb=\"all\",\n                        combos=0,\n \
    \                       anchor_gene=None,\n                        model_type=\"\
    CellClassifier\",\n                        num_classes=29,\n                 \
    \       emb_mode=\"cell\",\n                        cell_emb_style=\"mean_pool\"\
    ,\n                        cell_states_to_model={'state_key': 'cell_type', 'start_state':\
    \ 'A', 'goal_state': 'B', 'alt_states': []},\n                        max_ncells=2000,\n\
    \                        emb_layer=0,\n                        forward_batch_size=16,\n\
    \                        nproc=20)\nisp.perturb_data(\"/mnt/c/Users/pc/Downloads/GF/230803_geneformer_CellClassifier_bone_marrow_L2048_B8_LR0.00028292192255361916_LSlinear_WU559.5193527108581_E1_Oadamw_F2\"\
    ,\n                 \"/GD/Sequencing_data/benchmark/transformer.dataset\",\n \
    \                \"/mnt/c/Users/pc/Downloads/GF\",\n                 \"M7\")\n\
    ```"
  created_at: 2023-08-04 00:04:34+00:00
  edited: false
  hidden: false
  id: 64cc4ea278fad0f5b69e3784
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-08-04T18:14:42.000Z'
    data:
      edited: false
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9324440360069275
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: '<p>Thank you for including the set up you are using. I am not encountering
          this error when running with your arguments. I assume your cell classification
          fine-tuned model was trained to distinguish 29 classes and I assume you
          are using the current updated version. I also assume that the number of
          genes detected in all of your cells is &gt;2. Assuming all that is true,
          please email me a link to your dataset and fine-tuned model so I can reproduce
          the error and help you troubleshoot.</p>

          '
        raw: Thank you for including the set up you are using. I am not encountering
          this error when running with your arguments. I assume your cell classification
          fine-tuned model was trained to distinguish 29 classes and I assume you
          are using the current updated version. I also assume that the number of
          genes detected in all of your cells is >2. Assuming all that is true, please
          email me a link to your dataset and fine-tuned model so I can reproduce
          the error and help you troubleshoot.
        updatedAt: '2023-08-04T18:14:42.061Z'
      numEdits: 0
      reactions: []
    id: 64cd40127a7305c589dcf3c8
    type: comment
  author: ctheodoris
  content: Thank you for including the set up you are using. I am not encountering
    this error when running with your arguments. I assume your cell classification
    fine-tuned model was trained to distinguish 29 classes and I assume you are using
    the current updated version. I also assume that the number of genes detected in
    all of your cells is >2. Assuming all that is true, please email me a link to
    your dataset and fine-tuned model so I can reproduce the error and help you troubleshoot.
  created_at: 2023-08-04 17:14:42+00:00
  edited: false
  hidden: false
  id: 64cd40127a7305c589dcf3c8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
      fullname: PC
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pchiang5
      type: user
    createdAt: '2023-08-08T01:05:32.000Z'
    data:
      edited: false
      editors:
      - pchiang5
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9686523079872131
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
          fullname: PC
          isHf: false
          isPro: false
          name: pchiang5
          type: user
        html: '<p>Thank you for being so willing to help. I have emailed the fine-tuned
          model and the corresponding dataset to you. </p>

          '
        raw: 'Thank you for being so willing to help. I have emailed the fine-tuned
          model and the corresponding dataset to you. '
        updatedAt: '2023-08-08T01:05:32.545Z'
      numEdits: 0
      reactions: []
    id: 64d194dc01931c60164e0598
    type: comment
  author: pchiang5
  content: 'Thank you for being so willing to help. I have emailed the fine-tuned
    model and the corresponding dataset to you. '
  created_at: 2023-08-08 00:05:32+00:00
  edited: false
  hidden: false
  id: 64d194dc01931c60164e0598
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
      fullname: PC
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pchiang5
      type: user
    createdAt: '2023-08-21T01:06:07.000Z'
    data:
      edited: false
      editors:
      - pchiang5
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9418847560882568
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
          fullname: PC
          isHf: false
          isPro: false
          name: pchiang5
          type: user
        html: '<p>Thank you for being so willing to help again. After switching to
          the cpu mode, I got it to work by setting <code>forward_batch_size=400</code>.
          Thus, the issue might be related to low batch size with 4GB VRAM. </p>

          '
        raw: 'Thank you for being so willing to help again. After switching to the
          cpu mode, I got it to work by setting `forward_batch_size=400`. Thus, the
          issue might be related to low batch size with 4GB VRAM. '
        updatedAt: '2023-08-21T01:06:07.403Z'
      numEdits: 0
      reactions: []
      relatedEventId: 64e2b87fc0edca443ece047f
    id: 64e2b87fc0edca443ece047b
    type: comment
  author: pchiang5
  content: 'Thank you for being so willing to help again. After switching to the cpu
    mode, I got it to work by setting `forward_batch_size=400`. Thus, the issue might
    be related to low batch size with 4GB VRAM. '
  created_at: 2023-08-21 00:06:07+00:00
  edited: false
  hidden: false
  id: 64e2b87fc0edca443ece047b
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/1092f31a9ffd1e9813369b91311f765a.svg
      fullname: PC
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pchiang5
      type: user
    createdAt: '2023-08-21T01:06:07.000Z'
    data:
      status: closed
    id: 64e2b87fc0edca443ece047f
    type: status-change
  author: pchiang5
  created_at: 2023-08-21 00:06:07+00:00
  id: 64e2b87fc0edca443ece047f
  new_status: closed
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-08-21T04:56:05.000Z'
    data:
      edited: false
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6590064764022827
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: '<p>Thank you for this information! </p>

          '
        raw: 'Thank you for this information! '
        updatedAt: '2023-08-21T04:56:05.958Z'
      numEdits: 0
      reactions: []
    id: 64e2ee65864e78652ed90cc2
    type: comment
  author: ctheodoris
  content: 'Thank you for this information! '
  created_at: 2023-08-21 03:56:05+00:00
  edited: false
  hidden: false
  id: 64e2ee65864e78652ed90cc2
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 169
repo_id: ctheodoris/Geneformer
repo_type: model
status: closed
target_branch: null
title: 'in_silico_perturbation: too many indices for tensor of dimension 2'
