!!python/object:huggingface_hub.community.DiscussionWithDetails
author: tnnandi
conflicting_files: null
created_at: 2023-08-13 17:53:17+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/4b65c737f729ea9255983681519cb247.svg
      fullname: Tarak Nandi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: tnnandi
      type: user
    createdAt: '2023-08-13T18:53:17.000Z'
    data:
      edited: true
      editors:
      - tnnandi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.816289484500885
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/4b65c737f729ea9255983681519cb247.svg
          fullname: Tarak Nandi
          isHf: false
          isPro: false
          name: tnnandi
          type: user
        html: '<p>Not sure if I''m missing something, but it seems the attribute names
          in the loom file are not mapped in tokenizer.py according to the "custom_attr_name_dict"
          dictionary passed to the TranscriptomeTokenizer class instance. </p>

          <p>This shouldn''t be an issue if the attribute names in the loom file are
          consistent with those hard-coded in tokenizer.py (e.g., "ensembl_id", "n_counts"),
          but will be problematic if they differ (for which we use something like
          custom_attr_name_dict={"ensembl_id":"gene_ids", "n_counts":"nCount_RNA"}
          to do the name mapping)</p>

          <p>This can be easily fixed by adding something like data.ra[self.custom_attr_name_dict["ensembl_id"]]
          in place of data.ra["ensembl_id"] (along with other related changes) in
          tokenizer.py and changing attr_key: [] for attr_key in self.custom_attr_name_dict.keys()
          to attr_key: [] for attr_key in self.custom_attr_name_dict.values() in the
          tokenize_file function.</p>

          '
        raw: "Not sure if I'm missing something, but it seems the attribute names\
          \ in the loom file are not mapped in tokenizer.py according to the \"custom_attr_name_dict\"\
          \ dictionary passed to the TranscriptomeTokenizer class instance. \n\nThis\
          \ shouldn't be an issue if the attribute names in the loom file are consistent\
          \ with those hard-coded in tokenizer.py (e.g., \"ensembl_id\", \"n_counts\"\
          ), but will be problematic if they differ (for which we use something like\
          \ custom_attr_name_dict={\"ensembl_id\":\"gene_ids\", \"n_counts\":\"nCount_RNA\"\
          } to do the name mapping)\n\nThis can be easily fixed by adding something\
          \ like data.ra[self.custom_attr_name_dict[\"ensembl_id\"]] in place of data.ra[\"\
          ensembl_id\"] (along with other related changes) in tokenizer.py and changing\
          \ attr_key: [] for attr_key in self.custom_attr_name_dict.keys() to attr_key:\
          \ [] for attr_key in self.custom_attr_name_dict.values() in the tokenize_file\
          \ function."
        updatedAt: '2023-08-13T23:36:00.031Z'
      numEdits: 7
      reactions: []
    id: 64d9269d620c17bfa0aaef1a
    type: comment
  author: tnnandi
  content: "Not sure if I'm missing something, but it seems the attribute names in\
    \ the loom file are not mapped in tokenizer.py according to the \"custom_attr_name_dict\"\
    \ dictionary passed to the TranscriptomeTokenizer class instance. \n\nThis shouldn't\
    \ be an issue if the attribute names in the loom file are consistent with those\
    \ hard-coded in tokenizer.py (e.g., \"ensembl_id\", \"n_counts\"), but will be\
    \ problematic if they differ (for which we use something like custom_attr_name_dict={\"\
    ensembl_id\":\"gene_ids\", \"n_counts\":\"nCount_RNA\"} to do the name mapping)\n\
    \nThis can be easily fixed by adding something like data.ra[self.custom_attr_name_dict[\"\
    ensembl_id\"]] in place of data.ra[\"ensembl_id\"] (along with other related changes)\
    \ in tokenizer.py and changing attr_key: [] for attr_key in self.custom_attr_name_dict.keys()\
    \ to attr_key: [] for attr_key in self.custom_attr_name_dict.values() in the tokenize_file\
    \ function."
  created_at: 2023-08-13 17:53:17+00:00
  edited: true
  hidden: false
  id: 64d9269d620c17bfa0aaef1a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-08-13T23:29:41.000Z'
    data:
      edited: false
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8697123527526855
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: "<p>Thank you for your interest in Geneformer! Please refer to the instructions\
          \ in the example for tokenizing transcriptomes for detailed information\
          \ on how to prepare .loom files as the input for the tokenizer. As discussed\
          \ there, \"ensembl_id\" and \"n_counts\" are the required row and column\
          \ attributes, respectively. If there is a column \u201Cfilter_pass\u201D\
          \ with a binary indicator of which cells to include, it will be used for\
          \ filtering the cells. The custom cell attribute dictionary is not meant\
          \ to indicate keys that are recognizable by the script for its necessary\
          \ functions but only meant to indicate cell attributes (not gene attributes)\
          \ that should be included as a column in the final tokenized file as metadata.\
          \ The keys indicate the name of the attribute in the starting .loom file,\
          \ while the values indicate what the user would like to name the column\
          \ in the output .dataset. The dictionary functionality is just to provide\
          \ the option to the user to rename the attribute should they want to. Of\
          \ note, the required cell attribute \u201Cn_counts\u201D will not be included\
          \ as a column in the final tokenized file unless provided as a key in this\
          \ custom cell attribute dictionary. The script can be run without a custom\
          \ cell attribute dictionary to tokenize the data without any metadata columns\
          \ added to the final .dataset output file. Please see loompy api documentation\
          \ for information on how to change the name of a cell or row attribute in\
          \ the initial .loom file to match the expected format for the two required\
          \ attributes discussed above. </p>\n"
        raw: "Thank you for your interest in Geneformer! Please refer to the instructions\
          \ in the example for tokenizing transcriptomes for detailed information\
          \ on how to prepare .loom files as the input for the tokenizer. As discussed\
          \ there, \"ensembl_id\" and \"n_counts\" are the required row and column\
          \ attributes, respectively. If there is a column \u201Cfilter_pass\u201D\
          \ with a binary indicator of which cells to include, it will be used for\
          \ filtering the cells. The custom cell attribute dictionary is not meant\
          \ to indicate keys that are recognizable by the script for its necessary\
          \ functions but only meant to indicate cell attributes (not gene attributes)\
          \ that should be included as a column in the final tokenized file as metadata.\
          \ The keys indicate the name of the attribute in the starting .loom file,\
          \ while the values indicate what the user would like to name the column\
          \ in the output .dataset. The dictionary functionality is just to provide\
          \ the option to the user to rename the attribute should they want to. Of\
          \ note, the required cell attribute \u201Cn_counts\u201D will not be included\
          \ as a column in the final tokenized file unless provided as a key in this\
          \ custom cell attribute dictionary. The script can be run without a custom\
          \ cell attribute dictionary to tokenize the data without any metadata columns\
          \ added to the final .dataset output file. Please see loompy api documentation\
          \ for information on how to change the name of a cell or row attribute in\
          \ the initial .loom file to match the expected format for the two required\
          \ attributes discussed above. "
        updatedAt: '2023-08-13T23:29:41.944Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - tnnandi
      relatedEventId: 64d96766a787c9bc7bdb8f26
    id: 64d96765a787c9bc7bdb8f23
    type: comment
  author: ctheodoris
  content: "Thank you for your interest in Geneformer! Please refer to the instructions\
    \ in the example for tokenizing transcriptomes for detailed information on how\
    \ to prepare .loom files as the input for the tokenizer. As discussed there, \"\
    ensembl_id\" and \"n_counts\" are the required row and column attributes, respectively.\
    \ If there is a column \u201Cfilter_pass\u201D with a binary indicator of which\
    \ cells to include, it will be used for filtering the cells. The custom cell attribute\
    \ dictionary is not meant to indicate keys that are recognizable by the script\
    \ for its necessary functions but only meant to indicate cell attributes (not\
    \ gene attributes) that should be included as a column in the final tokenized\
    \ file as metadata. The keys indicate the name of the attribute in the starting\
    \ .loom file, while the values indicate what the user would like to name the column\
    \ in the output .dataset. The dictionary functionality is just to provide the\
    \ option to the user to rename the attribute should they want to. Of note, the\
    \ required cell attribute \u201Cn_counts\u201D will not be included as a column\
    \ in the final tokenized file unless provided as a key in this custom cell attribute\
    \ dictionary. The script can be run without a custom cell attribute dictionary\
    \ to tokenize the data without any metadata columns added to the final .dataset\
    \ output file. Please see loompy api documentation for information on how to change\
    \ the name of a cell or row attribute in the initial .loom file to match the expected\
    \ format for the two required attributes discussed above. "
  created_at: 2023-08-13 22:29:41+00:00
  edited: false
  hidden: false
  id: 64d96765a787c9bc7bdb8f23
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-08-13T23:29:42.000Z'
    data:
      status: closed
    id: 64d96766a787c9bc7bdb8f26
    type: status-change
  author: ctheodoris
  created_at: 2023-08-13 22:29:42+00:00
  id: 64d96766a787c9bc7bdb8f26
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 216
repo_id: ctheodoris/Geneformer
repo_type: model
status: closed
target_branch: null
title: Missing dictionary mapping in tokenizer.py
