!!python/object:huggingface_hub.community.DiscussionWithDetails
author: MinieRosie
conflicting_files: null
created_at: 2023-09-16 21:48:54+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/87affbf02e38d7088fb2b90ea634836f.svg
      fullname: Tara
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: MinieRosie
      type: user
    createdAt: '2023-09-16T22:48:54.000Z'
    data:
      edited: true
      editors:
      - MinieRosie
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7234815955162048
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/87affbf02e38d7088fb2b90ea634836f.svg
          fullname: Tara
          isHf: false
          isPro: false
          name: MinieRosie
          type: user
        html: "<p>Hello I am excited to implement Geneformer on my own data. What\
          \ I am doing first is I am trying to replicate the results from the manuscript\
          \ (in particular supplementary table 12, sheet titled DCM_del_tx) to make\
          \ sure I am using Geneformer correctly. </p>\n<p>Here is the code I am running,\
          \ I copied a lot of the parameters from your example \"in_silico_pertubation.ipynb\"\
          . The input model is the 220224 fine-tuned model you provide and the human_dcm_hcm_nf.dataset\
          \ tokenized file that is also provided. </p>\n<pre><code class=\"language-{python}\"\
          >\nfrom geneformer import InSilicoPerturber\nfrom geneformer import InSilicoPerturberStats\n\
          \nisp = InSilicoPerturber(perturb_type=\"delete\",\n                   \
          \     perturb_rank_shift=None,\n                        genes_to_perturb=\"\
          all\",\n                        combos=0,\n                        anchor_gene=None,\n\
          \                        model_type=\"CellClassifier\",\n              \
          \          num_classes=3,\n                        emb_mode=\"cell\",\n\
          \                        cell_emb_style=\"mean_pool\",\n               \
          \         cell_states_to_model={'state_key':'disease',\n               \
          \                               'start_state':'dcm',\n                 \
          \                             'goal_state':'nf',\n                     \
          \                         'alt_states':['hcm']},\n                     \
          \   max_ncells=10000,\n                        emb_layer=0,\n          \
          \              forward_batch_size=50,\n                        nproc=32)\n\
          \                    \nisp.perturb_data(\"/yanketn/TOOLS/Geneformer/fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224/\"\
          ,\n                 \"/yanketn/ANALYSIS/Geneformer/human_dcm_hcm_nf.dataset/\"\
          ,\n                 \"/yanketn/ANALYSIS/Geneformer/\",\n               \
          \  \"test_geneformer_fig6_geneformertoken_10k\")\n\nispstats = InSilicoPerturberStats(mode=\"\
          goal_state_shift\",\n                                  genes_perturbed=\"\
          all\",\n                                  combos=0,\n                  \
          \                anchor_gene=None,\n                                  cell_states_to_model={\"\
          disease\":([\"dcm\"],[\"nf\"],[\"hcm\"])})\n\n\nispstats.get_stats(\"/yanketn/ANALYSIS/Geneformer/\"\
          ,\n                   None,\n                   \"/yanketn/ANALYSIS/Geneformer/\"\
          ,\n                   \"test_fig6_stats_geneformertoken_10k\")\n\n</code></pre>\n\
          <p>The first difference I saw were the number of unique genes detected.\
          \ My run detects 17419 genes and from your supplemental table 12 there are\
          \ 17031 unique genes. I get r^2 of 0.68 which seems reasonable to me.</p>\n\
          <p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/8_HacvXTwZO-aBOQw00Z8.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.20.49 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/8_HacvXTwZO-aBOQw00Z8.png\"\
          ></a></p>\n<p>I next compare the shift and FDR columns between the supplemental\
          \ table 12 and my own results and this is where I see big differences. </p>\n\
          <p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZPAu_6FPuQFsp17UYEuBz.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.22.25 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZPAu_6FPuQFsp17UYEuBz.png\"\
          ></a><br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ts1mbUcxGQLA7kR2wGm3r.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.23.36 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ts1mbUcxGQLA7kR2wGm3r.png\"\
          ></a><br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/v4jzqFWLBzHFPHZE378ZI.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.24.38 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/v4jzqFWLBzHFPHZE378ZI.png\"\
          ></a><br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/Nn-NIRsteg0nXxmsQlhTO.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.25.10 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/Nn-NIRsteg0nXxmsQlhTO.png\"\
          ></a></p>\n<p>I also looked at the raw data to compare some of genes mentioned\
          \ in the manuscript: </p>\n<p>From table 12 DCM_del_tx :<br><a rel=\"nofollow\"\
          \ href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZZWAK0f4eszbe_H2lwTF9.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.25.53 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZZWAK0f4eszbe_H2lwTF9.png\"\
          ></a></p>\n<p>From my run: </p>\n<p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/cYmLhnl3farRZqSNTlBg7.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.40.04 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/cYmLhnl3farRZqSNTlBg7.png\"\
          ></a></p>\n<p>I also compared these genes too: </p>\n<p><a rel=\"nofollow\"\
          \ href=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/eWbUuZQLAdaOSsdchzgCV.png\"\
          ><img alt=\"Screen Shot 2023-09-16 at 6.41.09 PM.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/eWbUuZQLAdaOSsdchzgCV.png\"\
          ></a></p>\n<p>Lastly, I intersected the \"significant\" candidate genes..the\
          \ supplemental table 12 marks about 250 genes where the FDR is &lt; 0.05,\
          \ and the NF shift is positive, the HCM shift is negative in the table.\
          \ </p>\n<p>I only get about 135 genes that meet this criteria that match\
          \ between the table from the manuscript and my own run of geneformer. However\
          \ when I run gene-ontology BP, I get many of the same ontologies that you\
          \ report in your supplemental table 15. </p>\n<p>The only thing I could\
          \ think that would make the outputs so different from one another is from\
          \ the number of cells tested. Can you give any insight as to why my results\
          \ would be so different? I just want to make sure I have geneformer running\
          \ correctly before I run my own data on it. Thank you very much for your\
          \ time. </p>\n"
        raw: "Hello I am excited to implement Geneformer on my own data. What I am\
          \ doing first is I am trying to replicate the results from the manuscript\
          \ (in particular supplementary table 12, sheet titled DCM_del_tx) to make\
          \ sure I am using Geneformer correctly. \n\nHere is the code I am running,\
          \ I copied a lot of the parameters from your example \"in_silico_pertubation.ipynb\"\
          . The input model is the 220224 fine-tuned model you provide and the human_dcm_hcm_nf.dataset\
          \ tokenized file that is also provided. \n\n```{python}\n\nfrom geneformer\
          \ import InSilicoPerturber\nfrom geneformer import InSilicoPerturberStats\n\
          \nisp = InSilicoPerturber(perturb_type=\"delete\",\n                   \
          \     perturb_rank_shift=None,\n                        genes_to_perturb=\"\
          all\",\n                        combos=0,\n                        anchor_gene=None,\n\
          \                        model_type=\"CellClassifier\",\n              \
          \          num_classes=3,\n                        emb_mode=\"cell\",\n\
          \                        cell_emb_style=\"mean_pool\",\n               \
          \         cell_states_to_model={'state_key':'disease',\n               \
          \                               'start_state':'dcm',\n                 \
          \                             'goal_state':'nf',\n                     \
          \                         'alt_states':['hcm']},\n                     \
          \   max_ncells=10000,\n                        emb_layer=0,\n          \
          \              forward_batch_size=50,\n                        nproc=32)\n\
          \                    \nisp.perturb_data(\"/yanketn/TOOLS/Geneformer/fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224/\"\
          ,\n                 \"/yanketn/ANALYSIS/Geneformer/human_dcm_hcm_nf.dataset/\"\
          ,\n                 \"/yanketn/ANALYSIS/Geneformer/\",\n               \
          \  \"test_geneformer_fig6_geneformertoken_10k\")\n\nispstats = InSilicoPerturberStats(mode=\"\
          goal_state_shift\",\n                                  genes_perturbed=\"\
          all\",\n                                  combos=0,\n                  \
          \                anchor_gene=None,\n                                  cell_states_to_model={\"\
          disease\":([\"dcm\"],[\"nf\"],[\"hcm\"])})\n\n\nispstats.get_stats(\"/yanketn/ANALYSIS/Geneformer/\"\
          ,\n                   None,\n                   \"/yanketn/ANALYSIS/Geneformer/\"\
          ,\n                   \"test_fig6_stats_geneformertoken_10k\")\n\n\n```\n\
          The first difference I saw were the number of unique genes detected. My\
          \ run detects 17419 genes and from your supplemental table 12 there are\
          \ 17031 unique genes. I get r^2 of 0.68 which seems reasonable to me.\n\n\
          ![Screen Shot 2023-09-16 at 6.20.49 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/8_HacvXTwZO-aBOQw00Z8.png)\n\
          \nI next compare the shift and FDR columns between the supplemental table\
          \ 12 and my own results and this is where I see big differences. \n\n\n\
          ![Screen Shot 2023-09-16 at 6.22.25 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZPAu_6FPuQFsp17UYEuBz.png)\n\
          ![Screen Shot 2023-09-16 at 6.23.36 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ts1mbUcxGQLA7kR2wGm3r.png)\n\
          ![Screen Shot 2023-09-16 at 6.24.38 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/v4jzqFWLBzHFPHZE378ZI.png)\n\
          ![Screen Shot 2023-09-16 at 6.25.10 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/Nn-NIRsteg0nXxmsQlhTO.png)\n\
          \nI also looked at the raw data to compare some of genes mentioned in the\
          \ manuscript: \n\nFrom table 12 DCM_del_tx : \n![Screen Shot 2023-09-16\
          \ at 6.25.53 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZZWAK0f4eszbe_H2lwTF9.png)\n\
          \nFrom my run: \n\n![Screen Shot 2023-09-16 at 6.40.04 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/cYmLhnl3farRZqSNTlBg7.png)\n\
          \nI also compared these genes too: \n\n\n![Screen Shot 2023-09-16 at 6.41.09\
          \ PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/eWbUuZQLAdaOSsdchzgCV.png)\n\
          \nLastly, I intersected the \"significant\" candidate genes..the supplemental\
          \ table 12 marks about 250 genes where the FDR is < 0.05, and the NF shift\
          \ is positive, the HCM shift is negative in the table. \n\nI only get about\
          \ 135 genes that meet this criteria that match between the table from the\
          \ manuscript and my own run of geneformer. However when I run gene-ontology\
          \ BP, I get many of the same ontologies that you report in your supplemental\
          \ table 15. \n\nThe only thing I could think that would make the outputs\
          \ so different from one another is from the number of cells tested. Can\
          \ you give any insight as to why my results would be so different? I just\
          \ want to make sure I have geneformer running correctly before I run my\
          \ own data on it. Thank you very much for your time. "
        updatedAt: '2023-09-16T22:49:51.550Z'
      numEdits: 1
      reactions: []
    id: 650630d667ab943749c6f05d
    type: comment
  author: MinieRosie
  content: "Hello I am excited to implement Geneformer on my own data. What I am doing\
    \ first is I am trying to replicate the results from the manuscript (in particular\
    \ supplementary table 12, sheet titled DCM_del_tx) to make sure I am using Geneformer\
    \ correctly. \n\nHere is the code I am running, I copied a lot of the parameters\
    \ from your example \"in_silico_pertubation.ipynb\". The input model is the 220224\
    \ fine-tuned model you provide and the human_dcm_hcm_nf.dataset tokenized file\
    \ that is also provided. \n\n```{python}\n\nfrom geneformer import InSilicoPerturber\n\
    from geneformer import InSilicoPerturberStats\n\nisp = InSilicoPerturber(perturb_type=\"\
    delete\",\n                        perturb_rank_shift=None,\n                \
    \        genes_to_perturb=\"all\",\n                        combos=0,\n      \
    \                  anchor_gene=None,\n                        model_type=\"CellClassifier\"\
    ,\n                        num_classes=3,\n                        emb_mode=\"\
    cell\",\n                        cell_emb_style=\"mean_pool\",\n             \
    \           cell_states_to_model={'state_key':'disease',\n                   \
    \                           'start_state':'dcm',\n                           \
    \                   'goal_state':'nf',\n                                     \
    \         'alt_states':['hcm']},\n                        max_ncells=10000,\n\
    \                        emb_layer=0,\n                        forward_batch_size=50,\n\
    \                        nproc=32)\n                    \nisp.perturb_data(\"\
    /yanketn/TOOLS/Geneformer/fine_tuned_models/geneformer-6L-30M_CellClassifier_cardiomyopathies_220224/\"\
    ,\n                 \"/yanketn/ANALYSIS/Geneformer/human_dcm_hcm_nf.dataset/\"\
    ,\n                 \"/yanketn/ANALYSIS/Geneformer/\",\n                 \"test_geneformer_fig6_geneformertoken_10k\"\
    )\n\nispstats = InSilicoPerturberStats(mode=\"goal_state_shift\",\n          \
    \                        genes_perturbed=\"all\",\n                          \
    \        combos=0,\n                                  anchor_gene=None,\n    \
    \                              cell_states_to_model={\"disease\":([\"dcm\"],[\"\
    nf\"],[\"hcm\"])})\n\n\nispstats.get_stats(\"/yanketn/ANALYSIS/Geneformer/\",\n\
    \                   None,\n                   \"/yanketn/ANALYSIS/Geneformer/\"\
    ,\n                   \"test_fig6_stats_geneformertoken_10k\")\n\n\n```\nThe first\
    \ difference I saw were the number of unique genes detected. My run detects 17419\
    \ genes and from your supplemental table 12 there are 17031 unique genes. I get\
    \ r^2 of 0.68 which seems reasonable to me.\n\n![Screen Shot 2023-09-16 at 6.20.49\
    \ PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/8_HacvXTwZO-aBOQw00Z8.png)\n\
    \nI next compare the shift and FDR columns between the supplemental table 12 and\
    \ my own results and this is where I see big differences. \n\n\n![Screen Shot\
    \ 2023-09-16 at 6.22.25 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZPAu_6FPuQFsp17UYEuBz.png)\n\
    ![Screen Shot 2023-09-16 at 6.23.36 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ts1mbUcxGQLA7kR2wGm3r.png)\n\
    ![Screen Shot 2023-09-16 at 6.24.38 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/v4jzqFWLBzHFPHZE378ZI.png)\n\
    ![Screen Shot 2023-09-16 at 6.25.10 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/Nn-NIRsteg0nXxmsQlhTO.png)\n\
    \nI also looked at the raw data to compare some of genes mentioned in the manuscript:\
    \ \n\nFrom table 12 DCM_del_tx : \n![Screen Shot 2023-09-16 at 6.25.53 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/ZZWAK0f4eszbe_H2lwTF9.png)\n\
    \nFrom my run: \n\n![Screen Shot 2023-09-16 at 6.40.04 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/cYmLhnl3farRZqSNTlBg7.png)\n\
    \nI also compared these genes too: \n\n\n![Screen Shot 2023-09-16 at 6.41.09 PM.png](https://cdn-uploads.huggingface.co/production/uploads/647e3cdf770c299e56fad5cc/eWbUuZQLAdaOSsdchzgCV.png)\n\
    \nLastly, I intersected the \"significant\" candidate genes..the supplemental\
    \ table 12 marks about 250 genes where the FDR is < 0.05, and the NF shift is\
    \ positive, the HCM shift is negative in the table. \n\nI only get about 135 genes\
    \ that meet this criteria that match between the table from the manuscript and\
    \ my own run of geneformer. However when I run gene-ontology BP, I get many of\
    \ the same ontologies that you report in your supplemental table 15. \n\nThe only\
    \ thing I could think that would make the outputs so different from one another\
    \ is from the number of cells tested. Can you give any insight as to why my results\
    \ would be so different? I just want to make sure I have geneformer running correctly\
    \ before I run my own data on it. Thank you very much for your time. "
  created_at: 2023-09-16 21:48:54+00:00
  edited: true
  hidden: false
  id: 650630d667ab943749c6f05d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/87affbf02e38d7088fb2b90ea634836f.svg
      fullname: Tara
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: MinieRosie
      type: user
    createdAt: '2023-09-16T22:53:19.000Z'
    data:
      from: Trouble replicating results for Figure 6
      to: Replicating results for Figure 6
    id: 650631df38b7f6bcfa8147ff
    type: title-change
  author: MinieRosie
  created_at: 2023-09-16 21:53:19+00:00
  id: 650631df38b7f6bcfa8147ff
  new_title: Replicating results for Figure 6
  old_title: Trouble replicating results for Figure 6
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-09-18T07:05:26.000Z'
    data:
      edited: true
      editors:
      - ctheodoris
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7612511515617371
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
          fullname: Christina Theodoris
          isHf: false
          isPro: false
          name: ctheodoris
          type: user
        html: "<p>Thank you for your interest in Geneformer! If you'd like to exactly\
          \ replicate the results from the manuscript, you can follow the steps below.\
          \ Please let me know if your results still don't match after these steps.\
          \ Please note that the following steps are not something that is necessarily\
          \ specifically recommended for your own analysis. For example, shuffling\
          \ the data is unnecessary since the forward pass is deterministic and you\
          \ are not training the model during the in silico perturbation. We shuffled\
          \ the cells for other reasons, but in this case to exactly replicate the\
          \ results, you would need to follow the exact same shuffling so that the\
          \ subset of cells at the end performed due to resource limitations leads\
          \ you to the same set of cells.</p>\n<p>Please also note that these steps\
          \ are in reference to the analysis in Table 12  tab \"DCM_del_tx\", which\
          \ identifies genes that shift the dilated cardiomyopathy cells towards non-failing.\
          \ In your post you also mentioned genes ADCY5 and SRPK3, so I just wanted\
          \ to clarify that because those two genes were candidates from the analysis\
          \ identifying genes that shift the hypertrophic cardiomyopathy cells towards\
          \ non-failing, so the start state would be different in that analysis.</p>\n\
          <pre><code>from datasets import load_from_disk\nfrom geneformer import InSilicoPerturber\n\
          from geneformer import InSilicoPerturberStats\n\ndataset = load_from_disk(\"\
          /path/to/human_dcm_hcm_nf.dataset\")\n\n# subset to cardiomyocytes \n# (of\
          \ note, in your post you did not seem to subset to cardiomyocytes - this\
          \ would cause a large difference in the results as the embeddings are context-aware)\n\
          def if_cell_type(example):\n    return example[\"cell_type\"].startswith(\"\
          Cardiomyocyte\")\n\ndataset = dataset.filter(if_cell_type, num_proc=16)\n\
          \n# subset the cells to the non-held-out individuals for which analysis\
          \ was performed in the manuscript\nindiv_subset = [\"1610\", \"1371\", \"\
          1515\", \"1678\", \"1630\", \"1726\", \"1504\", \"1430\", \"1558\", \"1447\"\
          , \"1472\", \"1622\", \"1304\", \"1707\", \"1582\", \"1617\", \"1479\",\
          \ \"1549\", \"1425\", \"1561\", \"1722\", \"1600\", \"1631\", \"1358\",\
          \ \"1290\", \"1300\", \"1508\", \"1735\", \"1462\"]\n\ndef if_indiv(example):\n\
          \    return example[\"individual\"] in indiv_subset\n\ndataset = dataset.filter(if_indiv,\
          \ num_proc=16).shuffle(seed=42)\n\ndataset = dataset.shuffle(seed=42)  #\
          \ do not omit this step, while unnecessary, if you'd like to use the same\
          \ set of cells as the original analysis\n\n# generate embeddings for each\
          \ individual using the emb_extractor, then average the embeddings by disease\
          \ state to derive the 3 goal positions\n# of note, the goal state embeddings\
          \ used for the analysis in the manuscript did not include an attention mask\
          \ for padding\n# the embeddings with or without attention mask are correlated\
          \ with coefficient &gt;0.999 so this should have minimal impact on results\n\
          # if you prefer, you can modify the emb_extractor to not include an attention\
          \ mask to exactly derive the same goal positions\n# however, attention masks\
          \ are recommended in general for your own analysis to fully minimize impact\
          \ of padding\n\n# you will have to modify the code of in_silico_perturber.py\
          \ on line 967 to take your average embeddings generated as above as the\
          \ state_embs_dict\n# rather than using the ones that would be generated\
          \ just from a subset of the data with get_cell_state_avg_embs\n\n# after\
          \ deriving the goal positions, subset to the start state of \"dcm\" to replicate\
          \ Table 12 tab \"DCM_del_tx\"\ndef if_disease(example):\n    return example[\"\
          disease\"] == \"dcm\"\n\ndataset = dataset.filter(if_disease, num_proc=16)\n\
          \n# subset the cells as was needed for resource limitations of max runtime\
          \ for original analysis to replicate Table 12 tab \"DCM_del_tx\"\ndataset\
          \ = dataset.select([i for i in range(9701)])\n\n# save the subsetted dataset\
          \ to use for in silico deletion analysis\ndataset.save_to_disk(output_path/to/subsetted.dataset)\n\
          \n# in silico perturbation in deletion mode to determine genes whose \n\
          # deletion in the dilated cardiomyopathy (dcm) state significantly shifts\n\
          # the embedding towards non-failing (nf) state\nisp = InSilicoPerturber(perturb_type=\"\
          delete\",\n                        perturb_rank_shift=None,\n          \
          \              genes_to_perturb=\"all\",\n                        combos=0,\n\
          \                        anchor_gene=None,\n                        model_type=\"\
          CellClassifier\",\n                        num_classes=3,\n            \
          \            emb_mode=\"cell\",\n                        cell_emb_style=\"\
          mean_pool\",\n                        filter_data={\"cell_type\":[\"Cardiomyocyte1\"\
          ,\"Cardiomyocyte2\",\"Cardiomyocyte3\"]},\n                        cell_states_to_model={'state_key':\
          \ 'disease', \n                                              'start_state':\
          \ 'dcm', \n                                              'goal_state': 'nf',\
          \ \n                                              'alt_states': ['hcm']},\n\
          \                        max_ncells=None,\n                        emb_layer=0,\n\
          \                        forward_batch_size=400,\n                     \
          \   nproc=16)\n\n# outputs intermediate files from in silico perturbation\n\
          isp.perturb_data(\"path/to/model\",\n                 \"path/to/subsetted.dataset\"\
          ,   # use saved subsetted .dataset\n                 \"path/to/output_directory\"\
          ,\n                 \"output_prefix\")\n\nispstats = InSilicoPerturberStats(mode=\"\
          goal_state_shift\",\n                                  genes_perturbed=\"\
          all\",\n                                  combos=0,\n                  \
          \                anchor_gene=None,\n                                  cell_states_to_model={'state_key':\
          \ 'disease', \n                                              'start_state':\
          \ 'dcm', \n                                              'goal_state': 'nf',\
          \ \n                                              'alt_states': ['hcm']})\n\
          \n# extracts data from intermediate files and processes stats to output\
          \ in final .csv\nispstats.get_stats(\"path/to/input_data\",\n          \
          \         None,\n                   \"path/to/output_directory\",\n    \
          \               \"output_prefix\")\n</code></pre>\n"
        raw: "Thank you for your interest in Geneformer! If you'd like to exactly\
          \ replicate the results from the manuscript, you can follow the steps below.\
          \ Please let me know if your results still don't match after these steps.\
          \ Please note that the following steps are not something that is necessarily\
          \ specifically recommended for your own analysis. For example, shuffling\
          \ the data is unnecessary since the forward pass is deterministic and you\
          \ are not training the model during the in silico perturbation. We shuffled\
          \ the cells for other reasons, but in this case to exactly replicate the\
          \ results, you would need to follow the exact same shuffling so that the\
          \ subset of cells at the end performed due to resource limitations leads\
          \ you to the same set of cells.\n\nPlease also note that these steps are\
          \ in reference to the analysis in Table 12  tab \"DCM_del_tx\", which identifies\
          \ genes that shift the dilated cardiomyopathy cells towards non-failing.\
          \ In your post you also mentioned genes ADCY5 and SRPK3, so I just wanted\
          \ to clarify that because those two genes were candidates from the analysis\
          \ identifying genes that shift the hypertrophic cardiomyopathy cells towards\
          \ non-failing, so the start state would be different in that analysis.\n\
          \n```\nfrom datasets import load_from_disk\nfrom geneformer import InSilicoPerturber\n\
          from geneformer import InSilicoPerturberStats\n\ndataset = load_from_disk(\"\
          /path/to/human_dcm_hcm_nf.dataset\")\n\n# subset to cardiomyocytes \n# (of\
          \ note, in your post you did not seem to subset to cardiomyocytes - this\
          \ would cause a large difference in the results as the embeddings are context-aware)\n\
          def if_cell_type(example):\n    return example[\"cell_type\"].startswith(\"\
          Cardiomyocyte\")\n\ndataset = dataset.filter(if_cell_type, num_proc=16)\n\
          \n# subset the cells to the non-held-out individuals for which analysis\
          \ was performed in the manuscript\nindiv_subset = [\"1610\", \"1371\", \"\
          1515\", \"1678\", \"1630\", \"1726\", \"1504\", \"1430\", \"1558\", \"1447\"\
          , \"1472\", \"1622\", \"1304\", \"1707\", \"1582\", \"1617\", \"1479\",\
          \ \"1549\", \"1425\", \"1561\", \"1722\", \"1600\", \"1631\", \"1358\",\
          \ \"1290\", \"1300\", \"1508\", \"1735\", \"1462\"]\n\ndef if_indiv(example):\n\
          \    return example[\"individual\"] in indiv_subset\n\ndataset = dataset.filter(if_indiv,\
          \ num_proc=16).shuffle(seed=42)\n\ndataset = dataset.shuffle(seed=42)  #\
          \ do not omit this step, while unnecessary, if you'd like to use the same\
          \ set of cells as the original analysis\n\n# generate embeddings for each\
          \ individual using the emb_extractor, then average the embeddings by disease\
          \ state to derive the 3 goal positions\n# of note, the goal state embeddings\
          \ used for the analysis in the manuscript did not include an attention mask\
          \ for padding\n# the embeddings with or without attention mask are correlated\
          \ with coefficient >0.999 so this should have minimal impact on results\n\
          # if you prefer, you can modify the emb_extractor to not include an attention\
          \ mask to exactly derive the same goal positions\n# however, attention masks\
          \ are recommended in general for your own analysis to fully minimize impact\
          \ of padding\n\n# you will have to modify the code of in_silico_perturber.py\
          \ on line 967 to take your average embeddings generated as above as the\
          \ state_embs_dict\n# rather than using the ones that would be generated\
          \ just from a subset of the data with get_cell_state_avg_embs\n\n# after\
          \ deriving the goal positions, subset to the start state of \"dcm\" to replicate\
          \ Table 12 tab \"DCM_del_tx\"\ndef if_disease(example):\n    return example[\"\
          disease\"] == \"dcm\"\n\ndataset = dataset.filter(if_disease, num_proc=16)\n\
          \n# subset the cells as was needed for resource limitations of max runtime\
          \ for original analysis to replicate Table 12 tab \"DCM_del_tx\"\ndataset\
          \ = dataset.select([i for i in range(9701)])\n\n# save the subsetted dataset\
          \ to use for in silico deletion analysis\ndataset.save_to_disk(output_path/to/subsetted.dataset)\n\
          \n# in silico perturbation in deletion mode to determine genes whose \n\
          # deletion in the dilated cardiomyopathy (dcm) state significantly shifts\n\
          # the embedding towards non-failing (nf) state\nisp = InSilicoPerturber(perturb_type=\"\
          delete\",\n                        perturb_rank_shift=None,\n          \
          \              genes_to_perturb=\"all\",\n                        combos=0,\n\
          \                        anchor_gene=None,\n                        model_type=\"\
          CellClassifier\",\n                        num_classes=3,\n            \
          \            emb_mode=\"cell\",\n                        cell_emb_style=\"\
          mean_pool\",\n                        filter_data={\"cell_type\":[\"Cardiomyocyte1\"\
          ,\"Cardiomyocyte2\",\"Cardiomyocyte3\"]},\n                        cell_states_to_model={'state_key':\
          \ 'disease', \n                                              'start_state':\
          \ 'dcm', \n                                              'goal_state': 'nf',\
          \ \n                                              'alt_states': ['hcm']},\n\
          \                        max_ncells=None,\n                        emb_layer=0,\n\
          \                        forward_batch_size=400,\n                     \
          \   nproc=16)\n\n# outputs intermediate files from in silico perturbation\n\
          isp.perturb_data(\"path/to/model\",\n                 \"path/to/subsetted.dataset\"\
          ,   # use saved subsetted .dataset\n                 \"path/to/output_directory\"\
          ,\n                 \"output_prefix\")\n\nispstats = InSilicoPerturberStats(mode=\"\
          goal_state_shift\",\n                                  genes_perturbed=\"\
          all\",\n                                  combos=0,\n                  \
          \                anchor_gene=None,\n                                  cell_states_to_model={'state_key':\
          \ 'disease', \n                                              'start_state':\
          \ 'dcm', \n                                              'goal_state': 'nf',\
          \ \n                                              'alt_states': ['hcm']})\n\
          \n# extracts data from intermediate files and processes stats to output\
          \ in final .csv\nispstats.get_stats(\"path/to/input_data\",\n          \
          \         None,\n                   \"path/to/output_directory\",\n    \
          \               \"output_prefix\")\n```"
        updatedAt: '2023-09-18T07:44:03.164Z'
      numEdits: 2
      reactions:
      - count: 1
        reaction: "\u2764\uFE0F"
        users:
        - MinieRosie
      relatedEventId: 6507f6b6338e4879e46f4d38
    id: 6507f6b6338e4879e46f4d36
    type: comment
  author: ctheodoris
  content: "Thank you for your interest in Geneformer! If you'd like to exactly replicate\
    \ the results from the manuscript, you can follow the steps below. Please let\
    \ me know if your results still don't match after these steps. Please note that\
    \ the following steps are not something that is necessarily specifically recommended\
    \ for your own analysis. For example, shuffling the data is unnecessary since\
    \ the forward pass is deterministic and you are not training the model during\
    \ the in silico perturbation. We shuffled the cells for other reasons, but in\
    \ this case to exactly replicate the results, you would need to follow the exact\
    \ same shuffling so that the subset of cells at the end performed due to resource\
    \ limitations leads you to the same set of cells.\n\nPlease also note that these\
    \ steps are in reference to the analysis in Table 12  tab \"DCM_del_tx\", which\
    \ identifies genes that shift the dilated cardiomyopathy cells towards non-failing.\
    \ In your post you also mentioned genes ADCY5 and SRPK3, so I just wanted to clarify\
    \ that because those two genes were candidates from the analysis identifying genes\
    \ that shift the hypertrophic cardiomyopathy cells towards non-failing, so the\
    \ start state would be different in that analysis.\n\n```\nfrom datasets import\
    \ load_from_disk\nfrom geneformer import InSilicoPerturber\nfrom geneformer import\
    \ InSilicoPerturberStats\n\ndataset = load_from_disk(\"/path/to/human_dcm_hcm_nf.dataset\"\
    )\n\n# subset to cardiomyocytes \n# (of note, in your post you did not seem to\
    \ subset to cardiomyocytes - this would cause a large difference in the results\
    \ as the embeddings are context-aware)\ndef if_cell_type(example):\n    return\
    \ example[\"cell_type\"].startswith(\"Cardiomyocyte\")\n\ndataset = dataset.filter(if_cell_type,\
    \ num_proc=16)\n\n# subset the cells to the non-held-out individuals for which\
    \ analysis was performed in the manuscript\nindiv_subset = [\"1610\", \"1371\"\
    , \"1515\", \"1678\", \"1630\", \"1726\", \"1504\", \"1430\", \"1558\", \"1447\"\
    , \"1472\", \"1622\", \"1304\", \"1707\", \"1582\", \"1617\", \"1479\", \"1549\"\
    , \"1425\", \"1561\", \"1722\", \"1600\", \"1631\", \"1358\", \"1290\", \"1300\"\
    , \"1508\", \"1735\", \"1462\"]\n\ndef if_indiv(example):\n    return example[\"\
    individual\"] in indiv_subset\n\ndataset = dataset.filter(if_indiv, num_proc=16).shuffle(seed=42)\n\
    \ndataset = dataset.shuffle(seed=42)  # do not omit this step, while unnecessary,\
    \ if you'd like to use the same set of cells as the original analysis\n\n# generate\
    \ embeddings for each individual using the emb_extractor, then average the embeddings\
    \ by disease state to derive the 3 goal positions\n# of note, the goal state embeddings\
    \ used for the analysis in the manuscript did not include an attention mask for\
    \ padding\n# the embeddings with or without attention mask are correlated with\
    \ coefficient >0.999 so this should have minimal impact on results\n# if you prefer,\
    \ you can modify the emb_extractor to not include an attention mask to exactly\
    \ derive the same goal positions\n# however, attention masks are recommended in\
    \ general for your own analysis to fully minimize impact of padding\n\n# you will\
    \ have to modify the code of in_silico_perturber.py on line 967 to take your average\
    \ embeddings generated as above as the state_embs_dict\n# rather than using the\
    \ ones that would be generated just from a subset of the data with get_cell_state_avg_embs\n\
    \n# after deriving the goal positions, subset to the start state of \"dcm\" to\
    \ replicate Table 12 tab \"DCM_del_tx\"\ndef if_disease(example):\n    return\
    \ example[\"disease\"] == \"dcm\"\n\ndataset = dataset.filter(if_disease, num_proc=16)\n\
    \n# subset the cells as was needed for resource limitations of max runtime for\
    \ original analysis to replicate Table 12 tab \"DCM_del_tx\"\ndataset = dataset.select([i\
    \ for i in range(9701)])\n\n# save the subsetted dataset to use for in silico\
    \ deletion analysis\ndataset.save_to_disk(output_path/to/subsetted.dataset)\n\n\
    # in silico perturbation in deletion mode to determine genes whose \n# deletion\
    \ in the dilated cardiomyopathy (dcm) state significantly shifts\n# the embedding\
    \ towards non-failing (nf) state\nisp = InSilicoPerturber(perturb_type=\"delete\"\
    ,\n                        perturb_rank_shift=None,\n                        genes_to_perturb=\"\
    all\",\n                        combos=0,\n                        anchor_gene=None,\n\
    \                        model_type=\"CellClassifier\",\n                    \
    \    num_classes=3,\n                        emb_mode=\"cell\",\n            \
    \            cell_emb_style=\"mean_pool\",\n                        filter_data={\"\
    cell_type\":[\"Cardiomyocyte1\",\"Cardiomyocyte2\",\"Cardiomyocyte3\"]},\n   \
    \                     cell_states_to_model={'state_key': 'disease', \n       \
    \                                       'start_state': 'dcm', \n             \
    \                                 'goal_state': 'nf', \n                     \
    \                         'alt_states': ['hcm']},\n                        max_ncells=None,\n\
    \                        emb_layer=0,\n                        forward_batch_size=400,\n\
    \                        nproc=16)\n\n# outputs intermediate files from in silico\
    \ perturbation\nisp.perturb_data(\"path/to/model\",\n                 \"path/to/subsetted.dataset\"\
    ,   # use saved subsetted .dataset\n                 \"path/to/output_directory\"\
    ,\n                 \"output_prefix\")\n\nispstats = InSilicoPerturberStats(mode=\"\
    goal_state_shift\",\n                                  genes_perturbed=\"all\"\
    ,\n                                  combos=0,\n                             \
    \     anchor_gene=None,\n                                  cell_states_to_model={'state_key':\
    \ 'disease', \n                                              'start_state': 'dcm',\
    \ \n                                              'goal_state': 'nf', \n     \
    \                                         'alt_states': ['hcm']})\n\n# extracts\
    \ data from intermediate files and processes stats to output in final .csv\nispstats.get_stats(\"\
    path/to/input_data\",\n                   None,\n                   \"path/to/output_directory\"\
    ,\n                   \"output_prefix\")\n```"
  created_at: 2023-09-18 06:05:26+00:00
  edited: true
  hidden: false
  id: 6507f6b6338e4879e46f4d36
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671502872617-622d085c8d04fd29a9ccf169.png?w=200&h=200&f=face
      fullname: Christina Theodoris
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ctheodoris
      type: user
    createdAt: '2023-09-18T07:05:26.000Z'
    data:
      status: closed
    id: 6507f6b6338e4879e46f4d38
    type: status-change
  author: ctheodoris
  created_at: 2023-09-18 06:05:26+00:00
  id: 6507f6b6338e4879e46f4d38
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 246
repo_id: ctheodoris/Geneformer
repo_type: model
status: closed
target_branch: null
title: Replicating results for Figure 6
