!!python/object:huggingface_hub.community.DiscussionWithDetails
author: eiprol
conflicting_files: null
created_at: 2023-10-26 14:49:47+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
      fullname: Sergio
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: eiprol
      type: user
    createdAt: '2023-10-26T15:49:47.000Z'
    data:
      edited: false
      editors:
      - eiprol
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.409779816865921
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
          fullname: Sergio
          isHf: false
          isPro: false
          name: eiprol
          type: user
        html: "<p>Hello,</p>\n<p>Every time I try to tun this simple test with torch\
          \ &lt; 2.1 (Either 2.0.0 or 2.0.1), it throws an error regarding <code>'tensor&lt;1x77x1xf16&gt;'\
          \ and 'tensor&lt;1xf32&gt;'</code>.</p>\n<p>The simple script:</p>\n<pre><code>#\
          \ Simple image generation\nfrom diffusers import StableDiffusionXLAdapterPipeline,\
          \ DiffusionPipeline, T2IAdapter, EulerAncestralDiscreteScheduler, AutoencoderKL\n\
          from diffusers.utils import load_image, make_image_grid\nfrom controlnet_aux.midas\
          \ import MidasDetector\nimport torch\nprint(torch.__version__)\n\npipe =\
          \ DiffusionPipeline.from_pretrained(\"stabilityai/stable-diffusion-xl-base-1.0\"\
          , torch_dtype=torch.float16, use_safetensors=True, variant=\"fp16\")\npipe.to(\"\
          mps\")\n\n# if using torch &lt; 2.0\n# pipe.enable_xformers_memory_efficient_attention()\n\
          \nprompt = \"An astronaut riding a green horse\"\n\nimages = pipe(prompt=prompt).images[0]\n\
          </code></pre>\n<p>The error:</p>\n<pre><code>Loading pipeline components...:\
          \ 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588| 7/7 [00:00&lt;00:00,  9.27it/s]\n\
          loc(\"varianceEps\"(\"(mpsFileLoc): /AppleInternal/Library/BuildRoots/75428952-3aa4-11ee-8b65-46d450270006/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShadersGraph/mpsgraph/MetalPerformanceShadersGraph/Core/Files/MPSGraphUtilities.mm\"\
          :233:0)): error: input types 'tensor&lt;1x77x1xf16&gt;' and 'tensor&lt;1xf32&gt;'\
          \ are not broadcast compatible\nLLVM ERROR: Failed to infer result type(s).\n\
          zsh: abort      python3 test_simple.py\n</code></pre>\n<p>Updating to torch\
          \ 2.1 solves the issue, but I would need 2.0.1 for CUDA 11.x compatibility\
          \ on Replicate.<br>I'm running this on Mac M2 Max (hence the \"mps\"), but\
          \ seems to throw a similar problem on a Linux machine when torch is &lt;\
          \ 2.1</p>\n"
        raw: "Hello,\r\n\r\nEvery time I try to tun this simple test with torch <\
          \ 2.1 (Either 2.0.0 or 2.0.1), it throws an error regarding `'tensor<1x77x1xf16>'\
          \ and 'tensor<1xf32>'`.\r\n\r\nThe simple script:\r\n```\r\n# Simple image\
          \ generation\r\nfrom diffusers import StableDiffusionXLAdapterPipeline,\
          \ DiffusionPipeline, T2IAdapter, EulerAncestralDiscreteScheduler, AutoencoderKL\r\
          \nfrom diffusers.utils import load_image, make_image_grid\r\nfrom controlnet_aux.midas\
          \ import MidasDetector\r\nimport torch\r\nprint(torch.__version__)\r\n\r\
          \npipe = DiffusionPipeline.from_pretrained(\"stabilityai/stable-diffusion-xl-base-1.0\"\
          , torch_dtype=torch.float16, use_safetensors=True, variant=\"fp16\")\r\n\
          pipe.to(\"mps\")\r\n\r\n# if using torch < 2.0\r\n# pipe.enable_xformers_memory_efficient_attention()\r\
          \n\r\nprompt = \"An astronaut riding a green horse\"\r\n\r\nimages = pipe(prompt=prompt).images[0]\r\
          \n```\r\n\r\nThe error:\r\n```\r\nLoading pipeline components...: 100%|\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588| 7/7 [00:00<00:00,  9.27it/s]\r\nloc(\"varianceEps\"\
          (\"(mpsFileLoc): /AppleInternal/Library/BuildRoots/75428952-3aa4-11ee-8b65-46d450270006/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShadersGraph/mpsgraph/MetalPerformanceShadersGraph/Core/Files/MPSGraphUtilities.mm\"\
          :233:0)): error: input types 'tensor<1x77x1xf16>' and 'tensor<1xf32>' are\
          \ not broadcast compatible\r\nLLVM ERROR: Failed to infer result type(s).\r\
          \nzsh: abort      python3 test_simple.py\r\n```\r\n\r\nUpdating to torch\
          \ 2.1 solves the issue, but I would need 2.0.1 for CUDA 11.x compatibility\
          \ on Replicate.\r\nI'm running this on Mac M2 Max (hence the \"mps\"), but\
          \ seems to throw a similar problem on a Linux machine when torch is < 2.1"
        updatedAt: '2023-10-26T15:49:47.799Z'
      numEdits: 0
      reactions: []
    id: 653a8a9b4d105d9696b41e7a
    type: comment
  author: eiprol
  content: "Hello,\r\n\r\nEvery time I try to tun this simple test with torch < 2.1\
    \ (Either 2.0.0 or 2.0.1), it throws an error regarding `'tensor<1x77x1xf16>'\
    \ and 'tensor<1xf32>'`.\r\n\r\nThe simple script:\r\n```\r\n# Simple image generation\r\
    \nfrom diffusers import StableDiffusionXLAdapterPipeline, DiffusionPipeline, T2IAdapter,\
    \ EulerAncestralDiscreteScheduler, AutoencoderKL\r\nfrom diffusers.utils import\
    \ load_image, make_image_grid\r\nfrom controlnet_aux.midas import MidasDetector\r\
    \nimport torch\r\nprint(torch.__version__)\r\n\r\npipe = DiffusionPipeline.from_pretrained(\"\
    stabilityai/stable-diffusion-xl-base-1.0\", torch_dtype=torch.float16, use_safetensors=True,\
    \ variant=\"fp16\")\r\npipe.to(\"mps\")\r\n\r\n# if using torch < 2.0\r\n# pipe.enable_xformers_memory_efficient_attention()\r\
    \n\r\nprompt = \"An astronaut riding a green horse\"\r\n\r\nimages = pipe(prompt=prompt).images[0]\r\
    \n```\r\n\r\nThe error:\r\n```\r\nLoading pipeline components...: 100%|\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588| 7/7 [00:00<00:00,  9.27it/s]\r\nloc(\"varianceEps\"\
    (\"(mpsFileLoc): /AppleInternal/Library/BuildRoots/75428952-3aa4-11ee-8b65-46d450270006/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShadersGraph/mpsgraph/MetalPerformanceShadersGraph/Core/Files/MPSGraphUtilities.mm\"\
    :233:0)): error: input types 'tensor<1x77x1xf16>' and 'tensor<1xf32>' are not\
    \ broadcast compatible\r\nLLVM ERROR: Failed to infer result type(s).\r\nzsh:\
    \ abort      python3 test_simple.py\r\n```\r\n\r\nUpdating to torch 2.1 solves\
    \ the issue, but I would need 2.0.1 for CUDA 11.x compatibility on Replicate.\r\
    \nI'm running this on Mac M2 Max (hence the \"mps\"), but seems to throw a similar\
    \ problem on a Linux machine when torch is < 2.1"
  created_at: 2023-10-26 14:49:47+00:00
  edited: false
  hidden: false
  id: 653a8a9b4d105d9696b41e7a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
      fullname: Sergio
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: eiprol
      type: user
    createdAt: '2023-10-26T15:50:23.000Z'
    data:
      from: Error running with related to tensor size when using torch <2.1.0
      to: Error running related to tensor size when using torch <2.1.0
    id: 653a8abf9388c917d0d44661
    type: title-change
  author: eiprol
  created_at: 2023-10-26 14:50:23+00:00
  id: 653a8abf9388c917d0d44661
  new_title: Error running related to tensor size when using torch <2.1.0
  old_title: Error running with related to tensor size when using torch <2.1.0
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
      fullname: Sergio
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: eiprol
      type: user
    createdAt: '2023-10-26T16:43:26.000Z'
    data:
      edited: false
      editors:
      - eiprol
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.606363832950592
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
          fullname: Sergio
          isHf: false
          isPro: false
          name: eiprol
          type: user
        html: '<p>It can be fixed by removing any reference to <code>torch_dtype=torch.float16</code>
          , <code>variant="fp16"</code>, etc.</p>

          '
        raw: It can be fixed by removing any reference to `torch_dtype=torch.float16`
          , `variant="fp16"`, etc.
        updatedAt: '2023-10-26T16:43:26.177Z'
      numEdits: 0
      reactions: []
    id: 653a972ecda0df188d58dabf
    type: comment
  author: eiprol
  content: It can be fixed by removing any reference to `torch_dtype=torch.float16`
    , `variant="fp16"`, etc.
  created_at: 2023-10-26 15:43:26+00:00
  edited: false
  hidden: false
  id: 653a972ecda0df188d58dabf
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/ba334717b09e178fb00556667e1bd1b3.svg
      fullname: Sergio
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: eiprol
      type: user
    createdAt: '2023-10-26T21:50:02.000Z'
    data:
      status: closed
    id: 653adf0a33574f20f7f9e7f7
    type: status-change
  author: eiprol
  created_at: 2023-10-26 20:50:02+00:00
  id: 653adf0a33574f20f7f9e7f7
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 111
repo_id: stabilityai/stable-diffusion-xl-base-1.0
repo_type: model
status: closed
target_branch: null
title: Error running related to tensor size when using torch <2.1.0
