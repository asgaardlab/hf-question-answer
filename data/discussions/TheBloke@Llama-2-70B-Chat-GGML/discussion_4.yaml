!!python/object:huggingface_hub.community.DiscussionWithDetails
author: googcheng
conflicting_files: null
created_at: 2023-07-24 07:27:16+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d6c81051d68459ce019012299dfccc21.svg
      fullname: david cheng
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: googcheng
      type: user
    createdAt: '2023-07-24T08:27:16.000Z'
    data:
      edited: false
      editors:
      - googcheng
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.3876696228981018
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d6c81051d68459ce019012299dfccc21.svg
          fullname: david cheng
          isHf: false
          isPro: false
          name: googcheng
          type: user
        html: "<p> [INST] &lt;&gt;You are a helpful assistant&lt;&gt;how to parse\
          \ data  [{device_name:1654308465760251904,product_id:3N7I5CXSHW}] with cJSON\
          \ in C [/INST]  To parse data in C using cJSON, you can use the <code>cjson</code>\
          \ function to parse a JSON string and retrieve the values of interest.</p>\n\
          <p>Here's an example of how you can parse the provided JSON data:</p>\n\
          <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include\
          \ &lt;cjson/cJSON.h&gt;\n\nint main() {\n    char json_data[] = \"{\\\"\
          device_name\\\":\\\"1654308465760251904\\\",\\\"product_id\\\":\\\"3N7I5CXSHW\\\
          \"}\";\n    cJSON *json;\n    cJSON *device_name;\n    cJSON *product_id;\n\
          \n    // Parse the JSON data\n    json = cJSON_Parse(json_data);\n    if\
          \ (!json) {\n        printf(\"Failed to parse JSON data\\n\");\n       \
          \ return 1;\n    }\n\n    // Retrieve the values of interest\n    device_name\
          \ = cJSON_GetObjectItem(json, \"device_name\");\n    product_id = cJSON_GetObjectItem(json,\
          \ \"product_id\");\n\n    // Print the values\n    printf(\"Device name:\
          \ %s\\n\", device_name-&gt;valuestring);\n    printf(\"Product ID: %s\\\
          n\", product_id-&gt;valuestring);\n\n    // Clean up\n    cJSON_Delete(json);\n\
          \n    return 0;\n}\n</code></pre>\n<p>the [] in prompt will be ignored?</p>\n"
        raw: " [INST] <<SYS>>You are a helpful assistant<</SYS>>how to parse data\
          \  [{device_name:1654308465760251904,product_id:3N7I5CXSHW}] with cJSON\
          \ in C [/INST]  To parse data in C using cJSON, you can use the `cjson`\
          \ function to parse a JSON string and retrieve the values of interest.\r\
          \n\r\nHere's an example of how you can parse the provided JSON data:\r\n\
          ```\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <cjson/cJSON.h>\r\
          \n\r\nint main() {\r\n    char json_data[] = \"{\\\"device_name\\\":\\\"\
          1654308465760251904\\\",\\\"product_id\\\":\\\"3N7I5CXSHW\\\"}\";\r\n  \
          \  cJSON *json;\r\n    cJSON *device_name;\r\n    cJSON *product_id;\r\n\
          \r\n    // Parse the JSON data\r\n    json = cJSON_Parse(json_data);\r\n\
          \    if (!json) {\r\n        printf(\"Failed to parse JSON data\\n\");\r\
          \n        return 1;\r\n    }\r\n\r\n    // Retrieve the values of interest\r\
          \n    device_name = cJSON_GetObjectItem(json, \"device_name\");\r\n    product_id\
          \ = cJSON_GetObjectItem(json, \"product_id\");\r\n\r\n    // Print the values\r\
          \n    printf(\"Device name: %s\\n\", device_name->valuestring);\r\n    printf(\"\
          Product ID: %s\\n\", product_id->valuestring);\r\n\r\n    // Clean up\r\n\
          \    cJSON_Delete(json);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n\r\nthe\
          \ [] in prompt will be ignored?"
        updatedAt: '2023-07-24T08:27:16.394Z'
      numEdits: 0
      reactions: []
    id: 64be35e4b9296eef62eaef0f
    type: comment
  author: googcheng
  content: " [INST] <<SYS>>You are a helpful assistant<</SYS>>how to parse data  [{device_name:1654308465760251904,product_id:3N7I5CXSHW}]\
    \ with cJSON in C [/INST]  To parse data in C using cJSON, you can use the `cjson`\
    \ function to parse a JSON string and retrieve the values of interest.\r\n\r\n\
    Here's an example of how you can parse the provided JSON data:\r\n```\r\n#include\
    \ <stdio.h>\r\n#include <string.h>\r\n#include <cjson/cJSON.h>\r\n\r\nint main()\
    \ {\r\n    char json_data[] = \"{\\\"device_name\\\":\\\"1654308465760251904\\\
    \",\\\"product_id\\\":\\\"3N7I5CXSHW\\\"}\";\r\n    cJSON *json;\r\n    cJSON\
    \ *device_name;\r\n    cJSON *product_id;\r\n\r\n    // Parse the JSON data\r\n\
    \    json = cJSON_Parse(json_data);\r\n    if (!json) {\r\n        printf(\"Failed\
    \ to parse JSON data\\n\");\r\n        return 1;\r\n    }\r\n\r\n    // Retrieve\
    \ the values of interest\r\n    device_name = cJSON_GetObjectItem(json, \"device_name\"\
    );\r\n    product_id = cJSON_GetObjectItem(json, \"product_id\");\r\n\r\n    //\
    \ Print the values\r\n    printf(\"Device name: %s\\n\", device_name->valuestring);\r\
    \n    printf(\"Product ID: %s\\n\", product_id->valuestring);\r\n\r\n    // Clean\
    \ up\r\n    cJSON_Delete(json);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n\r\nthe\
    \ [] in prompt will be ignored?"
  created_at: 2023-07-24 07:27:16+00:00
  edited: false
  hidden: false
  id: 64be35e4b9296eef62eaef0f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/d6c81051d68459ce019012299dfccc21.svg
      fullname: david cheng
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: googcheng
      type: user
    createdAt: '2023-07-24T08:30:06.000Z'
    data:
      from: prompt format issue
      to: prompt brackets issue
    id: 64be368e4561d0aca2b49727
    type: title-change
  author: googcheng
  created_at: 2023-07-24 07:30:06+00:00
  id: 64be368e4561d0aca2b49727
  new_title: prompt brackets issue
  old_title: prompt format issue
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6426d3f3a7723d62b53c259b/tvPikpAzKTKGN5wrpadOJ.jpeg?w=200&h=200&f=face
      fullname: Tom Jobbins
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: true
      name: TheBloke
      type: user
    createdAt: '2023-07-24T08:30:51.000Z'
    data:
      edited: false
      editors:
      - TheBloke
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8774079084396362
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6426d3f3a7723d62b53c259b/tvPikpAzKTKGN5wrpadOJ.jpeg?w=200&h=200&f=face
          fullname: Tom Jobbins
          isHf: false
          isPro: true
          name: TheBloke
          type: user
        html: '<p>Hmm yeah, I''m not sure why this happens exactly.  But there may
          be issues with tokenisation in GGML at the moment. Please see this Github
          issue for more details: <a rel="nofollow" href="https://github.com/ggerganov/llama.cpp/issues/2310#issue-1816191955">https://github.com/ggerganov/llama.cpp/issues/2310#issue-1816191955</a></p>

          '
        raw: 'Hmm yeah, I''m not sure why this happens exactly.  But there may be
          issues with tokenisation in GGML at the moment. Please see this Github issue
          for more details: https://github.com/ggerganov/llama.cpp/issues/2310#issue-1816191955

          '
        updatedAt: '2023-07-24T08:30:51.060Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F44D"
        users:
        - algorithm
        - viniciusarruda
    id: 64be36bb8496ee0fb612d0c5
    type: comment
  author: TheBloke
  content: 'Hmm yeah, I''m not sure why this happens exactly.  But there may be issues
    with tokenisation in GGML at the moment. Please see this Github issue for more
    details: https://github.com/ggerganov/llama.cpp/issues/2310#issue-1816191955

    '
  created_at: 2023-07-24 07:30:51+00:00
  edited: false
  hidden: false
  id: 64be36bb8496ee0fb612d0c5
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: TheBloke/Llama-2-70B-Chat-GGML
repo_type: model
status: open
target_branch: null
title: prompt brackets issue
