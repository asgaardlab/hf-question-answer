!!python/object:huggingface_hub.community.DiscussionWithDetails
author: wen020
conflicting_files: null
created_at: 2023-01-18 01:41:27+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/310199a7c9b0a1469039ec97e091a1aa.svg
      fullname: wen
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: wen020
      type: user
    createdAt: '2023-01-18T01:41:27.000Z'
    data:
      edited: true
      editors:
      - wen020
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/310199a7c9b0a1469039ec97e091a1aa.svg
          fullname: wen
          isHf: false
          isPro: false
          name: wen020
          type: user
        html: "<p>I encountered a memory leak problem. Whether we load the model to\
          \ gpu or delete the model with del and do gc, the memory is not recycled.\
          \ The ideal case for us is that the memory usage goes back to exactly the\
          \ original value after the load model -&gt; del model -&gt; gc process.<br>Therefore,\
          \ what should I do to reclaim the memory occupied by the stable diffusion\
          \ model.</p>\n<p>code\uFF1A</p>\n<p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/1674006039129-6377272a0c233a6c5ec9d40b.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/1674006039129-6377272a0c233a6c5ec9d40b.png\"\
          ></a></p>\n<p>runing log\uFF1A</p>\n<p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/1674006081031-6377272a0c233a6c5ec9d40b.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/1674006081031-6377272a0c233a6c5ec9d40b.png\"\
          ></a></p>\n"
        raw: "I encountered a memory leak problem. Whether we load the model to gpu\
          \ or delete the model with del and do gc, the memory is not recycled. The\
          \ ideal case for us is that the memory usage goes back to exactly the original\
          \ value after the load model -> del model -> gc process.\nTherefore, what\
          \ should I do to reclaim the memory occupied by the stable diffusion model.\n\
          \ncode\uFF1A\n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1674006039129-6377272a0c233a6c5ec9d40b.png)\n\
          \n\nruning log\uFF1A\n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1674006081031-6377272a0c233a6c5ec9d40b.png)"
        updatedAt: '2023-01-18T07:46:35.459Z'
      numEdits: 1
      reactions:
      - count: 3
        reaction: "\U0001F44D"
        users:
        - ferdithedev
        - arpowers
        - Tioh
      - count: 1
        reaction: "\U0001F91D"
        users:
        - Aleron12
    id: 63c74e4750cc81901daca964
    type: comment
  author: wen020
  content: "I encountered a memory leak problem. Whether we load the model to gpu\
    \ or delete the model with del and do gc, the memory is not recycled. The ideal\
    \ case for us is that the memory usage goes back to exactly the original value\
    \ after the load model -> del model -> gc process.\nTherefore, what should I do\
    \ to reclaim the memory occupied by the stable diffusion model.\n\ncode\uFF1A\n\
    \n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1674006039129-6377272a0c233a6c5ec9d40b.png)\n\
    \n\nruning log\uFF1A\n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1674006081031-6377272a0c233a6c5ec9d40b.png)"
  created_at: 2023-01-18 01:41:27+00:00
  edited: true
  hidden: false
  id: 63c74e4750cc81901daca964
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 49
repo_id: stabilityai/stable-diffusion-2
repo_type: model
status: open
target_branch: null
title: stable diffusion memory leak
