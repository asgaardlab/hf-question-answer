!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Davidliudev
conflicting_files: null
created_at: 2023-03-30 06:07:57+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c9ff1e8cd41470e5bf05a4f2050eac1a.svg
      fullname: Liu
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Davidliudev
      type: user
    createdAt: '2023-03-30T07:07:57.000Z'
    data:
      edited: true
      editors:
      - Davidliudev
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c9ff1e8cd41470e5bf05a4f2050eac1a.svg
          fullname: Liu
          isHf: false
          isPro: false
          name: Davidliudev
          type: user
        html: '<p>Different from the author''s notes, for me looks like the one with
          group size is worse than the one without group size with the same parameter
          setup. Not sure if i got something wrong<br>Wondering if anyone know the
          reason?</p>

          <p>And also curious if the new model quality is better or worse than the
          previous .pt model.</p>

          '
        raw: 'Different from the author''s notes, for me looks like the one with group
          size is worse than the one without group size with the same parameter setup.
          Not sure if i got something wrong

          Wondering if anyone know the reason?


          And also curious if the new model quality is better or worse than the previous
          .pt model.'
        updatedAt: '2023-03-30T07:23:05.994Z'
      numEdits: 3
      reactions: []
    id: 6425354db7cc51b43732535b
    type: comment
  author: Davidliudev
  content: 'Different from the author''s notes, for me looks like the one with group
    size is worse than the one without group size with the same parameter setup. Not
    sure if i got something wrong

    Wondering if anyone know the reason?


    And also curious if the new model quality is better or worse than the previous
    .pt model.'
  created_at: 2023-03-30 06:07:57+00:00
  edited: true
  hidden: false
  id: 6425354db7cc51b43732535b
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/630417380907b9a115c6aa9f/hsmz_dU2AyXe1DWHW7Pvd.png?w=200&h=200&f=face
      fullname: elinas
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: elinas
      type: user
    createdAt: '2023-03-30T14:47:18.000Z'
    data:
      edited: true
      editors:
      - elinas
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/630417380907b9a115c6aa9f/hsmz_dU2AyXe1DWHW7Pvd.png?w=200&h=200&f=face
          fullname: elinas
          isHf: false
          isPro: false
          name: elinas
          type: user
        html: '<p>In evaluations, lower = better. So the group size 128 is marginally
          better than the un-grouped version.</p>

          <p>Or are you referring to actual inference results on your end?</p>

          <p>Also, both the grouped and un-grouped should be better than the original
          model due to the implementation of true sequential quantization. Unfortunately
          I did not save the original evals so I can''t provide a comparison.</p>

          '
        raw: 'In evaluations, lower = better. So the group size 128 is marginally
          better than the un-grouped version.


          Or are you referring to actual inference results on your end?


          Also, both the grouped and un-grouped should be better than the original
          model due to the implementation of true sequential quantization. Unfortunately
          I did not save the original evals so I can''t provide a comparison.'
        updatedAt: '2023-03-30T14:50:10.643Z'
      numEdits: 2
      reactions: []
    id: 6425a0f6348d0ea085e7b971
    type: comment
  author: elinas
  content: 'In evaluations, lower = better. So the group size 128 is marginally better
    than the un-grouped version.


    Or are you referring to actual inference results on your end?


    Also, both the grouped and un-grouped should be better than the original model
    due to the implementation of true sequential quantization. Unfortunately I did
    not save the original evals so I can''t provide a comparison.'
  created_at: 2023-03-30 13:47:18+00:00
  edited: true
  hidden: false
  id: 6425a0f6348d0ea085e7b971
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c9ff1e8cd41470e5bf05a4f2050eac1a.svg
      fullname: Liu
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Davidliudev
      type: user
    createdAt: '2023-03-30T14:55:40.000Z'
    data:
      edited: false
      editors:
      - Davidliudev
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c9ff1e8cd41470e5bf05a4f2050eac1a.svg
          fullname: Liu
          isHf: false
          isPro: false
          name: Davidliudev
          type: user
        html: '<p>Thanks. It seemed that the max new tokens affected the quality.<br>I
          accidentally set it to 2000 and the result messed up.<br>I change it to
          200 for both and inference seemed ok now.</p>

          <p>Oh another thing i noticed that is for ungrouped and the original model
          I never get OOM error (I use a 4090 with 24 GB VRAM).<br>But with grouped
          ones I might sometimes get OOM.<br>Maybe it eats more VRAM....</p>

          <p>Anyway thanks for your clarification elinas</p>

          '
        raw: 'Thanks. It seemed that the max new tokens affected the quality.

          I accidentally set it to 2000 and the result messed up.

          I change it to 200 for both and inference seemed ok now.


          Oh another thing i noticed that is for ungrouped and the original model
          I never get OOM error (I use a 4090 with 24 GB VRAM).

          But with grouped ones I might sometimes get OOM.

          Maybe it eats more VRAM....


          Anyway thanks for your clarification elinas'
        updatedAt: '2023-03-30T14:55:40.117Z'
      numEdits: 0
      reactions: []
    id: 6425a2ec08e9e0ea8ccefe34
    type: comment
  author: Davidliudev
  content: 'Thanks. It seemed that the max new tokens affected the quality.

    I accidentally set it to 2000 and the result messed up.

    I change it to 200 for both and inference seemed ok now.


    Oh another thing i noticed that is for ungrouped and the original model I never
    get OOM error (I use a 4090 with 24 GB VRAM).

    But with grouped ones I might sometimes get OOM.

    Maybe it eats more VRAM....


    Anyway thanks for your clarification elinas'
  created_at: 2023-03-30 13:55:40+00:00
  edited: false
  hidden: false
  id: 6425a2ec08e9e0ea8ccefe34
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/630417380907b9a115c6aa9f/hsmz_dU2AyXe1DWHW7Pvd.png?w=200&h=200&f=face
      fullname: elinas
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: elinas
      type: user
    createdAt: '2023-03-30T15:15:41.000Z'
    data:
      edited: false
      editors:
      - elinas
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/630417380907b9a115c6aa9f/hsmz_dU2AyXe1DWHW7Pvd.png?w=200&h=200&f=face
          fullname: elinas
          isHf: false
          isPro: false
          name: elinas
          type: user
        html: '<p>Yes as mentioned in the README and the file size itself, it will
          use 1GB more of VRAM by default, so 18GB without any context.</p>

          '
        raw: Yes as mentioned in the README and the file size itself, it will use
          1GB more of VRAM by default, so 18GB without any context.
        updatedAt: '2023-03-30T15:15:41.318Z'
      numEdits: 0
      reactions: []
    id: 6425a79d1454fbdb60176b22
    type: comment
  author: elinas
  content: Yes as mentioned in the README and the file size itself, it will use 1GB
    more of VRAM by default, so 18GB without any context.
  created_at: 2023-03-30 14:15:41+00:00
  edited: false
  hidden: false
  id: 6425a79d1454fbdb60176b22
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/630417380907b9a115c6aa9f/hsmz_dU2AyXe1DWHW7Pvd.png?w=200&h=200&f=face
      fullname: elinas
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: elinas
      type: user
    createdAt: '2023-03-30T15:15:47.000Z'
    data:
      status: closed
    id: 6425a7a31454fbdb60176b5d
    type: status-change
  author: elinas
  created_at: 2023-03-30 14:15:47+00:00
  id: 6425a7a31454fbdb60176b5d
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 8
repo_id: elinas/alpaca-30b-lora-int4
repo_type: model
status: closed
target_branch: null
title: The new checkpoints performance comparasion
