!!python/object:huggingface_hub.community.DiscussionWithDetails
author: nawal2
conflicting_files: null
created_at: 2023-12-21 14:13:56+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/361c0c14c27e6100379bfec9520886ef.svg
      fullname: Nawal Husnoo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nawal2
      type: user
    createdAt: '2023-12-21T14:13:56.000Z'
    data:
      edited: true
      editors:
      - nawal2
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4869060516357422
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/361c0c14c27e6100379bfec9520886ef.svg
          fullname: Nawal Husnoo
          isHf: false
          isPro: false
          name: nawal2
          type: user
        html: "<p>Using this image:<br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/6444dbfa7a7b94ddc2d115c7/_iJxYnozSOc4aZA4uEfNn.png\"\
          ><img alt=\"IMG_20231210_220649_640x480.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6444dbfa7a7b94ddc2d115c7/_iJxYnozSOc4aZA4uEfNn.png\"\
          ></a></p>\n<p>and this llama server:</p>\n<pre><code> ./server -m models/obsidian-f16.gguf\
          \ --mmproj models/mmproj-obsidian-f16.gguf --host 0.0.0.0  -ngl 42\n</code></pre>\n\
          <p>and this python code:</p>\n<pre><code>import requests\nimport json\n\
          import base64\n\nimage_path = '/home/nawal/IMG_20231210_220649_640x480.png'\n\
          \nwith open(image_path, 'rb') as image_file:\n    encoded_string = base64.b64encode(image_file.read()).decode('utf-8')\n\
          \nurl = 'http://192.168.0.52:8080/completion'\nheaders = { 'Content-Type':\
          \ 'application/json' }\ndata = {\n    'prompt': '''\n&lt;|im_start|&gt;user\n\
          What does this image contain?\\n[img-1]\n###\n&lt;|im_start|&gt;assistant''',\n\
          \    'n_predict': 512,\n    'top_k': 40,\n    'temperature': 0.2,\n    'image_data':\
          \ [{'data': encoded_string, 'id': 1}]\n}\nresponse = requests.post(url,\
          \ headers=headers, data=json.dumps(data))\n\n# Check the response\nif response.status_code\
          \ == 200:\n    print('Request successful!')\n    print(response.json())\
          \  # This will print the response content\nelse:\n    print('Request failed\
          \ with status code:', response.status_code)\n</code></pre>\n<p>The model\
          \ keeps talking and eventually barfs out <code>###\\n</code> - any idea\
          \ how to make it stop while it's ahead? Any hints on prompts to make it\
          \ less verbose or less likely to put 'assistant:' in the output stream several\
          \ times?</p>\n<pre><code>{'content': \"\\n: The image features a wooden\
          \ table with three Legos pieces on it.\\n###\\n###\\nassistant\\n: Two of\
          \ the Legos are red, while the third one is blue. They are arranged in a\
          \ way that makes them look like they are standing or sitting next to each\
          \ other.\\n###\\n###\\nassistant\\n: The Legos are placed on top of the\
          \ table, creating an interesting and playful scene.\\n###\\n###\\n###\\\
          nassistant\\n: The Legos' arrangement suggests that they might be part of\
          \ a creative display or decoration project. This could be for various purposes\
          \ such as home decor, a themed event, or even a toy store display.\\n###\\\
          n###\\n###\\n###\\n###\\nassistant\\n: The Legos are placed in a way that\
          \ makes it easy to see the different colors and shapes of each piece. This\
          \ arrangement creates an eye-catching display that can evoke a sense of\
          \ playfulness and imagination, making the scene more engaging for viewers.\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\nassistant\\n: The Legos\
          \ are arranged in such a way that they create a visually appealing composition\
          \ on the table. Their contrasting colors and different shapes add depth\
          \ to the display, making it more interesting and dynamic. This type of arrangement\
          \ can be used for various purposes, such as home decoration or artistic\
          \ projects, where the unique combination of colors and shapes can evoke\
          \ emotions and spark creativity.\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\", 'generation_settings': {'frequency_penalty': 0.0, 'grammar':\
          \ '', 'ignore_eos': False, 'logit_bias': [], 'min_p': 0.05000000074505806,\
          \ 'mirostat': 0, 'mirostat_eta': 0.10000000149011612, 'mirostat_tau': 5.0,\
          \ 'model': 'models/obsidian-f16.gguf', 'n_ctx': 2048, 'n_keep': 0, 'n_predict':\
          \ 512, 'n_probs': 0, 'penalize_nl': True, 'presence_penalty': 0.0, 'repeat_last_n':\
          \ 64, 'repeat_penalty': 1.100000023841858, 'seed': 4294967295, 'stop': [],\
          \ 'stream': False, 'temp': 0.20000000298023224, 'tfs_z': 1.0, 'top_k': 40,\
          \ 'top_p': 0.949999988079071, 'typical_p': 1.0}, 'model': 'models/obsidian-f16.gguf',\
          \ 'prompt': '', 'slot_id': 0, 'stop': True, 'stopped_eos': False, 'stopped_limit':\
          \ True, 'stopped_word': False, 'stopping_word': '', 'timings': {'predicted_ms':\
          \ 40839.297, 'predicted_n': 512, 'predicted_per_second': 12.536944502252329,\
          \ 'predicted_per_token_ms': 79.764251953125, 'prompt_ms': 4771.674, 'prompt_n':\
          \ 0, 'prompt_per_second': 0.0, 'prompt_per_token_ms': None}, 'tokens_cached':\
          \ 1105, 'tokens_evaluated': 0, 'tokens_predicted': 512, 'truncated': False}\n\
          </code></pre>\n"
        raw: "Using this image:\n![IMG_20231210_220649_640x480.png](https://cdn-uploads.huggingface.co/production/uploads/6444dbfa7a7b94ddc2d115c7/_iJxYnozSOc4aZA4uEfNn.png)\n\
          \nand this llama server:\n```\n ./server -m models/obsidian-f16.gguf --mmproj\
          \ models/mmproj-obsidian-f16.gguf --host 0.0.0.0  -ngl 42\n```\nand this\
          \ python code:\n```\nimport requests\nimport json\nimport base64\n\nimage_path\
          \ = '/home/nawal/IMG_20231210_220649_640x480.png'\n\nwith open(image_path,\
          \ 'rb') as image_file:\n    encoded_string = base64.b64encode(image_file.read()).decode('utf-8')\n\
          \nurl = 'http://192.168.0.52:8080/completion'\nheaders = { 'Content-Type':\
          \ 'application/json' }\ndata = {\n    'prompt': '''\n<|im_start|>user\n\
          What does this image contain?\\n[img-1]\n###\n<|im_start|>assistant''',\n\
          \    'n_predict': 512,\n    'top_k': 40,\n    'temperature': 0.2,\n    'image_data':\
          \ [{'data': encoded_string, 'id': 1}]\n}\nresponse = requests.post(url,\
          \ headers=headers, data=json.dumps(data))\n\n# Check the response\nif response.status_code\
          \ == 200:\n    print('Request successful!')\n    print(response.json())\
          \  # This will print the response content\nelse:\n    print('Request failed\
          \ with status code:', response.status_code)\n```\n\nThe model keeps talking\
          \ and eventually barfs out `###\\n` - any idea how to make it stop while\
          \ it's ahead? Any hints on prompts to make it less verbose or less likely\
          \ to put 'assistant:' in the output stream several times?\n\n```\n{'content':\
          \ \"\\n: The image features a wooden table with three Legos pieces on it.\\\
          n###\\n###\\nassistant\\n: Two of the Legos are red, while the third one\
          \ is blue. They are arranged in a way that makes them look like they are\
          \ standing or sitting next to each other.\\n###\\n###\\nassistant\\n: The\
          \ Legos are placed on top of the table, creating an interesting and playful\
          \ scene.\\n###\\n###\\n###\\nassistant\\n: The Legos' arrangement suggests\
          \ that they might be part of a creative display or decoration project. This\
          \ could be for various purposes such as home decor, a themed event, or even\
          \ a toy store display.\\n###\\n###\\n###\\n###\\n###\\nassistant\\n: The\
          \ Legos are placed in a way that makes it easy to see the different colors\
          \ and shapes of each piece. This arrangement creates an eye-catching display\
          \ that can evoke a sense of playfulness and imagination, making the scene\
          \ more engaging for viewers.\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\nassistant\\n: The Legos are arranged in such a way that they create\
          \ a visually appealing composition on the table. Their contrasting colors\
          \ and different shapes add depth to the display, making it more interesting\
          \ and dynamic. This type of arrangement can be used for various purposes,\
          \ such as home decoration or artistic projects, where the unique combination\
          \ of colors and shapes can evoke emotions and spark creativity.\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
          n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\", 'generation_settings':\
          \ {'frequency_penalty': 0.0, 'grammar': '', 'ignore_eos': False, 'logit_bias':\
          \ [], 'min_p': 0.05000000074505806, 'mirostat': 0, 'mirostat_eta': 0.10000000149011612,\
          \ 'mirostat_tau': 5.0, 'model': 'models/obsidian-f16.gguf', 'n_ctx': 2048,\
          \ 'n_keep': 0, 'n_predict': 512, 'n_probs': 0, 'penalize_nl': True, 'presence_penalty':\
          \ 0.0, 'repeat_last_n': 64, 'repeat_penalty': 1.100000023841858, 'seed':\
          \ 4294967295, 'stop': [], 'stream': False, 'temp': 0.20000000298023224,\
          \ 'tfs_z': 1.0, 'top_k': 40, 'top_p': 0.949999988079071, 'typical_p': 1.0},\
          \ 'model': 'models/obsidian-f16.gguf', 'prompt': '', 'slot_id': 0, 'stop':\
          \ True, 'stopped_eos': False, 'stopped_limit': True, 'stopped_word': False,\
          \ 'stopping_word': '', 'timings': {'predicted_ms': 40839.297, 'predicted_n':\
          \ 512, 'predicted_per_second': 12.536944502252329, 'predicted_per_token_ms':\
          \ 79.764251953125, 'prompt_ms': 4771.674, 'prompt_n': 0, 'prompt_per_second':\
          \ 0.0, 'prompt_per_token_ms': None}, 'tokens_cached': 1105, 'tokens_evaluated':\
          \ 0, 'tokens_predicted': 512, 'truncated': False}\n```\n"
        updatedAt: '2023-12-21T14:14:34.437Z'
      numEdits: 1
      reactions: []
    id: 658448242cced5970f21d669
    type: comment
  author: nawal2
  content: "Using this image:\n![IMG_20231210_220649_640x480.png](https://cdn-uploads.huggingface.co/production/uploads/6444dbfa7a7b94ddc2d115c7/_iJxYnozSOc4aZA4uEfNn.png)\n\
    \nand this llama server:\n```\n ./server -m models/obsidian-f16.gguf --mmproj\
    \ models/mmproj-obsidian-f16.gguf --host 0.0.0.0  -ngl 42\n```\nand this python\
    \ code:\n```\nimport requests\nimport json\nimport base64\n\nimage_path = '/home/nawal/IMG_20231210_220649_640x480.png'\n\
    \nwith open(image_path, 'rb') as image_file:\n    encoded_string = base64.b64encode(image_file.read()).decode('utf-8')\n\
    \nurl = 'http://192.168.0.52:8080/completion'\nheaders = { 'Content-Type': 'application/json'\
    \ }\ndata = {\n    'prompt': '''\n<|im_start|>user\nWhat does this image contain?\\\
    n[img-1]\n###\n<|im_start|>assistant''',\n    'n_predict': 512,\n    'top_k':\
    \ 40,\n    'temperature': 0.2,\n    'image_data': [{'data': encoded_string, 'id':\
    \ 1}]\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(data))\n\
    \n# Check the response\nif response.status_code == 200:\n    print('Request successful!')\n\
    \    print(response.json())  # This will print the response content\nelse:\n \
    \   print('Request failed with status code:', response.status_code)\n```\n\nThe\
    \ model keeps talking and eventually barfs out `###\\n` - any idea how to make\
    \ it stop while it's ahead? Any hints on prompts to make it less verbose or less\
    \ likely to put 'assistant:' in the output stream several times?\n\n```\n{'content':\
    \ \"\\n: The image features a wooden table with three Legos pieces on it.\\n###\\\
    n###\\nassistant\\n: Two of the Legos are red, while the third one is blue. They\
    \ are arranged in a way that makes them look like they are standing or sitting\
    \ next to each other.\\n###\\n###\\nassistant\\n: The Legos are placed on top\
    \ of the table, creating an interesting and playful scene.\\n###\\n###\\n###\\\
    nassistant\\n: The Legos' arrangement suggests that they might be part of a creative\
    \ display or decoration project. This could be for various purposes such as home\
    \ decor, a themed event, or even a toy store display.\\n###\\n###\\n###\\n###\\\
    n###\\nassistant\\n: The Legos are placed in a way that makes it easy to see the\
    \ different colors and shapes of each piece. This arrangement creates an eye-catching\
    \ display that can evoke a sense of playfulness and imagination, making the scene\
    \ more engaging for viewers.\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    nassistant\\n: The Legos are arranged in such a way that they create a visually\
    \ appealing composition on the table. Their contrasting colors and different shapes\
    \ add depth to the display, making it more interesting and dynamic. This type\
    \ of arrangement can be used for various purposes, such as home decoration or\
    \ artistic projects, where the unique combination of colors and shapes can evoke\
    \ emotions and spark creativity.\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\\
    n###\\n###\\n###\\n###\\n###\\n###\", 'generation_settings': {'frequency_penalty':\
    \ 0.0, 'grammar': '', 'ignore_eos': False, 'logit_bias': [], 'min_p': 0.05000000074505806,\
    \ 'mirostat': 0, 'mirostat_eta': 0.10000000149011612, 'mirostat_tau': 5.0, 'model':\
    \ 'models/obsidian-f16.gguf', 'n_ctx': 2048, 'n_keep': 0, 'n_predict': 512, 'n_probs':\
    \ 0, 'penalize_nl': True, 'presence_penalty': 0.0, 'repeat_last_n': 64, 'repeat_penalty':\
    \ 1.100000023841858, 'seed': 4294967295, 'stop': [], 'stream': False, 'temp':\
    \ 0.20000000298023224, 'tfs_z': 1.0, 'top_k': 40, 'top_p': 0.949999988079071,\
    \ 'typical_p': 1.0}, 'model': 'models/obsidian-f16.gguf', 'prompt': '', 'slot_id':\
    \ 0, 'stop': True, 'stopped_eos': False, 'stopped_limit': True, 'stopped_word':\
    \ False, 'stopping_word': '', 'timings': {'predicted_ms': 40839.297, 'predicted_n':\
    \ 512, 'predicted_per_second': 12.536944502252329, 'predicted_per_token_ms': 79.764251953125,\
    \ 'prompt_ms': 4771.674, 'prompt_n': 0, 'prompt_per_second': 0.0, 'prompt_per_token_ms':\
    \ None}, 'tokens_cached': 1105, 'tokens_evaluated': 0, 'tokens_predicted': 512,\
    \ 'truncated': False}\n```\n"
  created_at: 2023-12-21 14:13:56+00:00
  edited: true
  hidden: false
  id: 658448242cced5970f21d669
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/361c0c14c27e6100379bfec9520886ef.svg
      fullname: Nawal Husnoo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nawal2
      type: user
    createdAt: '2023-12-21T14:25:43.000Z'
    data:
      edited: false
      editors:
      - nawal2
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4504133462905884
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/361c0c14c27e6100379bfec9520886ef.svg
          fullname: Nawal Husnoo
          isHf: false
          isPro: false
          name: nawal2
          type: user
        html: '<p>Ah using stop tokens helped:<br>    ''stop'': [''\n###'']</p>

          '
        raw: "Ah using stop tokens helped:\n    'stop': ['\\n###']\n"
        updatedAt: '2023-12-21T14:25:43.373Z'
      numEdits: 0
      reactions: []
      relatedEventId: 65844ae7c73f74776b1c7c68
    id: 65844ae7c73f74776b1c7c66
    type: comment
  author: nawal2
  content: "Ah using stop tokens helped:\n    'stop': ['\\n###']\n"
  created_at: 2023-12-21 14:25:43+00:00
  edited: false
  hidden: false
  id: 65844ae7c73f74776b1c7c66
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/361c0c14c27e6100379bfec9520886ef.svg
      fullname: Nawal Husnoo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nawal2
      type: user
    createdAt: '2023-12-21T14:25:43.000Z'
    data:
      status: closed
    id: 65844ae7c73f74776b1c7c68
    type: status-change
  author: nawal2
  created_at: 2023-12-21 14:25:43+00:00
  id: 65844ae7c73f74776b1c7c68
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: nisten/obsidian-3b-multimodal-q6-gguf
repo_type: model
status: closed
target_branch: null
title: it won't stop talking!
