!!python/object:huggingface_hub.community.DiscussionWithDetails
author: mlnima
conflicting_files: null
created_at: 2023-05-18 15:51:17+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/5d323228768ce4d474337a6498f7e109.svg
      fullname: nima malayeri
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mlnima
      type: user
    createdAt: '2023-05-18T16:51:17.000Z'
    data:
      edited: false
      editors:
      - mlnima
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/5d323228768ce4d474337a6498f7e109.svg
          fullname: nima malayeri
          isHf: false
          isPro: false
          name: mlnima
          type: user
        html: '<p>would you please take a look at my code, the generated .wav files
          are corrupted and I can not play it with any player. here is my code :</p>

          <p>import os<br>import torch<br>from diffusers import AudioLDMPipeline<br>import
          scipy.io.wavfile</p>

          <h1 id="create-the-necessary-directories-if-they-do-not-exist">Create the
          necessary directories if they do not exist</h1>

          <p>if not os.path.exists(''./models''):<br>    os.makedirs(''./models'')<br>if
          not os.path.exists(''./outputs''):<br>    os.makedirs(''./outputs'')</p>

          <h1 id="set-the-repository-id-and-model-directory">Set the repository ID
          and model directory</h1>

          <p>repo_id = "cvssp/audioldm-m-full"<br>model_dir = ''./models''</p>

          <h1 id="check-if-the-model-is-already-downloaded">Check if the model is
          already downloaded</h1>

          <p>model_path = os.path.join(model_dir, repo_id.split(''/'')[-1])<br>if
          not os.path.exists(model_path):<br>    # Download the model and move it
          to the model directory<br>    pipe = AudioLDMPipeline.from_pretrained(repo_id,
          torch_dtype=torch.float16)<br>    pipe.save_pretrained(model_path)<br>else:<br>    #
          Load the downloaded model<br>    pipe = AudioLDMPipeline.from_pretrained(model_path,
          torch_dtype=torch.float16)</p>

          <h1 id="move-the-pipeline-to-the-gpu">Move the pipeline to the GPU</h1>

          <p>pipe = pipe.to("cuda")</p>

          <h1 id="define-the-list-of-prompts">Define the list of prompts</h1>

          <p>prompts = ["Techno music with a strong, upbeat tempo and high melodic
          riffs", "Classical music with a slow tempo and soft melody"]</p>

          <h1 id="generate-audio-for-each-prompt">Generate audio for each prompt</h1>

          <p>for i, prompt in enumerate(prompts):<br>    audio = pipe(prompt, num_inference_steps=10,
          audio_length_in_s=20.0).audios[0]</p>

          <pre><code># Save the audio to a unique file in the outputs directory

          output_path = os.path.join(''./outputs'', f''audio_{i}.wav'')

          scipy.io.wavfile.write(output_path, rate=16000, data=audio)

          </code></pre>

          <p><audio src="https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/LkrYr3h1xeUW_3YYqZkCa.wav"
          controls=""></audio><br><audio src="https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/qwYckxYmWKZtA4mxqW2bX.wav"
          controls=""></audio></p>

          '
        raw: "would you please take a look at my code, the generated .wav files are\
          \ corrupted and I can not play it with any player. here is my code :\r\n\
          \r\nimport os\r\nimport torch\r\nfrom diffusers import AudioLDMPipeline\r\
          \nimport scipy.io.wavfile\r\n\r\n\r\n# Create the necessary directories\
          \ if they do not exist\r\nif not os.path.exists('./models'):\r\n    os.makedirs('./models')\r\
          \nif not os.path.exists('./outputs'):\r\n    os.makedirs('./outputs')\r\n\
          \r\n# Set the repository ID and model directory\r\nrepo_id = \"cvssp/audioldm-m-full\"\
          \r\nmodel_dir = './models'\r\n\r\n# Check if the model is already downloaded\r\
          \nmodel_path = os.path.join(model_dir, repo_id.split('/')[-1])\r\nif not\
          \ os.path.exists(model_path):\r\n    # Download the model and move it to\
          \ the model directory\r\n    pipe = AudioLDMPipeline.from_pretrained(repo_id,\
          \ torch_dtype=torch.float16)\r\n    pipe.save_pretrained(model_path)\r\n\
          else:\r\n    # Load the downloaded model\r\n    pipe = AudioLDMPipeline.from_pretrained(model_path,\
          \ torch_dtype=torch.float16)\r\n\r\n# Move the pipeline to the GPU\r\npipe\
          \ = pipe.to(\"cuda\")\r\n\r\n# Define the list of prompts\r\nprompts = [\"\
          Techno music with a strong, upbeat tempo and high melodic riffs\", \"Classical\
          \ music with a slow tempo and soft melody\"]\r\n\r\n# Generate audio for\
          \ each prompt\r\nfor i, prompt in enumerate(prompts):\r\n    audio = pipe(prompt,\
          \ num_inference_steps=10, audio_length_in_s=20.0).audios[0]\r\n\r\n    #\
          \ Save the audio to a unique file in the outputs directory\r\n    output_path\
          \ = os.path.join('./outputs', f'audio_{i}.wav')\r\n    scipy.io.wavfile.write(output_path,\
          \ rate=16000, data=audio)\r\n\r\n<audio controls src=\"https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/LkrYr3h1xeUW_3YYqZkCa.wav\"\
          ></audio>\r\n<audio controls src=\"https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/qwYckxYmWKZtA4mxqW2bX.wav\"\
          ></audio>\r\n"
        updatedAt: '2023-05-18T16:51:17.453Z'
      numEdits: 0
      reactions: []
    id: 64665785875b1a86a7884a03
    type: comment
  author: mlnima
  content: "would you please take a look at my code, the generated .wav files are\
    \ corrupted and I can not play it with any player. here is my code :\r\n\r\nimport\
    \ os\r\nimport torch\r\nfrom diffusers import AudioLDMPipeline\r\nimport scipy.io.wavfile\r\
    \n\r\n\r\n# Create the necessary directories if they do not exist\r\nif not os.path.exists('./models'):\r\
    \n    os.makedirs('./models')\r\nif not os.path.exists('./outputs'):\r\n    os.makedirs('./outputs')\r\
    \n\r\n# Set the repository ID and model directory\r\nrepo_id = \"cvssp/audioldm-m-full\"\
    \r\nmodel_dir = './models'\r\n\r\n# Check if the model is already downloaded\r\
    \nmodel_path = os.path.join(model_dir, repo_id.split('/')[-1])\r\nif not os.path.exists(model_path):\r\
    \n    # Download the model and move it to the model directory\r\n    pipe = AudioLDMPipeline.from_pretrained(repo_id,\
    \ torch_dtype=torch.float16)\r\n    pipe.save_pretrained(model_path)\r\nelse:\r\
    \n    # Load the downloaded model\r\n    pipe = AudioLDMPipeline.from_pretrained(model_path,\
    \ torch_dtype=torch.float16)\r\n\r\n# Move the pipeline to the GPU\r\npipe = pipe.to(\"\
    cuda\")\r\n\r\n# Define the list of prompts\r\nprompts = [\"Techno music with\
    \ a strong, upbeat tempo and high melodic riffs\", \"Classical music with a slow\
    \ tempo and soft melody\"]\r\n\r\n# Generate audio for each prompt\r\nfor i, prompt\
    \ in enumerate(prompts):\r\n    audio = pipe(prompt, num_inference_steps=10, audio_length_in_s=20.0).audios[0]\r\
    \n\r\n    # Save the audio to a unique file in the outputs directory\r\n    output_path\
    \ = os.path.join('./outputs', f'audio_{i}.wav')\r\n    scipy.io.wavfile.write(output_path,\
    \ rate=16000, data=audio)\r\n\r\n<audio controls src=\"https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/LkrYr3h1xeUW_3YYqZkCa.wav\"\
    ></audio>\r\n<audio controls src=\"https://cdn-uploads.huggingface.co/production/uploads/63440e8293b531e868811403/qwYckxYmWKZtA4mxqW2bX.wav\"\
    ></audio>\r\n"
  created_at: 2023-05-18 15:51:17+00:00
  edited: false
  hidden: false
  id: 64665785875b1a86a7884a03
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1653243468328-61f91cf54a8e5a275b2b3e7c.jpeg?w=200&h=200&f=face
      fullname: Sanchit Gandhi
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: sanchit-gandhi
      type: user
    createdAt: '2023-05-18T17:11:22.000Z'
    data:
      edited: false
      editors:
      - sanchit-gandhi
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1653243468328-61f91cf54a8e5a275b2b3e7c.jpeg?w=200&h=200&f=face
          fullname: Sanchit Gandhi
          isHf: true
          isPro: false
          name: sanchit-gandhi
          type: user
        html: '<p>See <a rel="nofollow" href="https://github.com/huggingface/diffusers/pull/3189">https://github.com/huggingface/diffusers/pull/3189</a>
          and <a rel="nofollow" href="https://github.com/huggingface/diffusers/issues/3091">https://github.com/huggingface/diffusers/issues/3091</a>,
          you need to run diffusers on the latest version to fix this:</p>

          <pre><code>pip install --upgrade diffusers

          </code></pre>

          '
        raw: 'See https://github.com/huggingface/diffusers/pull/3189 and https://github.com/huggingface/diffusers/issues/3091,
          you need to run diffusers on the latest version to fix this:

          ```

          pip install --upgrade diffusers

          ```'
        updatedAt: '2023-05-18T17:11:22.826Z'
      numEdits: 0
      reactions: []
      relatedEventId: 64665c3ae0fe831b479390f9
    id: 64665c3ae0fe831b479390f8
    type: comment
  author: sanchit-gandhi
  content: 'See https://github.com/huggingface/diffusers/pull/3189 and https://github.com/huggingface/diffusers/issues/3091,
    you need to run diffusers on the latest version to fix this:

    ```

    pip install --upgrade diffusers

    ```'
  created_at: 2023-05-18 16:11:22+00:00
  edited: false
  hidden: false
  id: 64665c3ae0fe831b479390f8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1653243468328-61f91cf54a8e5a275b2b3e7c.jpeg?w=200&h=200&f=face
      fullname: Sanchit Gandhi
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: sanchit-gandhi
      type: user
    createdAt: '2023-05-18T17:11:22.000Z'
    data:
      status: closed
    id: 64665c3ae0fe831b479390f9
    type: status-change
  author: sanchit-gandhi
  created_at: 2023-05-18 16:11:22+00:00
  id: 64665c3ae0fe831b479390f9
  new_status: closed
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/5d323228768ce4d474337a6498f7e109.svg
      fullname: nima malayeri
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mlnima
      type: user
    createdAt: '2023-05-18T17:23:45.000Z'
    data:
      edited: false
      editors:
      - mlnima
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/5d323228768ce4d474337a6498f7e109.svg
          fullname: nima malayeri
          isHf: false
          isPro: false
          name: mlnima
          type: user
        html: '<p>it got fixed  just used some np at the end : </p>

          <h1 id="generate-audio-for-each-prompt">Generate audio for each prompt</h1>

          <p>for i, prompt in enumerate(prompts):<br>    audio = pipe(prompt, num_inference_steps=20,
          audio_length_in_s=20.0).audios[0]</p>

          <pre><code># Convert and scale the audio data

          audio_scaled = np.int16(audio / np.max(np.abs(audio)) * 32767)


          # Save the audio to a unique file in the outputs directory

          output_path = os.path.join(''./outputs'', f''audio_{i}.wav'')

          scipy.io.wavfile.write(output_path, rate=16000, data=audio_scaled)

          </code></pre>

          '
        raw: "it got fixed  just used some np at the end : \n# Generate audio for\
          \ each prompt\nfor i, prompt in enumerate(prompts):\n    audio = pipe(prompt,\
          \ num_inference_steps=20, audio_length_in_s=20.0).audios[0]\n\n    # Convert\
          \ and scale the audio data\n    audio_scaled = np.int16(audio / np.max(np.abs(audio))\
          \ * 32767)\n\n    # Save the audio to a unique file in the outputs directory\n\
          \    output_path = os.path.join('./outputs', f'audio_{i}.wav')\n    scipy.io.wavfile.write(output_path,\
          \ rate=16000, data=audio_scaled)"
        updatedAt: '2023-05-18T17:23:45.381Z'
      numEdits: 0
      reactions: []
    id: 64665f219c627c78f86cb905
    type: comment
  author: mlnima
  content: "it got fixed  just used some np at the end : \n# Generate audio for each\
    \ prompt\nfor i, prompt in enumerate(prompts):\n    audio = pipe(prompt, num_inference_steps=20,\
    \ audio_length_in_s=20.0).audios[0]\n\n    # Convert and scale the audio data\n\
    \    audio_scaled = np.int16(audio / np.max(np.abs(audio)) * 32767)\n\n    # Save\
    \ the audio to a unique file in the outputs directory\n    output_path = os.path.join('./outputs',\
    \ f'audio_{i}.wav')\n    scipy.io.wavfile.write(output_path, rate=16000, data=audio_scaled)"
  created_at: 2023-05-18 16:23:45+00:00
  edited: false
  hidden: false
  id: 64665f219c627c78f86cb905
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: cvssp/audioldm-m-full
repo_type: model
status: closed
target_branch: null
title: 'output files issue '
