!!python/object:huggingface_hub.community.DiscussionWithDetails
author: aDingil
conflicting_files: null
created_at: 2023-08-21 12:20:50+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/021f7b819fd9fc4baab98dd631c1b565.svg
      fullname: name
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: aDingil
      type: user
    createdAt: '2023-08-21T13:20:50.000Z'
    data:
      edited: false
      editors:
      - aDingil
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5932610630989075
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/021f7b819fd9fc4baab98dd631c1b565.svg
          fullname: name
          isHf: false
          isPro: false
          name: aDingil
          type: user
        html: '<p>I got an error with the given instructions, here is how i fixed
          it:</p>

          <pre><code class="language-python"><span class="hljs-keyword">from</span>
          transformers <span class="hljs-keyword">import</span> Pix2StructProcessor,
          Pix2StructForConditionalGeneration

          <span class="hljs-keyword">import</span> requests

          <span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span>
          Image


          processor = Pix2StructProcessor.from_pretrained(<span class="hljs-string">''google/matcha-chart2text-pew''</span>)

          model = Pix2StructForConditionalGeneration.from_pretrained(<span class="hljs-string">''google/matcha-chart2text-pew''</span>)


          url = <span class="hljs-string">"https://raw.githubusercontent.com/vis-nlp/ChartQA/main/ChartQA%20Dataset/val/png/20294671002019.png"</span>

          image = Image.<span class="hljs-built_in">open</span>(requests.get(url,
          stream=<span class="hljs-literal">True</span>).raw)





          question = <span class="hljs-string">"Generate underlying data table of
          the figure below:"</span>

          question = <span class="hljs-string">"Which country has the biggest value?"</span>


          inputs = processor(images=image, text=question, return_tensors=<span class="hljs-string">"pt"</span>)

          predictions = model.generate(**inputs)

          <span class="hljs-built_in">print</span>(processor.decode(predictions[<span
          class="hljs-number">0</span>], skip_special_tokens=<span class="hljs-literal">True</span>))

          </code></pre>

          '
        raw: "I got an error with the given instructions, here is how i fixed it:\r\
          \n```python\r\nfrom transformers import Pix2StructProcessor, Pix2StructForConditionalGeneration\r\
          \nimport requests\r\nfrom PIL import Image\r\n\r\nprocessor = Pix2StructProcessor.from_pretrained('google/matcha-chart2text-pew')\r\
          \nmodel = Pix2StructForConditionalGeneration.from_pretrained('google/matcha-chart2text-pew')\r\
          \n\r\nurl = \"https://raw.githubusercontent.com/vis-nlp/ChartQA/main/ChartQA%20Dataset/val/png/20294671002019.png\"\
          \r\nimage = Image.open(requests.get(url, stream=True).raw)\r\n\r\n\r\n\r\
          \n\r\nquestion = \"Generate underlying data table of the figure below:\"\
          \r\nquestion = \"Which country has the biggest value?\"\r\n\r\ninputs =\
          \ processor(images=image, text=question, return_tensors=\"pt\")\r\npredictions\
          \ = model.generate(**inputs)\r\nprint(processor.decode(predictions[0], skip_special_tokens=True))\r\
          \n```"
        updatedAt: '2023-08-21T13:20:50.820Z'
      numEdits: 0
      reactions: []
    id: 64e364b2384b85306bd619e2
    type: comment
  author: aDingil
  content: "I got an error with the given instructions, here is how i fixed it:\r\n\
    ```python\r\nfrom transformers import Pix2StructProcessor, Pix2StructForConditionalGeneration\r\
    \nimport requests\r\nfrom PIL import Image\r\n\r\nprocessor = Pix2StructProcessor.from_pretrained('google/matcha-chart2text-pew')\r\
    \nmodel = Pix2StructForConditionalGeneration.from_pretrained('google/matcha-chart2text-pew')\r\
    \n\r\nurl = \"https://raw.githubusercontent.com/vis-nlp/ChartQA/main/ChartQA%20Dataset/val/png/20294671002019.png\"\
    \r\nimage = Image.open(requests.get(url, stream=True).raw)\r\n\r\n\r\n\r\n\r\n\
    question = \"Generate underlying data table of the figure below:\"\r\nquestion\
    \ = \"Which country has the biggest value?\"\r\n\r\ninputs = processor(images=image,\
    \ text=question, return_tensors=\"pt\")\r\npredictions = model.generate(**inputs)\r\
    \nprint(processor.decode(predictions[0], skip_special_tokens=True))\r\n```"
  created_at: 2023-08-21 12:20:50+00:00
  edited: false
  hidden: false
  id: 64e364b2384b85306bd619e2
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: google/matcha-chart2text-pew
repo_type: model
status: open
target_branch: null
title: How to run the model
