!!python/object:huggingface_hub.community.DiscussionWithDetails
author: hyzhak
conflicting_files: null
created_at: 2023-10-09 00:40:38+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/f23bae5a9063d79256aae707689308cb.svg
      fullname: Ievgenii Krevenets
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hyzhak
      type: user
    createdAt: '2023-10-09T01:40:38.000Z'
    data:
      edited: false
      editors:
      - hyzhak
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8262190222740173
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/f23bae5a9063d79256aae707689308cb.svg
          fullname: Ievgenii Krevenets
          isHf: false
          isPro: false
          name: hyzhak
          type: user
        html: '<p>What is the easier way to define HLS tile ID based on lat/long coordinates
          or polygon?</p>

          '
        raw: What is the easier way to define HLS tile ID based on lat/long coordinates
          or polygon?
        updatedAt: '2023-10-09T01:40:38.217Z'
      numEdits: 0
      reactions: []
    id: 65235a1636008ecc88bc5139
    type: comment
  author: hyzhak
  content: What is the easier way to define HLS tile ID based on lat/long coordinates
    or polygon?
  created_at: 2023-10-09 00:40:38+00:00
  edited: false
  hidden: false
  id: 65235a1636008ecc88bc5139
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/f23bae5a9063d79256aae707689308cb.svg
      fullname: Ievgenii Krevenets
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hyzhak
      type: user
    createdAt: '2023-10-15T10:18:17.000Z'
    data:
      from: What is the easier way to define HLS tile ID based on lat/long coordinates
        or polygon?
      to: What is the easest way to define HLS tile ID based on lat/long coordinates
        or polygon?
    id: 652bbc69f1205983228cc2c2
    type: title-change
  author: hyzhak
  created_at: 2023-10-15 09:18:17+00:00
  id: 652bbc69f1205983228cc2c2
  new_title: What is the easest way to define HLS tile ID based on lat/long coordinates
    or polygon?
  old_title: What is the easier way to define HLS tile ID based on lat/long coordinates
    or polygon?
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/cdaddb91652ac020e32a6af3e4e01a22.svg
      fullname: Christopher Phillips
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: CEPhillips
      type: user
    createdAt: '2023-10-20T14:49:52.000Z'
    data:
      edited: false
      editors:
      - CEPhillips
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9292727708816528
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/cdaddb91652ac020e32a6af3e4e01a22.svg
          fullname: Christopher Phillips
          isHf: false
          isPro: false
          name: CEPhillips
          type: user
        html: '<p>The most straight-forward approach, is to use the available tile
          system kml file and check which tile your given coordinate is within. If
          you have a polygon, I believe python''s shapely package has an overlap feature.</p>

          <p>You can find the tile system kml file here: <a rel="nofollow" href="https://hls.gsfc.nasa.gov/products-description/tiling-system/">https://hls.gsfc.nasa.gov/products-description/tiling-system/</a></p>

          '
        raw: 'The most straight-forward approach, is to use the available tile system
          kml file and check which tile your given coordinate is within. If you have
          a polygon, I believe python''s shapely package has an overlap feature.


          You can find the tile system kml file here: https://hls.gsfc.nasa.gov/products-description/tiling-system/'
        updatedAt: '2023-10-20T14:49:52.724Z'
      numEdits: 0
      reactions: []
      relatedEventId: 65329390ed74ace633609c6e
    id: 65329390ed74ace633609c6d
    type: comment
  author: CEPhillips
  content: 'The most straight-forward approach, is to use the available tile system
    kml file and check which tile your given coordinate is within. If you have a polygon,
    I believe python''s shapely package has an overlap feature.


    You can find the tile system kml file here: https://hls.gsfc.nasa.gov/products-description/tiling-system/'
  created_at: 2023-10-20 13:49:52+00:00
  edited: false
  hidden: false
  id: 65329390ed74ace633609c6d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/cdaddb91652ac020e32a6af3e4e01a22.svg
      fullname: Christopher Phillips
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: CEPhillips
      type: user
    createdAt: '2023-10-20T14:49:52.000Z'
    data:
      status: closed
    id: 65329390ed74ace633609c6e
    type: status-change
  author: CEPhillips
  created_at: 2023-10-20 13:49:52+00:00
  id: 65329390ed74ace633609c6e
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 18
repo_id: ibm-nasa-geospatial/Prithvi-100M
repo_type: model
status: closed
target_branch: null
title: What is the easest way to define HLS tile ID based on lat/long coordinates
  or polygon?
