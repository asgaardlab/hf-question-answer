!!python/object:huggingface_hub.community.DiscussionWithDetails
author: michaelfeil
conflicting_files: []
created_at: 2023-06-17 15:18:40+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/644fac0ce1d7a97f3b653ab1/fottSAPFrJdKeMW2UJv_l.jpeg?w=200&h=200&f=face
      fullname: Michael
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: michaelfeil
      type: user
    createdAt: '2023-06-17T16:18:40.000Z'
    data:
      edited: false
      editors:
      - michaelfeil
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.11044929921627045
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/644fac0ce1d7a97f3b653ab1/fottSAPFrJdKeMW2UJv_l.jpeg?w=200&h=200&f=face
          fullname: Michael
          isHf: false
          isPro: false
          name: michaelfeil
          type: user
        html: ''
        raw: ''
        updatedAt: '2023-06-17T16:18:40.368Z'
      numEdits: 0
      reactions: []
    id: 648ddce09c60b233dafa040e
    type: comment
  author: michaelfeil
  content: ''
  created_at: 2023-06-17 15:18:40+00:00
  edited: false
  hidden: false
  id: 648ddce09c60b233dafa040e
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    createdAt: '2023-06-17T16:39:05.000Z'
    data:
      oid: 724bada59cdfb103b9e26342d8ca661fb103b07c
      parents:
      - 2d870d81adcac7881d7ff9b3461b913a59f3e999
      subject: add sbert config
    id: 648de1a90000000000000000
    type: commit
  author: deleted
  created_at: 2023-06-17 15:39:05+00:00
  id: 648de1a90000000000000000
  oid: 724bada59cdfb103b9e26342d8ca661fb103b07c
  summary: add sbert config
  type: commit
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/644fac0ce1d7a97f3b653ab1/fottSAPFrJdKeMW2UJv_l.jpeg?w=200&h=200&f=face
      fullname: Michael
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: michaelfeil
      type: user
    createdAt: '2023-06-17T16:43:53.000Z'
    data:
      edited: false
      editors:
      - michaelfeil
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7217622995376587
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/644fac0ce1d7a97f3b653ab1/fottSAPFrJdKeMW2UJv_l.jpeg?w=200&h=200&f=face
          fullname: Michael
          isHf: false
          isPro: false
          name: michaelfeil
          type: user
        html: "<p>This makes the model compatible with sentence_transformers by telling\
          \ the package to perform \"pooling_mode_mean_tokens\" after the model, and\
          \ optional normalize<br>Example:<br><a href=\"https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/tree/main\"\
          >https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/tree/main</a></p>\n\
          <p>tested via</p>\n<pre><code class=\"language-python\"><span class=\"hljs-keyword\"\
          >import</span> torch.nn.functional <span class=\"hljs-keyword\">as</span>\
          \ F\n\n<span class=\"hljs-keyword\">from</span> torch <span class=\"hljs-keyword\"\
          >import</span> Tensor\n<span class=\"hljs-keyword\">from</span> transformers\
          \ <span class=\"hljs-keyword\">import</span> AutoTokenizer, AutoModel\n\
          <span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\"\
          >as</span> np\n\n<span class=\"hljs-keyword\">def</span> <span class=\"\
          hljs-title function_\">average_pool</span>(<span class=\"hljs-params\">last_hidden_states:\
          \ Tensor,</span>\n<span class=\"hljs-params\">                 attention_mask:\
          \ Tensor</span>) -&gt; Tensor:\n    last_hidden = last_hidden_states.masked_fill(~attention_mask[...,\
          \ <span class=\"hljs-literal\">None</span>].<span class=\"hljs-built_in\"\
          >bool</span>(), <span class=\"hljs-number\">0.0</span>)\n    <span class=\"\
          hljs-keyword\">return</span> last_hidden.<span class=\"hljs-built_in\">sum</span>(dim=<span\
          \ class=\"hljs-number\">1</span>) / attention_mask.<span class=\"hljs-built_in\"\
          >sum</span>(dim=<span class=\"hljs-number\">1</span>)[..., <span class=\"\
          hljs-literal\">None</span>]\n\n\n<span class=\"hljs-comment\"># Each input\
          \ text should start with \"query: \" or \"passage: \".</span>\n<span class=\"\
          hljs-comment\"># For tasks other than retrieval, you can simply use the\
          \ \"query: \" prefix.</span>\ninput_texts = [<span class=\"hljs-string\"\
          >'query: how much protein should a female eat'</span>,\n               <span\
          \ class=\"hljs-string\">'query: summit define'</span>,\n               <span\
          \ class=\"hljs-string\">\"passage: As a general guideline, the CDC's average\
          \ requirement of protein for women ages 19 to 70 is 46 grams per day. But,\
          \ as you can see from this chart, you'll need to increase that if you're\
          \ expecting or training for a marathon. Check out the chart below to see\
          \ how much protein you should be eating each day.\"</span>,\n          \
          \     <span class=\"hljs-string\">\"passage: Definition of summit for English\
          \ Language Learners. : 1  the highest point of a mountain : the top of a\
          \ mountain. : 2  the highest level. : 3  a meeting or series of meetings\
          \ between the leaders of two or more governments.\"</span>]\n\ntokenizer\
          \ = AutoTokenizer.from_pretrained(<span class=\"hljs-string\">'intfloat/e5-small'</span>)\n\
          model = AutoModel.from_pretrained(<span class=\"hljs-string\">'intfloat/e5-small'</span>)\n\
          \n<span class=\"hljs-comment\"># Tokenize the input texts</span>\nbatch_dict\
          \ = tokenizer(input_texts, max_length=<span class=\"hljs-number\">512</span>,\
          \ padding=<span class=\"hljs-literal\">True</span>, truncation=<span class=\"\
          hljs-literal\">True</span>, return_tensors=<span class=\"hljs-string\">'pt'</span>)\n\
          \noutputs = model(**batch_dict)\nembeddings = average_pool(outputs.last_hidden_state,\
          \ batch_dict[<span class=\"hljs-string\">'attention_mask'</span>])\n\n<span\
          \ class=\"hljs-comment\"># (Optionally) normalize embeddings</span>\nembeddings_norm\
          \ = F.normalize(embeddings, p=<span class=\"hljs-number\">2</span>, dim=<span\
          \ class=\"hljs-number\">1</span>)\nscores = (embeddings_norm[:<span class=\"\
          hljs-number\">2</span>] @ embeddings_norm[<span class=\"hljs-number\">2</span>:].T)\
          \ * <span class=\"hljs-number\">100</span>\n\nembeddings_norm = embeddings_norm.detach().numpy()\n\
          \n<span class=\"hljs-keyword\">from</span> sentence_transformers <span class=\"\
          hljs-keyword\">import</span> SentenceTransformer\nmodel = SentenceTransformer(<span\
          \ class=\"hljs-string\">'./e5-small'</span>)\nembeddings_norm2 = model.encode(input_texts,\
          \ normalize_embeddings=<span class=\"hljs-literal\">True</span>)\n\nnp.testing.assert_allclose(embeddings_norm,\
          \ embeddings_norm2, atol=<span class=\"hljs-number\">1e-7</span>)\n</code></pre>\n"
        raw: "This makes the model compatible with sentence_transformers by telling\
          \ the package to perform \"pooling_mode_mean_tokens\" after the model, and\
          \ optional normalize\nExample:\nhttps://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/tree/main\n\
          \ntested via\n```python\nimport torch.nn.functional as F\n\nfrom torch import\
          \ Tensor\nfrom transformers import AutoTokenizer, AutoModel\nimport numpy\
          \ as np\n\ndef average_pool(last_hidden_states: Tensor,\n              \
          \   attention_mask: Tensor) -> Tensor:\n    last_hidden = last_hidden_states.masked_fill(~attention_mask[...,\
          \ None].bool(), 0.0)\n    return last_hidden.sum(dim=1) / attention_mask.sum(dim=1)[...,\
          \ None]\n\n\n# Each input text should start with \"query: \" or \"passage:\
          \ \".\n# For tasks other than retrieval, you can simply use the \"query:\
          \ \" prefix.\ninput_texts = ['query: how much protein should a female eat',\n\
          \               'query: summit define',\n               \"passage: As a\
          \ general guideline, the CDC's average requirement of protein for women\
          \ ages 19 to 70 is 46 grams per day. But, as you can see from this chart,\
          \ you'll need to increase that if you're expecting or training for a marathon.\
          \ Check out the chart below to see how much protein you should be eating\
          \ each day.\",\n               \"passage: Definition of summit for English\
          \ Language Learners. : 1  the highest point of a mountain : the top of a\
          \ mountain. : 2  the highest level. : 3  a meeting or series of meetings\
          \ between the leaders of two or more governments.\"]\n\ntokenizer = AutoTokenizer.from_pretrained('intfloat/e5-small')\n\
          model = AutoModel.from_pretrained('intfloat/e5-small')\n\n# Tokenize the\
          \ input texts\nbatch_dict = tokenizer(input_texts, max_length=512, padding=True,\
          \ truncation=True, return_tensors='pt')\n\noutputs = model(**batch_dict)\n\
          embeddings = average_pool(outputs.last_hidden_state, batch_dict['attention_mask'])\n\
          \n# (Optionally) normalize embeddings\nembeddings_norm = F.normalize(embeddings,\
          \ p=2, dim=1)\nscores = (embeddings_norm[:2] @ embeddings_norm[2:].T) *\
          \ 100\n\nembeddings_norm = embeddings_norm.detach().numpy()\n\nfrom sentence_transformers\
          \ import SentenceTransformer\nmodel = SentenceTransformer('./e5-small')\n\
          embeddings_norm2 = model.encode(input_texts, normalize_embeddings=True)\n\
          \nnp.testing.assert_allclose(embeddings_norm, embeddings_norm2, atol=1e-7)\n\
          \n```"
        updatedAt: '2023-06-17T16:43:53.154Z'
      numEdits: 0
      reactions: []
      relatedEventId: 648de2c959c4e5c87dae10e8
    id: 648de2c959c4e5c87dae10e6
    type: comment
  author: michaelfeil
  content: "This makes the model compatible with sentence_transformers by telling\
    \ the package to perform \"pooling_mode_mean_tokens\" after the model, and optional\
    \ normalize\nExample:\nhttps://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/tree/main\n\
    \ntested via\n```python\nimport torch.nn.functional as F\n\nfrom torch import\
    \ Tensor\nfrom transformers import AutoTokenizer, AutoModel\nimport numpy as np\n\
    \ndef average_pool(last_hidden_states: Tensor,\n                 attention_mask:\
    \ Tensor) -> Tensor:\n    last_hidden = last_hidden_states.masked_fill(~attention_mask[...,\
    \ None].bool(), 0.0)\n    return last_hidden.sum(dim=1) / attention_mask.sum(dim=1)[...,\
    \ None]\n\n\n# Each input text should start with \"query: \" or \"passage: \"\
    .\n# For tasks other than retrieval, you can simply use the \"query: \" prefix.\n\
    input_texts = ['query: how much protein should a female eat',\n              \
    \ 'query: summit define',\n               \"passage: As a general guideline, the\
    \ CDC's average requirement of protein for women ages 19 to 70 is 46 grams per\
    \ day. But, as you can see from this chart, you'll need to increase that if you're\
    \ expecting or training for a marathon. Check out the chart below to see how much\
    \ protein you should be eating each day.\",\n               \"passage: Definition\
    \ of summit for English Language Learners. : 1  the highest point of a mountain\
    \ : the top of a mountain. : 2  the highest level. : 3  a meeting or series of\
    \ meetings between the leaders of two or more governments.\"]\n\ntokenizer = AutoTokenizer.from_pretrained('intfloat/e5-small')\n\
    model = AutoModel.from_pretrained('intfloat/e5-small')\n\n# Tokenize the input\
    \ texts\nbatch_dict = tokenizer(input_texts, max_length=512, padding=True, truncation=True,\
    \ return_tensors='pt')\n\noutputs = model(**batch_dict)\nembeddings = average_pool(outputs.last_hidden_state,\
    \ batch_dict['attention_mask'])\n\n# (Optionally) normalize embeddings\nembeddings_norm\
    \ = F.normalize(embeddings, p=2, dim=1)\nscores = (embeddings_norm[:2] @ embeddings_norm[2:].T)\
    \ * 100\n\nembeddings_norm = embeddings_norm.detach().numpy()\n\nfrom sentence_transformers\
    \ import SentenceTransformer\nmodel = SentenceTransformer('./e5-small')\nembeddings_norm2\
    \ = model.encode(input_texts, normalize_embeddings=True)\n\nnp.testing.assert_allclose(embeddings_norm,\
    \ embeddings_norm2, atol=1e-7)\n\n```"
  created_at: 2023-06-17 15:43:53+00:00
  edited: false
  hidden: false
  id: 648de2c959c4e5c87dae10e6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/644fac0ce1d7a97f3b653ab1/fottSAPFrJdKeMW2UJv_l.jpeg?w=200&h=200&f=face
      fullname: Michael
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: michaelfeil
      type: user
    createdAt: '2023-06-17T16:43:53.000Z'
    data:
      status: open
    id: 648de2c959c4e5c87dae10e8
    type: status-change
  author: michaelfeil
  created_at: 2023-06-17 15:43:53+00:00
  id: 648de2c959c4e5c87dae10e8
  new_status: open
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/5a1ee74c2dbe349a6ec9843a1599d281.svg
      fullname: Liang Wang
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: intfloat
      type: user
    createdAt: '2023-06-18T02:07:32.000Z'
    data:
      status: merged
    id: 648e66e4b7dab2d0ac568c36
    type: status-change
  author: intfloat
  created_at: 2023-06-18 01:07:32+00:00
  id: 648e66e4b7dab2d0ac568c36
  new_status: merged
  type: status-change
is_pull_request: true
merge_commit_oid: ff451967116643bcc547af0853ca091f825f0419
num: 8
repo_id: intfloat/e5-large
repo_type: model
status: merged
target_branch: refs/heads/main
title: sentence transformers compatability
