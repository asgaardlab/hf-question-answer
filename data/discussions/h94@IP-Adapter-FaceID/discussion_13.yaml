!!python/object:huggingface_hub.community.DiscussionWithDetails
author: jndietz
conflicting_files: null
created_at: 2023-12-31 14:09:07+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/208da47bfd3655ff5a2321479224ab17.svg
      fullname: Jared
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: jndietz
      type: user
    createdAt: '2023-12-31T14:09:07.000Z'
    data:
      edited: true
      editors:
      - jndietz
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8157910704612732
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/208da47bfd3655ff5a2321479224ab17.svg
          fullname: Jared
          isHf: false
          isPro: false
          name: jndietz
          type: user
        html: "<p>I tried to load this into the AUTOMATIC1111 web ui via the ControlNet\
          \ extension, but got some errors.  Can this be used like other IP Adapter\
          \ models or can it only be used in code (per the README.md)?</p>\n<pre><code>2023-12-31\
          \ 08:07:03,631 - ControlNet - INFO - Loaded state_dict from [E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\models\\ip-adapter-faceid-plusv2_sd15.bin]\n\
          *** Error running process: E:\\github\\stable-diffusion-webui\\extensions\\\
          sd-webui-controlnet\\scripts\\controlnet.py\n    Traceback (most recent\
          \ call last):\n      File \"E:\\github\\stable-diffusion-webui\\modules\\\
          scripts.py\", line 718, in process\n        script.process(p, *script_args)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 1053, in process\n        self.controlnet_hack(p)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 1042, in controlnet_hack\n        self.controlnet_main_entry(p)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 758, in controlnet_main_entry\n        model_net\
          \ = Script.load_control_model(p, unet, unit.model)\n      File \"E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\controlnet.py\"\
          , line 364, in load_control_model\n        model_net = Script.build_control_model(p,\
          \ unet, model)\n      File \"E:\\github\\stable-diffusion-webui\\extensions\\\
          sd-webui-controlnet\\scripts\\controlnet.py\", line 393, in build_control_model\n\
          \        network = build_model_by_guess(state_dict, unet, model_path)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet_model_guess.py\", line 244, in build_model_by_guess\n\
          \        network = PlugableIPAdapter(state_dict)\n      File \"E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\controlmodel_ipadapter.py\"\
          , line 334, in __init__\n        self.ipadapter = IPAdapterModel(state_dict,\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlmodel_ipadapter.py\", line 212, in __init__\n        self.load_ip_adapter(state_dict)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlmodel_ipadapter.py\", line 215, in load_ip_adapter\n   \
          \     self.image_proj_model.load_state_dict(state_dict[\"image_proj\"])\n\
          \      File \"E:\\github\\stable-diffusion-webui\\venv\\lib\\site-packages\\\
          torch\\nn\\modules\\module.py\", line 2041, in load_state_dict\n       \
          \ raise RuntimeError('Error(s) in loading state_dict for {}:\\n\\t{}'.format(\n\
          \    RuntimeError: Error(s) in loading state_dict for MLPProjModel:\n  \
          \      Missing key(s) in state_dict: \"proj.3.weight\", \"proj.3.bias\"\
          .\n        Unexpected key(s) in state_dict: \"norm.weight\", \"norm.bias\"\
          , \"perceiver_resampler.proj_in.weight\", \"perceiver_resampler.proj_in.bias\"\
          , \"perceiver_resampler.proj_out.weight\", \"perceiver_resampler.proj_out.bias\"\
          , \"perceiver_resampler.norm_out.weight\", \"perceiver_resampler.norm_out.bias\"\
          , \"perceiver_resampler.layers.0.0.norm1.weight\", \"perceiver_resampler.layers.0.0.norm1.bias\"\
          , \"perceiver_resampler.layers.0.0.norm2.weight\", \"perceiver_resampler.layers.0.0.norm2.bias\"\
          , \"perceiver_resampler.layers.0.0.to_q.weight\", \"perceiver_resampler.layers.0.0.to_kv.weight\"\
          , \"perceiver_resampler.layers.0.0.to_out.weight\", \"perceiver_resampler.layers.0.1.0.weight\"\
          , \"perceiver_resampler.layers.0.1.0.bias\", \"perceiver_resampler.layers.0.1.1.weight\"\
          , \"perceiver_resampler.layers.0.1.3.weight\", \"perceiver_resampler.layers.1.0.norm1.weight\"\
          , \"perceiver_resampler.layers.1.0.norm1.bias\", \"perceiver_resampler.layers.1.0.norm2.weight\"\
          , \"perceiver_resampler.layers.1.0.norm2.bias\", \"perceiver_resampler.layers.1.0.to_q.weight\"\
          , \"perceiver_resampler.layers.1.0.to_kv.weight\", \"perceiver_resampler.layers.1.0.to_out.weight\"\
          , \"perceiver_resampler.layers.1.1.0.weight\", \"perceiver_resampler.layers.1.1.0.bias\"\
          , \"perceiver_resampler.layers.1.1.1.weight\", \"perceiver_resampler.layers.1.1.3.weight\"\
          , \"perceiver_resampler.layers.2.0.norm1.weight\", \"perceiver_resampler.layers.2.0.norm1.bias\"\
          , \"perceiver_resampler.layers.2.0.norm2.weight\", \"perceiver_resampler.layers.2.0.norm2.bias\"\
          , \"perceiver_resampler.layers.2.0.to_q.weight\", \"perceiver_resampler.layers.2.0.to_kv.weight\"\
          , \"perceiver_resampler.layers.2.0.to_out.weight\", \"perceiver_resampler.layers.2.1.0.weight\"\
          , \"perceiver_resampler.layers.2.1.0.bias\", \"perceiver_resampler.layers.2.1.1.weight\"\
          , \"perceiver_resampler.layers.2.1.3.weight\", \"perceiver_resampler.layers.3.0.norm1.weight\"\
          , \"perceiver_resampler.layers.3.0.norm1.bias\", \"perceiver_resampler.layers.3.0.norm2.weight\"\
          , \"perceiver_resampler.layers.3.0.norm2.bias\", \"perceiver_resampler.layers.3.0.to_q.weight\"\
          , \"perceiver_resampler.layers.3.0.to_kv.weight\", \"perceiver_resampler.layers.3.0.to_out.weight\"\
          , \"perceiver_resampler.layers.3.1.0.weight\", \"perceiver_resampler.layers.3.1.0.bias\"\
          , \"perceiver_resampler.layers.3.1.1.weight\", \"perceiver_resampler.layers.3.1.3.weight\"\
          .\n        size mismatch for proj.0.weight: copying a param with shape torch.Size([1024,\
          \ 512]) from checkpoint, the shape in current model is torch.Size([512,\
          \ 512]).\n        size mismatch for proj.0.bias: copying a param with shape\
          \ torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([512]).\n\
          \        size mismatch for proj.2.weight: copying a param with shape torch.Size([3072,\
          \ 1024]) from checkpoint, the shape in current model is torch.Size([768,\
          \ 512]).\n        size mismatch for proj.2.bias: copying a param with shape\
          \ torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([768]).\n\
          </code></pre>\n"
        raw: "I tried to load this into the AUTOMATIC1111 web ui via the ControlNet\
          \ extension, but got some errors.  Can this be used like other IP Adapter\
          \ models or can it only be used in code (per the README.md)?\n\n```\n2023-12-31\
          \ 08:07:03,631 - ControlNet - INFO - Loaded state_dict from [E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\models\\ip-adapter-faceid-plusv2_sd15.bin]\n\
          *** Error running process: E:\\github\\stable-diffusion-webui\\extensions\\\
          sd-webui-controlnet\\scripts\\controlnet.py\n    Traceback (most recent\
          \ call last):\n      File \"E:\\github\\stable-diffusion-webui\\modules\\\
          scripts.py\", line 718, in process\n        script.process(p, *script_args)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 1053, in process\n        self.controlnet_hack(p)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 1042, in controlnet_hack\n        self.controlnet_main_entry(p)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet.py\", line 758, in controlnet_main_entry\n        model_net\
          \ = Script.load_control_model(p, unet, unit.model)\n      File \"E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\controlnet.py\"\
          , line 364, in load_control_model\n        model_net = Script.build_control_model(p,\
          \ unet, model)\n      File \"E:\\github\\stable-diffusion-webui\\extensions\\\
          sd-webui-controlnet\\scripts\\controlnet.py\", line 393, in build_control_model\n\
          \        network = build_model_by_guess(state_dict, unet, model_path)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlnet_model_guess.py\", line 244, in build_model_by_guess\n\
          \        network = PlugableIPAdapter(state_dict)\n      File \"E:\\github\\\
          stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\controlmodel_ipadapter.py\"\
          , line 334, in __init__\n        self.ipadapter = IPAdapterModel(state_dict,\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlmodel_ipadapter.py\", line 212, in __init__\n        self.load_ip_adapter(state_dict)\n\
          \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
          scripts\\controlmodel_ipadapter.py\", line 215, in load_ip_adapter\n   \
          \     self.image_proj_model.load_state_dict(state_dict[\"image_proj\"])\n\
          \      File \"E:\\github\\stable-diffusion-webui\\venv\\lib\\site-packages\\\
          torch\\nn\\modules\\module.py\", line 2041, in load_state_dict\n       \
          \ raise RuntimeError('Error(s) in loading state_dict for {}:\\n\\t{}'.format(\n\
          \    RuntimeError: Error(s) in loading state_dict for MLPProjModel:\n  \
          \      Missing key(s) in state_dict: \"proj.3.weight\", \"proj.3.bias\"\
          .\n        Unexpected key(s) in state_dict: \"norm.weight\", \"norm.bias\"\
          , \"perceiver_resampler.proj_in.weight\", \"perceiver_resampler.proj_in.bias\"\
          , \"perceiver_resampler.proj_out.weight\", \"perceiver_resampler.proj_out.bias\"\
          , \"perceiver_resampler.norm_out.weight\", \"perceiver_resampler.norm_out.bias\"\
          , \"perceiver_resampler.layers.0.0.norm1.weight\", \"perceiver_resampler.layers.0.0.norm1.bias\"\
          , \"perceiver_resampler.layers.0.0.norm2.weight\", \"perceiver_resampler.layers.0.0.norm2.bias\"\
          , \"perceiver_resampler.layers.0.0.to_q.weight\", \"perceiver_resampler.layers.0.0.to_kv.weight\"\
          , \"perceiver_resampler.layers.0.0.to_out.weight\", \"perceiver_resampler.layers.0.1.0.weight\"\
          , \"perceiver_resampler.layers.0.1.0.bias\", \"perceiver_resampler.layers.0.1.1.weight\"\
          , \"perceiver_resampler.layers.0.1.3.weight\", \"perceiver_resampler.layers.1.0.norm1.weight\"\
          , \"perceiver_resampler.layers.1.0.norm1.bias\", \"perceiver_resampler.layers.1.0.norm2.weight\"\
          , \"perceiver_resampler.layers.1.0.norm2.bias\", \"perceiver_resampler.layers.1.0.to_q.weight\"\
          , \"perceiver_resampler.layers.1.0.to_kv.weight\", \"perceiver_resampler.layers.1.0.to_out.weight\"\
          , \"perceiver_resampler.layers.1.1.0.weight\", \"perceiver_resampler.layers.1.1.0.bias\"\
          , \"perceiver_resampler.layers.1.1.1.weight\", \"perceiver_resampler.layers.1.1.3.weight\"\
          , \"perceiver_resampler.layers.2.0.norm1.weight\", \"perceiver_resampler.layers.2.0.norm1.bias\"\
          , \"perceiver_resampler.layers.2.0.norm2.weight\", \"perceiver_resampler.layers.2.0.norm2.bias\"\
          , \"perceiver_resampler.layers.2.0.to_q.weight\", \"perceiver_resampler.layers.2.0.to_kv.weight\"\
          , \"perceiver_resampler.layers.2.0.to_out.weight\", \"perceiver_resampler.layers.2.1.0.weight\"\
          , \"perceiver_resampler.layers.2.1.0.bias\", \"perceiver_resampler.layers.2.1.1.weight\"\
          , \"perceiver_resampler.layers.2.1.3.weight\", \"perceiver_resampler.layers.3.0.norm1.weight\"\
          , \"perceiver_resampler.layers.3.0.norm1.bias\", \"perceiver_resampler.layers.3.0.norm2.weight\"\
          , \"perceiver_resampler.layers.3.0.norm2.bias\", \"perceiver_resampler.layers.3.0.to_q.weight\"\
          , \"perceiver_resampler.layers.3.0.to_kv.weight\", \"perceiver_resampler.layers.3.0.to_out.weight\"\
          , \"perceiver_resampler.layers.3.1.0.weight\", \"perceiver_resampler.layers.3.1.0.bias\"\
          , \"perceiver_resampler.layers.3.1.1.weight\", \"perceiver_resampler.layers.3.1.3.weight\"\
          .\n        size mismatch for proj.0.weight: copying a param with shape torch.Size([1024,\
          \ 512]) from checkpoint, the shape in current model is torch.Size([512,\
          \ 512]).\n        size mismatch for proj.0.bias: copying a param with shape\
          \ torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([512]).\n\
          \        size mismatch for proj.2.weight: copying a param with shape torch.Size([3072,\
          \ 1024]) from checkpoint, the shape in current model is torch.Size([768,\
          \ 512]).\n        size mismatch for proj.2.bias: copying a param with shape\
          \ torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([768]).\n\
          ```"
        updatedAt: '2023-12-31T14:09:35.337Z'
      numEdits: 1
      reactions: []
    id: 659176035b7553ca5c9f9ccb
    type: comment
  author: jndietz
  content: "I tried to load this into the AUTOMATIC1111 web ui via the ControlNet\
    \ extension, but got some errors.  Can this be used like other IP Adapter models\
    \ or can it only be used in code (per the README.md)?\n\n```\n2023-12-31 08:07:03,631\
    \ - ControlNet - INFO - Loaded state_dict from [E:\\github\\stable-diffusion-webui\\\
    extensions\\sd-webui-controlnet\\models\\ip-adapter-faceid-plusv2_sd15.bin]\n\
    *** Error running process: E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
    scripts\\controlnet.py\n    Traceback (most recent call last):\n      File \"\
    E:\\github\\stable-diffusion-webui\\modules\\scripts.py\", line 718, in process\n\
    \        script.process(p, *script_args)\n      File \"E:\\github\\stable-diffusion-webui\\\
    extensions\\sd-webui-controlnet\\scripts\\controlnet.py\", line 1053, in process\n\
    \        self.controlnet_hack(p)\n      File \"E:\\github\\stable-diffusion-webui\\\
    extensions\\sd-webui-controlnet\\scripts\\controlnet.py\", line 1042, in controlnet_hack\n\
    \        self.controlnet_main_entry(p)\n      File \"E:\\github\\stable-diffusion-webui\\\
    extensions\\sd-webui-controlnet\\scripts\\controlnet.py\", line 758, in controlnet_main_entry\n\
    \        model_net = Script.load_control_model(p, unet, unit.model)\n      File\
    \ \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\\
    controlnet.py\", line 364, in load_control_model\n        model_net = Script.build_control_model(p,\
    \ unet, model)\n      File \"E:\\github\\stable-diffusion-webui\\extensions\\\
    sd-webui-controlnet\\scripts\\controlnet.py\", line 393, in build_control_model\n\
    \        network = build_model_by_guess(state_dict, unet, model_path)\n      File\
    \ \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\\
    controlnet_model_guess.py\", line 244, in build_model_by_guess\n        network\
    \ = PlugableIPAdapter(state_dict)\n      File \"E:\\github\\stable-diffusion-webui\\\
    extensions\\sd-webui-controlnet\\scripts\\controlmodel_ipadapter.py\", line 334,\
    \ in __init__\n        self.ipadapter = IPAdapterModel(state_dict,\n      File\
    \ \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\scripts\\\
    controlmodel_ipadapter.py\", line 212, in __init__\n        self.load_ip_adapter(state_dict)\n\
    \      File \"E:\\github\\stable-diffusion-webui\\extensions\\sd-webui-controlnet\\\
    scripts\\controlmodel_ipadapter.py\", line 215, in load_ip_adapter\n        self.image_proj_model.load_state_dict(state_dict[\"\
    image_proj\"])\n      File \"E:\\github\\stable-diffusion-webui\\venv\\lib\\site-packages\\\
    torch\\nn\\modules\\module.py\", line 2041, in load_state_dict\n        raise\
    \ RuntimeError('Error(s) in loading state_dict for {}:\\n\\t{}'.format(\n    RuntimeError:\
    \ Error(s) in loading state_dict for MLPProjModel:\n        Missing key(s) in\
    \ state_dict: \"proj.3.weight\", \"proj.3.bias\".\n        Unexpected key(s) in\
    \ state_dict: \"norm.weight\", \"norm.bias\", \"perceiver_resampler.proj_in.weight\"\
    , \"perceiver_resampler.proj_in.bias\", \"perceiver_resampler.proj_out.weight\"\
    , \"perceiver_resampler.proj_out.bias\", \"perceiver_resampler.norm_out.weight\"\
    , \"perceiver_resampler.norm_out.bias\", \"perceiver_resampler.layers.0.0.norm1.weight\"\
    , \"perceiver_resampler.layers.0.0.norm1.bias\", \"perceiver_resampler.layers.0.0.norm2.weight\"\
    , \"perceiver_resampler.layers.0.0.norm2.bias\", \"perceiver_resampler.layers.0.0.to_q.weight\"\
    , \"perceiver_resampler.layers.0.0.to_kv.weight\", \"perceiver_resampler.layers.0.0.to_out.weight\"\
    , \"perceiver_resampler.layers.0.1.0.weight\", \"perceiver_resampler.layers.0.1.0.bias\"\
    , \"perceiver_resampler.layers.0.1.1.weight\", \"perceiver_resampler.layers.0.1.3.weight\"\
    , \"perceiver_resampler.layers.1.0.norm1.weight\", \"perceiver_resampler.layers.1.0.norm1.bias\"\
    , \"perceiver_resampler.layers.1.0.norm2.weight\", \"perceiver_resampler.layers.1.0.norm2.bias\"\
    , \"perceiver_resampler.layers.1.0.to_q.weight\", \"perceiver_resampler.layers.1.0.to_kv.weight\"\
    , \"perceiver_resampler.layers.1.0.to_out.weight\", \"perceiver_resampler.layers.1.1.0.weight\"\
    , \"perceiver_resampler.layers.1.1.0.bias\", \"perceiver_resampler.layers.1.1.1.weight\"\
    , \"perceiver_resampler.layers.1.1.3.weight\", \"perceiver_resampler.layers.2.0.norm1.weight\"\
    , \"perceiver_resampler.layers.2.0.norm1.bias\", \"perceiver_resampler.layers.2.0.norm2.weight\"\
    , \"perceiver_resampler.layers.2.0.norm2.bias\", \"perceiver_resampler.layers.2.0.to_q.weight\"\
    , \"perceiver_resampler.layers.2.0.to_kv.weight\", \"perceiver_resampler.layers.2.0.to_out.weight\"\
    , \"perceiver_resampler.layers.2.1.0.weight\", \"perceiver_resampler.layers.2.1.0.bias\"\
    , \"perceiver_resampler.layers.2.1.1.weight\", \"perceiver_resampler.layers.2.1.3.weight\"\
    , \"perceiver_resampler.layers.3.0.norm1.weight\", \"perceiver_resampler.layers.3.0.norm1.bias\"\
    , \"perceiver_resampler.layers.3.0.norm2.weight\", \"perceiver_resampler.layers.3.0.norm2.bias\"\
    , \"perceiver_resampler.layers.3.0.to_q.weight\", \"perceiver_resampler.layers.3.0.to_kv.weight\"\
    , \"perceiver_resampler.layers.3.0.to_out.weight\", \"perceiver_resampler.layers.3.1.0.weight\"\
    , \"perceiver_resampler.layers.3.1.0.bias\", \"perceiver_resampler.layers.3.1.1.weight\"\
    , \"perceiver_resampler.layers.3.1.3.weight\".\n        size mismatch for proj.0.weight:\
    \ copying a param with shape torch.Size([1024, 512]) from checkpoint, the shape\
    \ in current model is torch.Size([512, 512]).\n        size mismatch for proj.0.bias:\
    \ copying a param with shape torch.Size([1024]) from checkpoint, the shape in\
    \ current model is torch.Size([512]).\n        size mismatch for proj.2.weight:\
    \ copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape\
    \ in current model is torch.Size([768, 512]).\n        size mismatch for proj.2.bias:\
    \ copying a param with shape torch.Size([3072]) from checkpoint, the shape in\
    \ current model is torch.Size([768]).\n```"
  created_at: 2023-12-31 14:09:07+00:00
  edited: true
  hidden: false
  id: 659176035b7553ca5c9f9ccb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6319b24609baf858241f026c/nBucmn2eT498BLq0MNcqo.png?w=200&h=200&f=face
      fullname: xiaohu
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: h94
      type: user
    createdAt: '2024-01-02T02:11:35.000Z'
    data:
      edited: false
      editors:
      - h94
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5980826616287231
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6319b24609baf858241f026c/nBucmn2eT498BLq0MNcqo.png?w=200&h=200&f=face
          fullname: xiaohu
          isHf: false
          isPro: false
          name: h94
          type: user
        html: '<p>comfyui <a rel="nofollow" href="https://github.com/cubiq/ComfyUI_IPAdapter_plus">https://github.com/cubiq/ComfyUI_IPAdapter_plus</a></p>

          '
        raw: comfyui https://github.com/cubiq/ComfyUI_IPAdapter_plus
        updatedAt: '2024-01-02T02:11:35.004Z'
      numEdits: 0
      reactions: []
    id: 659370d7f7291078f9556518
    type: comment
  author: h94
  content: comfyui https://github.com/cubiq/ComfyUI_IPAdapter_plus
  created_at: 2024-01-02 02:11:35+00:00
  edited: false
  hidden: false
  id: 659370d7f7291078f9556518
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 13
repo_id: h94/IP-Adapter-FaceID
repo_type: model
status: open
target_branch: null
title: Is current usage only via code?
