!!python/object:huggingface_hub.community.DiscussionWithDetails
author: pranjal-codefire
conflicting_files: null
created_at: 2023-08-22 12:51:31+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d72900887798d98c79b7f1fc5cc7ec79.svg
      fullname: Pranjal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pranjal-codefire
      type: user
    createdAt: '2023-08-22T13:51:31.000Z'
    data:
      edited: true
      editors:
      - pranjal-codefire
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6906249523162842
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d72900887798d98c79b7f1fc5cc7ec79.svg
          fullname: Pranjal
          isHf: false
          isPro: false
          name: pranjal-codefire
          type: user
        html: '<p>Seems to work for generating a lot of queries, however, fails for
          following and many more similar scenarios </p>

          <p>CREATE TABLE <code>employee</code> (<br>  <code>ID</code> int(10) NOT
          NULL AUTO_INCREMENT,<br>  <code>name</code> varchar(255) DEFAULT '''',<br>  <code>tel1</code>
          varchar(255) DEFAULT NULL,<br>  <code>tel2</code> varchar(255) DEFAULT NULL,<br>  <code>pass</code>
          varchar(255) DEFAULT '''',<br>  <code>company</code> varchar(256) DEFAULT
          NULL,<br>  <code>employee_code</code> int(11) NOT NULL DEFAULT ''0'',<br>  <code>joining_date</code>
          date DEFAULT NULL,<br>  <code>designation</code> varchar(255) DEFAULT NULL,<br>)
          ENGINE=MyISAM AUTO_INCREMENT=211 DEFAULT CHARSET=latin1 </p>

          <p>And ran the following prompt<br>"for mysql database give me the number
          of employees joined in each designation on  monthly basis for last 1 year
          "</p>

          <p>Got the following response</p>

          <p>SELECT employee.designation,<br>       count(employee.id) AS number_of_employees<br>FROM   employee<br>WHERE  employee.joining_date
          &gt;= (CURRENT_DATE - INTERVAL ''1 year'')<br>GROUP BY employee.designation<br>ORDER
          BY number_of_employees DESC;</p>

          <p>Where as ChatGPT gives following, which seems more appropriate for the
          prompt</p>

          <p>SELECT<br>  DATE_FORMAT(joining_date, ''%Y-%m'') AS month_year,<br>  designation,<br>  COUNT(*)
          AS num_joined<br>FROM <code>employee</code><br>WHERE joining_date &gt;=
          DATE_SUB(CURDATE(), INTERVAL 1 YEAR)<br>GROUP BY month_year, designation<br>ORDER
          BY month_year, num_joined DESC;</p>

          <p>gpt-3.5-turbo-0613 gives me</p>

          <p>SELECT MONTH(joining_date) AS month, designation, COUNT(*) AS num_employees<br>FROM
          employee<br>WHERE joining_date &gt;= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)<br>GROUP
          BY MONTH(joining_date), designation</p>

          '
        raw: "Seems to work for generating a lot of queries, however, fails for following\
          \ and many more similar scenarios \n\nCREATE TABLE `employee` (\n  `ID`\
          \ int(10) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) DEFAULT '',\n\
          \  `tel1` varchar(255) DEFAULT NULL,\n  `tel2` varchar(255) DEFAULT NULL,\n\
          \  `pass` varchar(255) DEFAULT '',\n  `company` varchar(256) DEFAULT NULL,\n\
          \  `employee_code` int(11) NOT NULL DEFAULT '0',\n  `joining_date` date\
          \ DEFAULT NULL,\n  `designation` varchar(255) DEFAULT NULL,\n) ENGINE=MyISAM\
          \ AUTO_INCREMENT=211 DEFAULT CHARSET=latin1 \n\nAnd ran the following prompt\n\
          \"for mysql database give me the number of employees joined in each designation\
          \ on  monthly basis for last 1 year \"\n\nGot the following response\n\n\
          SELECT employee.designation,\n       count(employee.id) AS number_of_employees\n\
          FROM   employee\nWHERE  employee.joining_date >= (CURRENT_DATE - INTERVAL\
          \ '1 year')\nGROUP BY employee.designation\nORDER BY number_of_employees\
          \ DESC;\n\nWhere as ChatGPT gives following, which seems more appropriate\
          \ for the prompt\n\nSELECT\n  DATE_FORMAT(joining_date, '%Y-%m') AS month_year,\n\
          \  designation,\n  COUNT(*) AS num_joined\nFROM `employee`\nWHERE joining_date\
          \ >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)\nGROUP BY month_year, designation\n\
          ORDER BY month_year, num_joined DESC;\n\ngpt-3.5-turbo-0613 gives me\n\n\
          SELECT MONTH(joining_date) AS month, designation, COUNT(*) AS num_employees\n\
          FROM employee\nWHERE joining_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)\n\
          GROUP BY MONTH(joining_date), designation"
        updatedAt: '2023-08-22T14:01:05.014Z'
      numEdits: 2
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - rishdotblog
    id: 64e4bd63ebeb049d7a77a496
    type: comment
  author: pranjal-codefire
  content: "Seems to work for generating a lot of queries, however, fails for following\
    \ and many more similar scenarios \n\nCREATE TABLE `employee` (\n  `ID` int(10)\
    \ NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) DEFAULT '',\n  `tel1` varchar(255)\
    \ DEFAULT NULL,\n  `tel2` varchar(255) DEFAULT NULL,\n  `pass` varchar(255) DEFAULT\
    \ '',\n  `company` varchar(256) DEFAULT NULL,\n  `employee_code` int(11) NOT NULL\
    \ DEFAULT '0',\n  `joining_date` date DEFAULT NULL,\n  `designation` varchar(255)\
    \ DEFAULT NULL,\n) ENGINE=MyISAM AUTO_INCREMENT=211 DEFAULT CHARSET=latin1 \n\n\
    And ran the following prompt\n\"for mysql database give me the number of employees\
    \ joined in each designation on  monthly basis for last 1 year \"\n\nGot the following\
    \ response\n\nSELECT employee.designation,\n       count(employee.id) AS number_of_employees\n\
    FROM   employee\nWHERE  employee.joining_date >= (CURRENT_DATE - INTERVAL '1 year')\n\
    GROUP BY employee.designation\nORDER BY number_of_employees DESC;\n\nWhere as\
    \ ChatGPT gives following, which seems more appropriate for the prompt\n\nSELECT\n\
    \  DATE_FORMAT(joining_date, '%Y-%m') AS month_year,\n  designation,\n  COUNT(*)\
    \ AS num_joined\nFROM `employee`\nWHERE joining_date >= DATE_SUB(CURDATE(), INTERVAL\
    \ 1 YEAR)\nGROUP BY month_year, designation\nORDER BY month_year, num_joined DESC;\n\
    \ngpt-3.5-turbo-0613 gives me\n\nSELECT MONTH(joining_date) AS month, designation,\
    \ COUNT(*) AS num_employees\nFROM employee\nWHERE joining_date >= DATE_SUB(CURDATE(),\
    \ INTERVAL 1 YEAR)\nGROUP BY MONTH(joining_date), designation"
  created_at: 2023-08-22 12:51:31+00:00
  edited: true
  hidden: false
  id: 64e4bd63ebeb049d7a77a496
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1629781294865-603bbad3fd770a9997b57cb6.jpeg?w=200&h=200&f=face
      fullname: Rishabh
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: rishdotblog
      type: user
    createdAt: '2023-08-23T08:06:44.000Z'
    data:
      edited: false
      editors:
      - rishdotblog
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9446128010749817
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1629781294865-603bbad3fd770a9997b57cb6.jpeg?w=200&h=200&f=face
          fullname: Rishabh
          isHf: false
          isPro: false
          name: rishdotblog
          type: user
        html: "<p>Thanks for trying out the model, and for the feedback!</p>\n<p>Great\
          \ point \u2013 our model is not instruction fine tuned yet (though we have\
          \ an instruction fine-tuned update coming soon). While the model currently\
          \ works well for generating queries, it often fails for questions that humans\
          \ ask in a vague (to an LLM) way. ChatGPT and gpt-3.5-turbo are both instruction\
          \ fine-tuned, and handle these slightly \"human-language\" questions better</p>\n\
          <p>In this case, asking <code>How employees joined in each month and each\
          \ designation over the last year?</code> does give the correct response.\
          \ We should get to parity or better results with gpt-3.5-turbo for these\
          \ kinds of questions within the next month (mostly by asking a lot of contractors\
          \ for their data labeling preferences).</p>\n<p>Thanks again for trying\
          \ this out \u2013 please keep the feedback coming!</p>\n"
        raw: "Thanks for trying out the model, and for the feedback!\n\nGreat point\
          \ \u2013 our model is not instruction fine tuned yet (though we have an\
          \ instruction fine-tuned update coming soon). While the model currently\
          \ works well for generating queries, it often fails for questions that humans\
          \ ask in a vague (to an LLM) way. ChatGPT and gpt-3.5-turbo are both instruction\
          \ fine-tuned, and handle these slightly \"human-language\" questions better\n\
          \nIn this case, asking `How employees joined in each month and each designation\
          \ over the last year?` does give the correct response. We should get to\
          \ parity or better results with gpt-3.5-turbo for these kinds of questions\
          \ within the next month (mostly by asking a lot of contractors for their\
          \ data labeling preferences).\n\nThanks again for trying this out \u2013\
          \ please keep the feedback coming!"
        updatedAt: '2023-08-23T08:06:44.828Z'
      numEdits: 0
      reactions: []
    id: 64e5be14fe53a047e5f0d253
    type: comment
  author: rishdotblog
  content: "Thanks for trying out the model, and for the feedback!\n\nGreat point\
    \ \u2013 our model is not instruction fine tuned yet (though we have an instruction\
    \ fine-tuned update coming soon). While the model currently works well for generating\
    \ queries, it often fails for questions that humans ask in a vague (to an LLM)\
    \ way. ChatGPT and gpt-3.5-turbo are both instruction fine-tuned, and handle these\
    \ slightly \"human-language\" questions better\n\nIn this case, asking `How employees\
    \ joined in each month and each designation over the last year?` does give the\
    \ correct response. We should get to parity or better results with gpt-3.5-turbo\
    \ for these kinds of questions within the next month (mostly by asking a lot of\
    \ contractors for their data labeling preferences).\n\nThanks again for trying\
    \ this out \u2013 please keep the feedback coming!"
  created_at: 2023-08-23 07:06:44+00:00
  edited: false
  hidden: false
  id: 64e5be14fe53a047e5f0d253
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: defog/sqlcoder
repo_type: model
status: open
target_branch: null
title: Interesting but needs more work?
