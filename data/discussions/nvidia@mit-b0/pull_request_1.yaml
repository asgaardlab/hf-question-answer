!!python/object:huggingface_hub.community.DiscussionWithDetails
author: amyeroberts
conflicting_files: []
created_at: 2022-07-29 10:49:29+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
      fullname: Amy Roberts
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: amyeroberts
      type: user
    createdAt: '2022-07-29T11:49:29.000Z'
    data:
      edited: false
      editors:
      - amyeroberts
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
          fullname: Amy Roberts
          isHf: true
          isPro: false
          name: amyeroberts
          type: user
        html: '<p>Model converted by the <a rel="nofollow" href="https://github.com/huggingface/transformers/blob/main/src/transformers/commands/pt_to_tf.py"><code>transformers</code>''
          <code>pt_to_tf</code> CLI</a>. All converted model outputs and hidden layers
          were validated against its Pytorch counterpart.</p>

          <p>Maximum crossload output difference=3.338e-06; Maximum crossload hidden
          layer difference=3.569e-05;<br>Maximum conversion output difference=3.338e-06;
          Maximum conversion hidden layer difference=3.569e-05;</p>

          '
        raw: 'Model converted by the [`transformers`'' `pt_to_tf` CLI](https://github.com/huggingface/transformers/blob/main/src/transformers/commands/pt_to_tf.py).
          All converted model outputs and hidden layers were validated against its
          Pytorch counterpart.


          Maximum crossload output difference=3.338e-06; Maximum crossload hidden
          layer difference=3.569e-05;

          Maximum conversion output difference=3.338e-06; Maximum conversion hidden
          layer difference=3.569e-05;'
        updatedAt: '2022-07-29T11:49:29.846Z'
      numEdits: 0
      reactions: []
    id: 62e3c9490c2a907c388ec558
    type: comment
  author: amyeroberts
  content: 'Model converted by the [`transformers`'' `pt_to_tf` CLI](https://github.com/huggingface/transformers/blob/main/src/transformers/commands/pt_to_tf.py).
    All converted model outputs and hidden layers were validated against its Pytorch
    counterpart.


    Maximum crossload output difference=3.338e-06; Maximum crossload hidden layer
    difference=3.569e-05;

    Maximum conversion output difference=3.338e-06; Maximum conversion hidden layer
    difference=3.569e-05;'
  created_at: 2022-07-29 10:49:29+00:00
  edited: false
  hidden: false
  id: 62e3c9490c2a907c388ec558
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
      fullname: Amy Roberts
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: amyeroberts
      type: user
    createdAt: '2022-07-29T11:49:30.000Z'
    data:
      oid: f7eab9b647bf18121aab1b823de216fd348651a3
      parents:
      - f13c39228a46f6f160f23f27cbef82160b8c8773
      subject: Add TF weights
    id: 62e3c94a0000000000000000
    type: commit
  author: amyeroberts
  created_at: 2022-07-29 10:49:30+00:00
  id: 62e3c94a0000000000000000
  oid: f7eab9b647bf18121aab1b823de216fd348651a3
  summary: Add TF weights
  type: commit
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
      fullname: Amy Roberts
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: amyeroberts
      type: user
    createdAt: '2022-07-29T13:15:48.000Z'
    data:
      status: merged
    id: 62e3dd846cdc00fd1c32ed22
    type: status-change
  author: amyeroberts
  created_at: 2022-07-29 12:15:48+00:00
  id: 62e3dd846cdc00fd1c32ed22
  new_status: merged
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
      fullname: Mohammed Innat
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: innat
      type: user
    createdAt: '2022-07-30T07:26:57.000Z'
    data:
      edited: false
      editors:
      - innat
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
          fullname: Mohammed Innat
          isHf: false
          isPro: false
          name: innat
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;amyeroberts&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/amyeroberts\"\
          >@<span class=\"underline\">amyeroberts</span></a></span>\n\n\t</span></span>\
          \ </p>\n<p>I've tried with TF weight, but got error. </p>\n<pre><code class=\"\
          language-python\"><span class=\"hljs-keyword\">from</span> transformers\
          \ <span class=\"hljs-keyword\">import</span> SegformerFeatureExtractor,\
          \ SegformerForImageClassification\n<span class=\"hljs-keyword\">from</span>\
          \ PIL <span class=\"hljs-keyword\">import</span> Image\n<span class=\"hljs-keyword\"\
          >import</span> requests\n\nurl = <span class=\"hljs-string\">\"http://images.cocodataset.org/val2017/000000039769.jpg\"\
          </span>\nimage = Image.<span class=\"hljs-built_in\">open</span>(requests.get(url,\
          \ stream=<span class=\"hljs-literal\">True</span>).raw)\n\nfeature_extractor\
          \ = SegformerFeatureExtractor.from_pretrained(<span class=\"hljs-string\"\
          >\"nvidia/mit-b0\"</span>)\nmodel = SegformerForImageClassification.from_pretrained(<span\
          \ class=\"hljs-string\">\"nvidia/mit-b0\"</span>)\n\ninputs = feature_extractor(images=image,\
          \ return_tensors=<span class=\"hljs-string\">\"tf\"</span>)\noutputs = model(**inputs)\n\
          logits = outputs.logits\n<span class=\"hljs-comment\"># model predicts one\
          \ of the 1000 ImageNet classes</span>\npredicted_class_idx = logits.argmax(-<span\
          \ class=\"hljs-number\">1</span>).item()\n<span class=\"hljs-built_in\"\
          >print</span>(<span class=\"hljs-string\">\"Predicted class:\"</span>, model.config.id2label[predicted_class_idx])\n\
          </code></pre>\n<pre><code class=\"language-bash\">\n---------------------------------------------------------------------------\n\
          TypeError                                 Traceback (most recent call last)\n\
          /tmp/ipykernel_33/1248207528.py <span class=\"hljs-keyword\">in</span> &lt;module&gt;\n\
          \     10 \n     11 inputs = feature_extractor(images=image, return_tensors=<span\
          \ class=\"hljs-string\">\"tf\"</span>)\n---&gt; 12 outputs = model(**inputs)\n\
          \     13 logits = outputs.logits\n     14 <span class=\"hljs-comment\">#\
          \ model predicts one of the 1000 ImageNet classe</span>\n\nTypeError: conv2d()\
          \ received an invalid combination of arguments - got (tensorflow.python.framework.ops.EagerTensor,\
          \ Parameter, Parameter, tuple, tuple, tuple, int), but expected one of:\n\
          \ * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, tuple\
          \ of ints padding, tuple of ints dilation, int <span class=\"hljs-built_in\"\
          >groups</span>)\n      didn<span class=\"hljs-string\">'t match because\
          \ some of the arguments have invalid types: (!tensorflow.python.framework.ops.EagerTensor!,\
          \ !Parameter!, !Parameter!, !tuple!, !tuple!, !tuple!, int)</span>\n<span\
          \ class=\"hljs-string\"> * (Tensor input, Tensor weight, Tensor bias, tuple\
          \ of ints stride, str padding, tuple of ints dilation, int groups)</span>\n\
          <span class=\"hljs-string\">      didn'</span>t match because some of the\
          \ arguments have invalid types: (!tensorflow.python.framework.ops.EagerTensor!,\
          \ !Parameter!, !Parameter!, !tuple!, !tuple!, !tuple!, int)\n</code></pre>\n"
        raw: "@amyeroberts \n\nI've tried with TF weight, but got error. \n\n```python\n\
          from transformers import SegformerFeatureExtractor, SegformerForImageClassification\n\
          from PIL import Image\nimport requests\n\nurl = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\
          \nimage = Image.open(requests.get(url, stream=True).raw)\n\nfeature_extractor\
          \ = SegformerFeatureExtractor.from_pretrained(\"nvidia/mit-b0\")\nmodel\
          \ = SegformerForImageClassification.from_pretrained(\"nvidia/mit-b0\")\n\
          \ninputs = feature_extractor(images=image, return_tensors=\"tf\")\noutputs\
          \ = model(**inputs)\nlogits = outputs.logits\n# model predicts one of the\
          \ 1000 ImageNet classes\npredicted_class_idx = logits.argmax(-1).item()\n\
          print(\"Predicted class:\", model.config.id2label[predicted_class_idx])\n\
          ```\n```bash\n\n---------------------------------------------------------------------------\n\
          TypeError                                 Traceback (most recent call last)\n\
          /tmp/ipykernel_33/1248207528.py in <module>\n     10 \n     11 inputs =\
          \ feature_extractor(images=image, return_tensors=\"tf\")\n---> 12 outputs\
          \ = model(**inputs)\n     13 logits = outputs.logits\n     14 # model predicts\
          \ one of the 1000 ImageNet classe\n\nTypeError: conv2d() received an invalid\
          \ combination of arguments - got (tensorflow.python.framework.ops.EagerTensor,\
          \ Parameter, Parameter, tuple, tuple, tuple, int), but expected one of:\n\
          \ * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, tuple\
          \ of ints padding, tuple of ints dilation, int groups)\n      didn't match\
          \ because some of the arguments have invalid types: (!tensorflow.python.framework.ops.EagerTensor!,\
          \ !Parameter!, !Parameter!, !tuple!, !tuple!, !tuple!, int)\n * (Tensor\
          \ input, Tensor weight, Tensor bias, tuple of ints stride, str padding,\
          \ tuple of ints dilation, int groups)\n      didn't match because some of\
          \ the arguments have invalid types: (!tensorflow.python.framework.ops.EagerTensor!,\
          \ !Parameter!, !Parameter!, !tuple!, !tuple!, !tuple!, int)\n```"
        updatedAt: '2022-07-30T07:26:57.947Z'
      numEdits: 0
      reactions: []
    id: 62e4dd41b1735bbb71856c45
    type: comment
  author: innat
  content: "@amyeroberts \n\nI've tried with TF weight, but got error. \n\n```python\n\
    from transformers import SegformerFeatureExtractor, SegformerForImageClassification\n\
    from PIL import Image\nimport requests\n\nurl = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\
    \nimage = Image.open(requests.get(url, stream=True).raw)\n\nfeature_extractor\
    \ = SegformerFeatureExtractor.from_pretrained(\"nvidia/mit-b0\")\nmodel = SegformerForImageClassification.from_pretrained(\"\
    nvidia/mit-b0\")\n\ninputs = feature_extractor(images=image, return_tensors=\"\
    tf\")\noutputs = model(**inputs)\nlogits = outputs.logits\n# model predicts one\
    \ of the 1000 ImageNet classes\npredicted_class_idx = logits.argmax(-1).item()\n\
    print(\"Predicted class:\", model.config.id2label[predicted_class_idx])\n```\n\
    ```bash\n\n---------------------------------------------------------------------------\n\
    TypeError                                 Traceback (most recent call last)\n\
    /tmp/ipykernel_33/1248207528.py in <module>\n     10 \n     11 inputs = feature_extractor(images=image,\
    \ return_tensors=\"tf\")\n---> 12 outputs = model(**inputs)\n     13 logits =\
    \ outputs.logits\n     14 # model predicts one of the 1000 ImageNet classe\n\n\
    TypeError: conv2d() received an invalid combination of arguments - got (tensorflow.python.framework.ops.EagerTensor,\
    \ Parameter, Parameter, tuple, tuple, tuple, int), but expected one of:\n * (Tensor\
    \ input, Tensor weight, Tensor bias, tuple of ints stride, tuple of ints padding,\
    \ tuple of ints dilation, int groups)\n      didn't match because some of the\
    \ arguments have invalid types: (!tensorflow.python.framework.ops.EagerTensor!,\
    \ !Parameter!, !Parameter!, !tuple!, !tuple!, !tuple!, int)\n * (Tensor input,\
    \ Tensor weight, Tensor bias, tuple of ints stride, str padding, tuple of ints\
    \ dilation, int groups)\n      didn't match because some of the arguments have\
    \ invalid types: (!tensorflow.python.framework.ops.EagerTensor!, !Parameter!,\
    \ !Parameter!, !tuple!, !tuple!, !tuple!, int)\n```"
  created_at: 2022-07-30 06:26:57+00:00
  edited: false
  hidden: false
  id: 62e4dd41b1735bbb71856c45
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
      fullname: Mohammed Innat
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: innat
      type: user
    createdAt: '2022-07-30T07:26:58.000Z'
    data:
      edited: true
      editors: []
      hidden: true
      hiddenBy: ''
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
          fullname: Mohammed Innat
          isHf: false
          isPro: false
          name: innat
          type: user
        html: This comment has been hidden
        raw: This comment has been hidden
        updatedAt: '2022-07-30T08:57:35.836Z'
      numEdits: 0
      reactions: []
    id: 62e4dd4292f022676df5e312
    type: comment
  author: innat
  content: This comment has been hidden
  created_at: 2022-07-30 06:26:58+00:00
  edited: true
  hidden: true
  id: 62e4dd4292f022676df5e312
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
      fullname: Amy Roberts
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: amyeroberts
      type: user
    createdAt: '2022-07-30T18:00:57.000Z'
    data:
      edited: true
      editors:
      - amyeroberts
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1650360288463-noauth.jpeg?w=200&h=200&f=face
          fullname: Amy Roberts
          isHf: true
          isPro: false
          name: amyeroberts
          type: user
        html: '<p>This issue is arising because <code>SegformerForImageClassification</code>
          is a PyTorch model and the inputs are tensorflow tensors. To load the TF
          model, you want to import <code>TFSegformerForImageClassification</code>.</p>

          '
        raw: This issue is arising because `SegformerForImageClassification` is a
          PyTorch model and the inputs are tensorflow tensors. To load the TF model,
          you want to import `TFSegformerForImageClassification`.
        updatedAt: '2022-07-30T18:01:06.693Z'
      numEdits: 1
      reactions: []
    id: 62e571d92277e8483be33078
    type: comment
  author: amyeroberts
  content: This issue is arising because `SegformerForImageClassification` is a PyTorch
    model and the inputs are tensorflow tensors. To load the TF model, you want to
    import `TFSegformerForImageClassification`.
  created_at: 2022-07-30 17:00:57+00:00
  edited: true
  hidden: false
  id: 62e571d92277e8483be33078
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
      fullname: Mohammed Innat
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: innat
      type: user
    createdAt: '2022-07-30T21:46:24.000Z'
    data:
      edited: false
      editors:
      - innat
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647169491116-622dcfbee27c88667db09411.jpeg?w=200&h=200&f=face
          fullname: Mohammed Innat
          isHf: false
          isPro: false
          name: innat
          type: user
        html: '<p>uh, got it. Thanks.</p>

          '
        raw: uh, got it. Thanks.
        updatedAt: '2022-07-30T21:46:24.461Z'
      numEdits: 0
      reactions: []
    id: 62e5a6b0ea4ab59619617a9d
    type: comment
  author: innat
  content: uh, got it. Thanks.
  created_at: 2022-07-30 20:46:24+00:00
  edited: false
  hidden: false
  id: 62e5a6b0ea4ab59619617a9d
  type: comment
is_pull_request: true
merge_commit_oid: 698892efdcedeeb02bce6a40d3f4830e469bbff9
num: 1
repo_id: nvidia/mit-b0
repo_type: model
status: merged
target_branch: refs/heads/main
title: Add TF weights
