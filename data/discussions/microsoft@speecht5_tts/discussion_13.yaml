!!python/object:huggingface_hub.community.DiscussionWithDetails
author: mstachow
conflicting_files: null
created_at: 2023-06-20 18:02:43+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ab05f77592cc3da78c2af2e77c409e9d.svg
      fullname: Mike Cooper-Stachowsky
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mstachow
      type: user
    createdAt: '2023-06-20T19:02:43.000Z'
    data:
      edited: false
      editors:
      - mstachow
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7191799283027649
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ab05f77592cc3da78c2af2e77c409e9d.svg
          fullname: Mike Cooper-Stachowsky
          isHf: false
          isPro: false
          name: mstachow
          type: user
        html: '<p>It sounds cool, very "AI going insane" sort of thing, but I must
          be doing something wrong. In the audio below, the TTS module is explaining
          the difference between sheep and goats. Around 10 seconds in, the glitching
          starts. I''m wondering if this has to do with how I''ve set the model up?
          Here is the code I''ve used:</p>

          <pre><code>#setup

          processor = SpeechT5Processor.from_pretrained("microsoft/speecht5_tts",max_new_tokens=256)

          ttsmodel = SpeechT5ForTextToSpeech.from_pretrained("microsoft/speecht5_tts")

          vocoder = SpeechT5HifiGan.from_pretrained("microsoft/speecht5_hifigan")


          # load xvector containing speaker''s voice characteristics from a dataset

          embeddings_dataset = load_dataset("Matthijs/cmu-arctic-xvectors", split="validation")

          speaker_embeddings = torch.tensor(embeddings_dataset[7306]["xvector"]).unsqueeze(0)

          ...

          inputs = processor(text=txt, return_tensors="pt",max_new_tokens=256)

          speech = ttsmodel.generate_speech(inputs["input_ids"], speaker_embeddings,
          vocoder=vocoder)

          ...


          #Process what is in the variable "txt", which has at most 30 characters:


          </code></pre>

          <p><audio src="https://cdn-uploads.huggingface.co/production/uploads/642853844fe87caede8170d4/5SLJcV9gEjR9bA6LgKDvK.wav"
          controls=""></audio></p>

          '
        raw: "It sounds cool, very \"AI going insane\" sort of thing, but I must be\
          \ doing something wrong. In the audio below, the TTS module is explaining\
          \ the difference between sheep and goats. Around 10 seconds in, the glitching\
          \ starts. I'm wondering if this has to do with how I've set the model up?\
          \ Here is the code I've used:\r\n\r\n```\r\n#setup\r\nprocessor = SpeechT5Processor.from_pretrained(\"\
          microsoft/speecht5_tts\",max_new_tokens=256)\r\nttsmodel = SpeechT5ForTextToSpeech.from_pretrained(\"\
          microsoft/speecht5_tts\")\r\nvocoder = SpeechT5HifiGan.from_pretrained(\"\
          microsoft/speecht5_hifigan\")\r\n\r\n# load xvector containing speaker's\
          \ voice characteristics from a dataset\r\nembeddings_dataset = load_dataset(\"\
          Matthijs/cmu-arctic-xvectors\", split=\"validation\")\r\nspeaker_embeddings\
          \ = torch.tensor(embeddings_dataset[7306][\"xvector\"]).unsqueeze(0)\r\n\
          ...\r\ninputs = processor(text=txt, return_tensors=\"pt\",max_new_tokens=256)\r\
          \nspeech = ttsmodel.generate_speech(inputs[\"input_ids\"], speaker_embeddings,\
          \ vocoder=vocoder)\r\n...\r\n\r\n#Process what is in the variable \"txt\"\
          , which has at most 30 characters:\r\n\r\n\r\n```\r\n\r\n<audio controls\
          \ src=\"https://cdn-uploads.huggingface.co/production/uploads/642853844fe87caede8170d4/5SLJcV9gEjR9bA6LgKDvK.wav\"\
          ></audio>\r\n"
        updatedAt: '2023-06-20T19:02:43.784Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F92F"
        users:
        - AndreLearning
        - circulartext
      - count: 1
        reaction: "\U0001F614"
        users:
        - AndreLearning
    id: 6491f7d312ea2ff77e23d25e
    type: comment
  author: mstachow
  content: "It sounds cool, very \"AI going insane\" sort of thing, but I must be\
    \ doing something wrong. In the audio below, the TTS module is explaining the\
    \ difference between sheep and goats. Around 10 seconds in, the glitching starts.\
    \ I'm wondering if this has to do with how I've set the model up? Here is the\
    \ code I've used:\r\n\r\n```\r\n#setup\r\nprocessor = SpeechT5Processor.from_pretrained(\"\
    microsoft/speecht5_tts\",max_new_tokens=256)\r\nttsmodel = SpeechT5ForTextToSpeech.from_pretrained(\"\
    microsoft/speecht5_tts\")\r\nvocoder = SpeechT5HifiGan.from_pretrained(\"microsoft/speecht5_hifigan\"\
    )\r\n\r\n# load xvector containing speaker's voice characteristics from a dataset\r\
    \nembeddings_dataset = load_dataset(\"Matthijs/cmu-arctic-xvectors\", split=\"\
    validation\")\r\nspeaker_embeddings = torch.tensor(embeddings_dataset[7306][\"\
    xvector\"]).unsqueeze(0)\r\n...\r\ninputs = processor(text=txt, return_tensors=\"\
    pt\",max_new_tokens=256)\r\nspeech = ttsmodel.generate_speech(inputs[\"input_ids\"\
    ], speaker_embeddings, vocoder=vocoder)\r\n...\r\n\r\n#Process what is in the\
    \ variable \"txt\", which has at most 30 characters:\r\n\r\n\r\n```\r\n\r\n<audio\
    \ controls src=\"https://cdn-uploads.huggingface.co/production/uploads/642853844fe87caede8170d4/5SLJcV9gEjR9bA6LgKDvK.wav\"\
    ></audio>\r\n"
  created_at: 2023-06-20 18:02:43+00:00
  edited: false
  hidden: false
  id: 6491f7d312ea2ff77e23d25e
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/b9f8c887d68e6686cda9cc3c1b9f8945.svg
      fullname: Joseph Henzi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JHenzi
      type: user
    createdAt: '2023-07-19T09:02:22.000Z'
    data:
      edited: false
      editors:
      - JHenzi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9424738883972168
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/b9f8c887d68e6686cda9cc3c1b9f8945.svg
          fullname: Joseph Henzi
          isHf: false
          isPro: false
          name: JHenzi
          type: user
        html: '<p>See the newest/top post on here, I posted some code. I find the
          model trips over itself after too much input and/or runs into tensor errors.
          I am processing a prompt.txt file in chunks and outputting individual files.
          They are, in the end, actually easier to deal with because they are split
          up and anything that needs re-doing is easier. Stitch them together with
          another application, I''m going to use Audacity but you could do this in
          a python script (and convert the wav file to mp3 or another format...).</p>

          '
        raw: See the newest/top post on here, I posted some code. I find the model
          trips over itself after too much input and/or runs into tensor errors. I
          am processing a prompt.txt file in chunks and outputting individual files.
          They are, in the end, actually easier to deal with because they are split
          up and anything that needs re-doing is easier. Stitch them together with
          another application, I'm going to use Audacity but you could do this in
          a python script (and convert the wav file to mp3 or another format...).
        updatedAt: '2023-07-19T09:02:22.431Z'
      numEdits: 0
      reactions: []
    id: 64b7a69ea5018e3c7ca02bd2
    type: comment
  author: JHenzi
  content: See the newest/top post on here, I posted some code. I find the model trips
    over itself after too much input and/or runs into tensor errors. I am processing
    a prompt.txt file in chunks and outputting individual files. They are, in the
    end, actually easier to deal with because they are split up and anything that
    needs re-doing is easier. Stitch them together with another application, I'm going
    to use Audacity but you could do this in a python script (and convert the wav
    file to mp3 or another format...).
  created_at: 2023-07-19 08:02:22+00:00
  edited: false
  hidden: false
  id: 64b7a69ea5018e3c7ca02bd2
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 13
repo_id: microsoft/speecht5_tts
repo_type: model
status: open
target_branch: null
title: 'model sometimes repeats itself and glitches during speech. '
