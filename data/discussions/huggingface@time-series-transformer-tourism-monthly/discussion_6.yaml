!!python/object:huggingface_hub.community.DiscussionWithDetails
author: NXTNiklas
conflicting_files: null
created_at: 2023-02-22 15:24:41+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a3ca37886f51d9b80764940b20989da2.svg
      fullname: Niklas Belo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: NXTNiklas
      type: user
    createdAt: '2023-02-22T15:24:41.000Z'
    data:
      edited: false
      editors:
      - NXTNiklas
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a3ca37886f51d9b80764940b20989da2.svg
          fullname: Niklas Belo
          isHf: false
          isPro: false
          name: NXTNiklas
          type: user
        html: '<p>The documentation currently describes how to use past_values, future_values,
          past_time_features, future_time_features, static_categorical_features and
          static_real_features.</p>

          <p>How I understand it, is that the static features  are constant over the
          timeseries. </p>

          <p>It also mentions the param num_dynamic_real_features - The number of
          dynamic real valued features.<br>However I do not understand how to pass
          the values to the model. </p>

          <p>I''m trying to predict 4 timeseries 30 steps into the future. For each
          step in the input timeseries I''ve got 50 measurements at a higher sampling
          rate, which I''d like to pass to the model to improve the prediction of
          the 4 timeseries. However the model does not need to predict the high sampled
          values </p>

          '
        raw: "The documentation currently describes how to use past_values, future_values,\
          \ past_time_features, future_time_features, static_categorical_features\
          \ and static_real_features.\r\n\r\nHow I understand it, is that the static\
          \ features  are constant over the timeseries. \r\n\r\nIt also mentions the\
          \ param num_dynamic_real_features - The number of dynamic real valued features.\r\
          \nHowever I do not understand how to pass the values to the model. \r\n\r\
          \nI'm trying to predict 4 timeseries 30 steps into the future. For each\
          \ step in the input timeseries I've got 50 measurements at a higher sampling\
          \ rate, which I'd like to pass to the model to improve the prediction of\
          \ the 4 timeseries. However the model does not need to predict the high\
          \ sampled values \r\n\r\n"
        updatedAt: '2023-02-22T15:24:41.790Z'
      numEdits: 0
      reactions: []
    id: 63f633b9b607296857b68da3
    type: comment
  author: NXTNiklas
  content: "The documentation currently describes how to use past_values, future_values,\
    \ past_time_features, future_time_features, static_categorical_features and static_real_features.\r\
    \n\r\nHow I understand it, is that the static features  are constant over the\
    \ timeseries. \r\n\r\nIt also mentions the param num_dynamic_real_features - The\
    \ number of dynamic real valued features.\r\nHowever I do not understand how to\
    \ pass the values to the model. \r\n\r\nI'm trying to predict 4 timeseries 30\
    \ steps into the future. For each step in the input timeseries I've got 50 measurements\
    \ at a higher sampling rate, which I'd like to pass to the model to improve the\
    \ prediction of the 4 timeseries. However the model does not need to predict the\
    \ high sampled values \r\n\r\n"
  created_at: 2023-02-22 15:24:41+00:00
  edited: false
  hidden: false
  id: 63f633b9b607296857b68da3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
      fullname: Christopher LaFrieda
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: clafrieda
      type: user
    createdAt: '2023-02-23T11:07:03.000Z'
    data:
      edited: false
      editors:
      - clafrieda
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
          fullname: Christopher LaFrieda
          isHf: false
          isPro: false
          name: clafrieda
          type: user
        html: '<p>I was wondering the same thing. It seems like dynamic_real_features
          is not currently an input to the model:<br><a rel="nofollow" href="https://github.com/huggingface/transformers/blob/v4.26.1/src/transformers/models/time_series_transformer/modeling_time_series_transformer.py">https://github.com/huggingface/transformers/blob/v4.26.1/src/transformers/models/time_series_transformer/modeling_time_series_transformer.py</a></p>

          <p>Probably have to file an issue for this.</p>

          '
        raw: 'I was wondering the same thing. It seems like dynamic_real_features
          is not currently an input to the model:

          https://github.com/huggingface/transformers/blob/v4.26.1/src/transformers/models/time_series_transformer/modeling_time_series_transformer.py


          Probably have to file an issue for this.'
        updatedAt: '2023-02-23T11:07:03.950Z'
      numEdits: 0
      reactions: []
    id: 63f748d74313d4ea9dc1a059
    type: comment
  author: clafrieda
  content: 'I was wondering the same thing. It seems like dynamic_real_features is
    not currently an input to the model:

    https://github.com/huggingface/transformers/blob/v4.26.1/src/transformers/models/time_series_transformer/modeling_time_series_transformer.py


    Probably have to file an issue for this.'
  created_at: 2023-02-23 11:07:03+00:00
  edited: false
  hidden: false
  id: 63f748d74313d4ea9dc1a059
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1669189789447-629f3b18ee05727ce328ccbe.jpeg?w=200&h=200&f=face
      fullname: Kashif Rasul
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: kashif
      type: user
    createdAt: '2023-02-23T11:42:10.000Z'
    data:
      edited: true
      editors:
      - kashif
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1669189789447-629f3b18ee05727ce328ccbe.jpeg?w=200&h=200&f=face
          fullname: Kashif Rasul
          isHf: true
          isPro: false
          name: kashif
          type: user
        html: "<p>thank you for the question <span data-props=\"{&quot;user&quot;:&quot;NXTNiklas&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/NXTNiklas\"\
          >@<span class=\"underline\">NXTNiklas</span></a></span>\n\n\t</span></span>\
          \ and <span data-props=\"{&quot;user&quot;:&quot;clafrieda&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/clafrieda\">@<span class=\"\
          underline\">clafrieda</span></a></span>\n\n\t</span></span> </p>\n<p>So\
          \ the idea is since any <code>dynamic_real_features</code> are like the\
          \ date-time features, in the sense that they need to be known at inference\
          \ time, you can contact them to your date time feature tensor and pass them\
          \ along that way to the model. </p>\n<p>The reason for having the two configs\
          \ one for the number of date time features and one for the number of dynamic\
          \ real features is mostly for your data preparation functions, where you\
          \ can also choose to not concat any dynamic features you may have, depending\
          \ on the configuration value...</p>\n<p>is that somewhat clear? In the <a\
          \ href=\"https://huggingface.co/blog/time-series-transformers\">blog post</a>\
          \ you can see \"Step 7\" where this concat is being done.</p>\n<p>Also currently\
          \ all the dynamic covariates (i.e the dynamic real one) need to be the same\
          \ size in the time dim as the target values... so if your covariate are\
          \ at a higher sampling rate then you need to resample it with the appropriate\
          \ agg. function to the freq of the target and if your covariate are at a\
          \ lower sampling rate then you need to copy them over for the appropriate\
          \ time stamps of the target.</p>\n"
        raw: "thank you for the question @NXTNiklas and @clafrieda \n\nSo the idea\
          \ is since any `dynamic_real_features` are like the date-time features,\
          \ in the sense that they need to be known at inference time, you can contact\
          \ them to your date time feature tensor and pass them along that way to\
          \ the model. \n\nThe reason for having the two configs one for the number\
          \ of date time features and one for the number of dynamic real features\
          \ is mostly for your data preparation functions, where you can also choose\
          \ to not concat any dynamic features you may have, depending on the configuration\
          \ value...\n\nis that somewhat clear? In the [blog post](https://huggingface.co/blog/time-series-transformers)\
          \ you can see \"Step 7\" where this concat is being done.\n\nAlso currently\
          \ all the dynamic covariates (i.e the dynamic real one) need to be the same\
          \ size in the time dim as the target values... so if your covariate are\
          \ at a higher sampling rate then you need to resample it with the appropriate\
          \ agg. function to the freq of the target and if your covariate are at a\
          \ lower sampling rate then you need to copy them over for the appropriate\
          \ time stamps of the target."
        updatedAt: '2023-02-23T12:16:12.536Z'
      numEdits: 3
      reactions: []
    id: 63f751121cb66f416c6b32b4
    type: comment
  author: kashif
  content: "thank you for the question @NXTNiklas and @clafrieda \n\nSo the idea is\
    \ since any `dynamic_real_features` are like the date-time features, in the sense\
    \ that they need to be known at inference time, you can contact them to your date\
    \ time feature tensor and pass them along that way to the model. \n\nThe reason\
    \ for having the two configs one for the number of date time features and one\
    \ for the number of dynamic real features is mostly for your data preparation\
    \ functions, where you can also choose to not concat any dynamic features you\
    \ may have, depending on the configuration value...\n\nis that somewhat clear?\
    \ In the [blog post](https://huggingface.co/blog/time-series-transformers) you\
    \ can see \"Step 7\" where this concat is being done.\n\nAlso currently all the\
    \ dynamic covariates (i.e the dynamic real one) need to be the same size in the\
    \ time dim as the target values... so if your covariate are at a higher sampling\
    \ rate then you need to resample it with the appropriate agg. function to the\
    \ freq of the target and if your covariate are at a lower sampling rate then you\
    \ need to copy them over for the appropriate time stamps of the target."
  created_at: 2023-02-23 11:42:10+00:00
  edited: true
  hidden: false
  id: 63f751121cb66f416c6b32b4
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
      fullname: Christopher LaFrieda
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: clafrieda
      type: user
    createdAt: '2023-02-23T14:09:20.000Z'
    data:
      edited: false
      editors:
      - clafrieda
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
          fullname: Christopher LaFrieda
          isHf: false
          isPro: false
          name: clafrieda
          type: user
        html: '<p>Thanks for the response Kashif. I see the concatenation. These become
          part of the positional encoding, correct? It seems like that means the decoder
          will see the future values of these features.</p>

          <p>I wonder if it makes sense in some cases to concatenate these features
          with the values. For example, let''s say I want to predict the price of
          apples and I know that the price of apples is somehow related to the past
          price of apples and the past price of tomatoes. I don''t know the future
          price of tomatoes, so I can''t add it as a future_time_feature. However,
          perhaps I can concatenate the tomato prices with the values, and add a time
          feature that is 0=apples and 1=tomatoes (in addition to the date-time).
          Then I can set the lags appropriately such that the tomato prices get attention
          (would have to rework the data loader as well).  Would something like that
          work?</p>

          '
        raw: 'Thanks for the response Kashif. I see the concatenation. These become
          part of the positional encoding, correct? It seems like that means the decoder
          will see the future values of these features.


          I wonder if it makes sense in some cases to concatenate these features with
          the values. For example, let''s say I want to predict the price of apples
          and I know that the price of apples is somehow related to the past price
          of apples and the past price of tomatoes. I don''t know the future price
          of tomatoes, so I can''t add it as a future_time_feature. However, perhaps
          I can concatenate the tomato prices with the values, and add a time feature
          that is 0=apples and 1=tomatoes (in addition to the date-time). Then I can
          set the lags appropriately such that the tomato prices get attention (would
          have to rework the data loader as well).  Would something like that work?'
        updatedAt: '2023-02-23T14:09:20.199Z'
      numEdits: 0
      reactions: []
    id: 63f773904313d4ea9dc44095
    type: comment
  author: clafrieda
  content: 'Thanks for the response Kashif. I see the concatenation. These become
    part of the positional encoding, correct? It seems like that means the decoder
    will see the future values of these features.


    I wonder if it makes sense in some cases to concatenate these features with the
    values. For example, let''s say I want to predict the price of apples and I know
    that the price of apples is somehow related to the past price of apples and the
    past price of tomatoes. I don''t know the future price of tomatoes, so I can''t
    add it as a future_time_feature. However, perhaps I can concatenate the tomato
    prices with the values, and add a time feature that is 0=apples and 1=tomatoes
    (in addition to the date-time). Then I can set the lags appropriately such that
    the tomato prices get attention (would have to rework the data loader as well).  Would
    something like that work?'
  created_at: 2023-02-23 14:09:20+00:00
  edited: false
  hidden: false
  id: 63f773904313d4ea9dc44095
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1669189789447-629f3b18ee05727ce328ccbe.jpeg?w=200&h=200&f=face
      fullname: Kashif Rasul
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: kashif
      type: user
    createdAt: '2023-02-23T14:22:23.000Z'
    data:
      edited: true
      editors:
      - kashif
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1669189789447-629f3b18ee05727ce328ccbe.jpeg?w=200&h=200&f=face
          fullname: Kashif Rasul
          isHf: true
          isPro: false
          name: kashif
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;clafrieda&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/clafrieda\">@<span class=\"\
          underline\">clafrieda</span></a></span>\n\n\t</span></span> that is why\
          \ there is this caveat about the dynamic real-valued features.... they need\
          \ to be known at prediction time. </p>\n<p>Yes in theory the model can look\
          \ at future dynamic features in the decoder, and there is nothing wrong\
          \ with doing that,  but the decoder during training has a causal mask and\
          \ since these features are part of the input to the decoder, the model is\
          \ not looking at future dynamic real covariates during training... I would\
          \ not know how to add a causal mask to only the target part of the input...</p>\n\
          <p>the other thing to note, with these models, is that you are learning\
          \ the future distribution of the target conditioned on the covariates, however\
          \ as in your example if these entities are causally connected to the target\
          \ then you need to model that causal relationship differently. In particular,\
          \ at inference time if you want to then know what the price of apples would\
          \ be, had the price of tomatoes been x, then you really need the machinery\
          \ of causal inference and do the \"do\" business etc. A conditional model\
          \ like this would potentially give the wrong answer.</p>\n<p>Feel free to\
          \ open an issue about the \"causal time series model\" and I can discuss\
          \ it there.</p>\n"
        raw: "@clafrieda that is why there is this caveat about the dynamic real-valued\
          \ features.... they need to be known at prediction time. \n\nYes in theory\
          \ the model can look at future dynamic features in the decoder, and there\
          \ is nothing wrong with doing that,  but the decoder during training has\
          \ a causal mask and since these features are part of the input to the decoder,\
          \ the model is not looking at future dynamic real covariates during training...\
          \ I would not know how to add a causal mask to only the target part of the\
          \ input...\n\nthe other thing to note, with these models, is that you are\
          \ learning the future distribution of the target conditioned on the covariates,\
          \ however as in your example if these entities are causally connected to\
          \ the target then you need to model that causal relationship differently.\
          \ In particular, at inference time if you want to then know what the price\
          \ of apples would be, had the price of tomatoes been x, then you really\
          \ need the machinery of causal inference and do the \"do\" business etc.\
          \ A conditional model like this would potentially give the wrong answer.\n\
          \nFeel free to open an issue about the \"causal time series model\" and\
          \ I can discuss it there."
        updatedAt: '2023-02-23T15:11:04.807Z'
      numEdits: 3
      reactions: []
    id: 63f7769f11ccb733ad229904
    type: comment
  author: kashif
  content: "@clafrieda that is why there is this caveat about the dynamic real-valued\
    \ features.... they need to be known at prediction time. \n\nYes in theory the\
    \ model can look at future dynamic features in the decoder, and there is nothing\
    \ wrong with doing that,  but the decoder during training has a causal mask and\
    \ since these features are part of the input to the decoder, the model is not\
    \ looking at future dynamic real covariates during training... I would not know\
    \ how to add a causal mask to only the target part of the input...\n\nthe other\
    \ thing to note, with these models, is that you are learning the future distribution\
    \ of the target conditioned on the covariates, however as in your example if these\
    \ entities are causally connected to the target then you need to model that causal\
    \ relationship differently. In particular, at inference time if you want to then\
    \ know what the price of apples would be, had the price of tomatoes been x, then\
    \ you really need the machinery of causal inference and do the \"do\" business\
    \ etc. A conditional model like this would potentially give the wrong answer.\n\
    \nFeel free to open an issue about the \"causal time series model\" and I can\
    \ discuss it there."
  created_at: 2023-02-23 14:22:23+00:00
  edited: true
  hidden: false
  id: 63f7769f11ccb733ad229904
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
      fullname: Christopher LaFrieda
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: clafrieda
      type: user
    createdAt: '2023-02-23T15:15:06.000Z'
    data:
      edited: false
      editors:
      - clafrieda
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8785fc00031a9d4bf3cfb439177a6494.svg
          fullname: Christopher LaFrieda
          isHf: false
          isPro: false
          name: clafrieda
          type: user
        html: '<p>Thanks again Kashif. That makes sense.</p>

          '
        raw: Thanks again Kashif. That makes sense.
        updatedAt: '2023-02-23T15:15:06.750Z'
      numEdits: 0
      reactions: []
    id: 63f782fa1cb66f416c6e454f
    type: comment
  author: clafrieda
  content: Thanks again Kashif. That makes sense.
  created_at: 2023-02-23 15:15:06+00:00
  edited: false
  hidden: false
  id: 63f782fa1cb66f416c6e454f
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 6
repo_id: huggingface/time-series-transformer-tourism-monthly
repo_type: model
status: open
target_branch: null
title: Question regarding dynamic and static features
