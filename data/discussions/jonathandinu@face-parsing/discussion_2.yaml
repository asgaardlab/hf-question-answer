!!python/object:huggingface_hub.community.DiscussionWithDetails
author: cenahwang
conflicting_files: null
created_at: 2023-11-17 06:38:35+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671529110349-noauth.jpeg?w=200&h=200&f=face
      fullname: cenahwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: cenahwang
      type: user
    createdAt: '2023-11-17T06:38:35.000Z'
    data:
      edited: false
      editors:
      - cenahwang
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8441075682640076
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1671529110349-noauth.jpeg?w=200&h=200&f=face
          fullname: cenahwang
          isHf: false
          isPro: false
          name: cenahwang
          type: user
        html: '<p>Hi, I''m doubt how to inference this model? thx</p>

          '
        raw: Hi, I'm doubt how to inference this model? thx
        updatedAt: '2023-11-17T06:38:35.527Z'
      numEdits: 0
      reactions: []
    id: 65570a6b8d9e07913d804308
    type: comment
  author: cenahwang
  content: Hi, I'm doubt how to inference this model? thx
  created_at: 2023-11-17 06:38:35+00:00
  edited: false
  hidden: false
  id: 65570a6b8d9e07913d804308
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1620472869382-noauth.png?w=200&h=200&f=face
      fullname: Senem Aktas
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Senem
      type: user
    createdAt: '2023-11-23T16:54:04.000Z'
    data:
      edited: false
      editors:
      - Senem
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9827527403831482
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1620472869382-noauth.png?w=200&h=200&f=face
          fullname: Senem Aktas
          isHf: false
          isPro: false
          name: Senem
          type: user
        html: '<p>Hi, i wonder this too, did you find a solution?</p>

          '
        raw: 'Hi, i wonder this too, did you find a solution?

          '
        updatedAt: '2023-11-23T16:54:04.082Z'
      numEdits: 0
      reactions: []
    id: 655f83ac32537bcc8d8c5148
    type: comment
  author: Senem
  content: 'Hi, i wonder this too, did you find a solution?

    '
  created_at: 2023-11-23 16:54:04+00:00
  edited: false
  hidden: false
  id: 655f83ac32537bcc8d8c5148
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/2888d7f349161ea593c071d4763ab2b2.svg
      fullname: VOLODYMYR SAMOILENKO
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: vosamoilenko
      type: user
    createdAt: '2023-12-10T16:48:56.000Z'
    data:
      edited: true
      editors:
      - vosamoilenko
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.3949365019798279
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/2888d7f349161ea593c071d4763ab2b2.svg
          fullname: VOLODYMYR SAMOILENKO
          isHf: false
          isPro: false
          name: vosamoilenko
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;Senem&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Senem\">@<span class=\"\
          underline\">Senem</span></a></span>\n\n\t</span></span>  <span data-props=\"\
          {&quot;user&quot;:&quot;cenahwang&quot;}\" data-target=\"UserMention\" class=\"\
          SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"inline-block\"><span\
          \ class=\"contents\"><a href=\"/cenahwang\">@<span class=\"underline\">cenahwang</span></a></span>\n\
          \n\t</span></span> </p>\n<pre><code>from transformers import SegformerImageProcessor,\
          \ AutoModelForSemanticSegmentation\nfrom PIL import Image\nimport requests\n\
          import matplotlib.pyplot as plt\nimport torch.nn as nn\nimport numpy as\
          \ np\n\nprocessor = SegformerImageProcessor.from_pretrained(\"jonathandinu/face-parsing\"\
          )\nmodel = AutoModelForSemanticSegmentation.from_pretrained(\"jonathandinu/face-parsing\"\
          )\n\nurl = \"https://plus.unsplash.com/premium_photo-1673210886161-bfcc40f54d1f?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29uJTIwc3RhbmRpbmd8ZW58MHx8MHx8&amp;w=1000&amp;q=80\"\
          \nimage = Image.open(requests.get(url, stream=True).raw)\n\ninputs = processor(images=image,\
          \ return_tensors=\"pt\")\noutputs = model(**inputs)\nlogits = outputs.logits.cpu()\n\
          \nupsampled_logits = nn.functional.interpolate(\n    logits,\n    size=image.size[::-1],\n\
          \    mode=\"bilinear\",\n    align_corners=False,\n)\n\npred_seg = upsampled_logits.argmax(dim=1)[0]\n\
          \npred_seg_np = pred_seg.detach().numpy()\n\nplt.imshow(pred_seg_np)\nplt.axis('off')\n\
          plt.show()\n</code></pre>\n"
        raw: "@Senem  @cenahwang \n```\nfrom transformers import SegformerImageProcessor,\
          \ AutoModelForSemanticSegmentation\nfrom PIL import Image\nimport requests\n\
          import matplotlib.pyplot as plt\nimport torch.nn as nn\nimport numpy as\
          \ np\n\nprocessor = SegformerImageProcessor.from_pretrained(\"jonathandinu/face-parsing\"\
          )\nmodel = AutoModelForSemanticSegmentation.from_pretrained(\"jonathandinu/face-parsing\"\
          )\n\nurl = \"https://plus.unsplash.com/premium_photo-1673210886161-bfcc40f54d1f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29uJTIwc3RhbmRpbmd8ZW58MHx8MHx8&w=1000&q=80\"\
          \nimage = Image.open(requests.get(url, stream=True).raw)\n\ninputs = processor(images=image,\
          \ return_tensors=\"pt\")\noutputs = model(**inputs)\nlogits = outputs.logits.cpu()\n\
          \nupsampled_logits = nn.functional.interpolate(\n    logits,\n    size=image.size[::-1],\n\
          \    mode=\"bilinear\",\n    align_corners=False,\n)\n\npred_seg = upsampled_logits.argmax(dim=1)[0]\n\
          \npred_seg_np = pred_seg.detach().numpy()\n\nplt.imshow(pred_seg_np)\nplt.axis('off')\n\
          plt.show()\n```"
        updatedAt: '2023-12-10T16:49:16.532Z'
      numEdits: 1
      reactions:
      - count: 1
        reaction: "\U0001F91D"
        users:
        - Senem
      - count: 1
        reaction: "\U0001F44D"
        users:
        - jonathandinu
    id: 6575ebf87184b6d4085d73d4
    type: comment
  author: vosamoilenko
  content: "@Senem  @cenahwang \n```\nfrom transformers import SegformerImageProcessor,\
    \ AutoModelForSemanticSegmentation\nfrom PIL import Image\nimport requests\nimport\
    \ matplotlib.pyplot as plt\nimport torch.nn as nn\nimport numpy as np\n\nprocessor\
    \ = SegformerImageProcessor.from_pretrained(\"jonathandinu/face-parsing\")\nmodel\
    \ = AutoModelForSemanticSegmentation.from_pretrained(\"jonathandinu/face-parsing\"\
    )\n\nurl = \"https://plus.unsplash.com/premium_photo-1673210886161-bfcc40f54d1f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29uJTIwc3RhbmRpbmd8ZW58MHx8MHx8&w=1000&q=80\"\
    \nimage = Image.open(requests.get(url, stream=True).raw)\n\ninputs = processor(images=image,\
    \ return_tensors=\"pt\")\noutputs = model(**inputs)\nlogits = outputs.logits.cpu()\n\
    \nupsampled_logits = nn.functional.interpolate(\n    logits,\n    size=image.size[::-1],\n\
    \    mode=\"bilinear\",\n    align_corners=False,\n)\n\npred_seg = upsampled_logits.argmax(dim=1)[0]\n\
    \npred_seg_np = pred_seg.detach().numpy()\n\nplt.imshow(pred_seg_np)\nplt.axis('off')\n\
    plt.show()\n```"
  created_at: 2023-12-10 16:48:56+00:00
  edited: true
  hidden: false
  id: 6575ebf87184b6d4085d73d4
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1620472869382-noauth.png?w=200&h=200&f=face
      fullname: Senem Aktas
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Senem
      type: user
    createdAt: '2023-12-20T16:57:21.000Z'
    data:
      edited: false
      editors:
      - Senem
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.973747193813324
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1620472869382-noauth.png?w=200&h=200&f=face
          fullname: Senem Aktas
          isHf: false
          isPro: false
          name: Senem
          type: user
        html: '<p>Thank you very much. I am able to get the output.<br>I am wondering
          that how to get segmentation parts seperately with their names as running
          on Huggingface.<br>Such as left eye , nose etc. </p>

          '
        raw: "Thank you very much. I am able to get the output. \nI am wondering that\
          \ how to get segmentation parts seperately with their names as running on\
          \ Huggingface.\nSuch as left eye , nose etc. \n"
        updatedAt: '2023-12-20T16:57:21.943Z'
      numEdits: 0
      reactions: []
    id: 65831cf136c450e02ed8b51c
    type: comment
  author: Senem
  content: "Thank you very much. I am able to get the output. \nI am wondering that\
    \ how to get segmentation parts seperately with their names as running on Huggingface.\n\
    Such as left eye , nose etc. \n"
  created_at: 2023-12-20 16:57:21+00:00
  edited: false
  hidden: false
  id: 65831cf136c450e02ed8b51c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/2888d7f349161ea593c071d4763ab2b2.svg
      fullname: VOLODYMYR SAMOILENKO
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: vosamoilenko
      type: user
    createdAt: '2023-12-20T17:58:35.000Z'
    data:
      edited: false
      editors:
      - vosamoilenko
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7452450394630432
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/2888d7f349161ea593c071d4763ab2b2.svg
          fullname: VOLODYMYR SAMOILENKO
          isHf: false
          isPro: false
          name: vosamoilenko
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;Senem&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Senem\">@<span class=\"\
          underline\">Senem</span></a></span>\n\n\t</span></span> check config.json\
          \ in files, there you can find labels definition in <code>id2label</code>\
          \ prop.<br>Then just filter output by specific number.</p>\n"
        raw: "@Senem check config.json in files, there you can find labels definition\
          \ in `id2label` prop. \nThen just filter output by specific number.\n"
        updatedAt: '2023-12-20T17:58:35.252Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F91D"
        users:
        - Senem
        - AhsanAman
      - count: 2
        reaction: "\U0001F44D"
        users:
        - jonathandinu
        - AhsanAman
    id: 65832b4baa85c512daadbea5
    type: comment
  author: vosamoilenko
  content: "@Senem check config.json in files, there you can find labels definition\
    \ in `id2label` prop. \nThen just filter output by specific number.\n"
  created_at: 2023-12-20 17:58:35+00:00
  edited: false
  hidden: false
  id: 65832b4baa85c512daadbea5
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: jonathandinu/face-parsing
repo_type: model
status: open
target_branch: null
title: How to use this model
