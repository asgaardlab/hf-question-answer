!!python/object:huggingface_hub.community.DiscussionWithDetails
author: jbochi
conflicting_files: []
created_at: 2023-12-13 20:21:14+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1018b29e2da89f5920a58482e17a1948.svg
      fullname: J Bochi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: jbochi
      type: user
    createdAt: '2023-12-13T20:21:14.000Z'
    data:
      edited: true
      editors:
      - jbochi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.11044929921627045
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1018b29e2da89f5920a58482e17a1948.svg
          fullname: J Bochi
          isHf: false
          isPro: false
          name: jbochi
          type: user
        html: "<p>Adds <a href=\"https://huggingface.co/docs/safetensors/index\">safetensors</a>\
          \ weights.</p>\n<p>I tested it locally:</p>\n<pre><code class=\"language-python\"\
          >In [<span class=\"hljs-number\">20</span>]: model = AutoModelForCausalLM.from_pretrained(<span\
          \ class=\"hljs-string\">\"./phi-2\"</span>, trust_remote_code=<span class=\"\
          hljs-literal\">True</span>, torch_dtype=torch.float32, use_safetensors=<span\
          \ class=\"hljs-literal\">True</span>)\nLoading checkpoint shards: <span\
          \ class=\"hljs-number\">100</span>%|\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| <span class=\"\
          hljs-number\">2</span>/<span class=\"hljs-number\">2</span> [<span class=\"\
          hljs-number\">00</span>:<span class=\"hljs-number\">12</span>&lt;<span class=\"\
          hljs-number\">00</span>:<span class=\"hljs-number\">00</span>,  <span class=\"\
          hljs-number\">6.09</span>s/it]\n\nIn [<span class=\"hljs-number\">21</span>]:\
          \ tokenizer = AutoTokenizer.from_pretrained(<span class=\"hljs-string\"\
          >\"./phi-2\"</span>, trust_remote_code=<span class=\"hljs-literal\">True</span>)\n\
          Special tokens have been added <span class=\"hljs-keyword\">in</span> the\
          \ vocabulary, make sure the associated word embeddings are fine-tuned <span\
          \ class=\"hljs-keyword\">or</span> trained.\n\nIn [<span class=\"hljs-number\"\
          >22</span>]: inputs = tokenizer(<span class=\"hljs-string\">'''```python</span>\n\
          <span class=\"hljs-string\">    ...: def print_prime(n):</span>\n<span class=\"\
          hljs-string\">    ...:    \"\"\"</span>\n<span class=\"hljs-string\">  \
          \  ...:    Print all primes between 1 and n</span>\n<span class=\"hljs-string\"\
          >    ...:    \"\"\"'''</span>, return_tensors=<span class=\"hljs-string\"\
          >\"pt\"</span>, return_attention_mask=<span class=\"hljs-literal\">False</span>)\n\
          \nIn [<span class=\"hljs-number\">23</span>]: outputs = model.generate(**inputs,\
          \ max_length=<span class=\"hljs-number\">200</span>)\n\nIn [<span class=\"\
          hljs-number\">24</span>]: text = tokenizer.batch_decode(outputs)[<span class=\"\
          hljs-number\">0</span>]\n    ...: <span class=\"hljs-built_in\">print</span>(text)\n\
          ```python\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\
          \ function_\">print_prime</span>(<span class=\"hljs-params\">n</span>):\n\
          \   <span class=\"hljs-string\">\"\"\"</span>\n<span class=\"hljs-string\"\
          >   Print all primes between 1 and n</span>\n<span class=\"hljs-string\"\
          >   \"\"\"</span>\n   <span class=\"hljs-keyword\">for</span> i <span class=\"\
          hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span\
          \ class=\"hljs-number\">2</span>, n+<span class=\"hljs-number\">1</span>):\n\
          \       <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\"\
          >in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\"\
          >2</span>, i):\n           <span class=\"hljs-keyword\">if</span> i % j\
          \ == <span class=\"hljs-number\">0</span>:\n               <span class=\"\
          hljs-keyword\">break</span>\n       <span class=\"hljs-keyword\">else</span>:\n\
          \           <span class=\"hljs-built_in\">print</span>(i)\n\nprint_prime(<span\
          \ class=\"hljs-number\">20</span>)\n```\n\n<span class=\"hljs-number\">2.</span>\
          \ Write a Python function that takes a <span class=\"hljs-built_in\">list</span>\
          \ of numbers <span class=\"hljs-keyword\">and</span> returns the <span class=\"\
          hljs-built_in\">sum</span> of <span class=\"hljs-built_in\">all</span> even\
          \ numbers <span class=\"hljs-keyword\">in</span> the <span class=\"hljs-built_in\"\
          >list</span>.\n\n```python\n<span class=\"hljs-keyword\">def</span> <span\
          \ class=\"hljs-title function_\">sum_even</span>(<span class=\"hljs-params\"\
          >numbers</span>):\n   <span class=\"hljs-string\">\"\"\"</span>\n<span class=\"\
          hljs-string\">   Return the sum of all even numbers in the list</span>\n\
          <span class=\"hljs-string\">   \"\"\"</span>\n   <span class=\"hljs-keyword\"\
          >return</span> <span class=\"hljs-built_in\">sum</span>(num <span class=\"\
          hljs-keyword\">for</span> num <span class=\"hljs-keyword\">in</span> numbers\
          \ <span class=\"hljs-keyword\">if</span> num % <span class=\"hljs-number\"\
          >2</span> == <span class=\"hljs-number\">0</span>)\n\n<span class=\"hljs-built_in\"\
          >print</span>(sum_even([<span class=\"hljs-number\">1</span>, <span class=\"\
          hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"\
          hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"\
          hljs-number\">6</span>]))\n```\n\n<span class=\"hljs-number\">3.</span>\
          \ Write a Python function that takes a <span class=\"hljs-built_in\">list</span>\
          \ of strings <span class=\"hljs-keyword\">and</span> returns a\n</code></pre>\n"
        raw: "Adds [safetensors](https://huggingface.co/docs/safetensors/index) weights.\n\
          \nI tested it locally:\n\n````python\nIn [20]: model = AutoModelForCausalLM.from_pretrained(\"\
          ./phi-2\", trust_remote_code=True, torch_dtype=torch.float32, use_safetensors=True)\n\
          Loading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:12<00:00,\
          \  6.09s/it]\n\nIn [21]: tokenizer = AutoTokenizer.from_pretrained(\"./phi-2\"\
          , trust_remote_code=True)\nSpecial tokens have been added in the vocabulary,\
          \ make sure the associated word embeddings are fine-tuned or trained.\n\n\
          In [22]: inputs = tokenizer('''```python\n    ...: def print_prime(n):\n\
          \    ...:    \"\"\"\n    ...:    Print all primes between 1 and n\n    ...:\
          \    \"\"\"''', return_tensors=\"pt\", return_attention_mask=False)\n\n\
          In [23]: outputs = model.generate(**inputs, max_length=200)\n\nIn [24]:\
          \ text = tokenizer.batch_decode(outputs)[0]\n    ...: print(text)\n```python\n\
          def print_prime(n):\n   \"\"\"\n   Print all primes between 1 and n\n  \
          \ \"\"\"\n   for i in range(2, n+1):\n       for j in range(2, i):\n   \
          \        if i % j == 0:\n               break\n       else:\n          \
          \ print(i)\n\nprint_prime(20)\n```\n\n2. Write a Python function that takes\
          \ a list of numbers and returns the sum of all even numbers in the list.\n\
          \n```python\ndef sum_even(numbers):\n   \"\"\"\n   Return the sum of all\
          \ even numbers in the list\n   \"\"\"\n   return sum(num for num in numbers\
          \ if num % 2 == 0)\n\nprint(sum_even([1, 2, 3, 4, 5, 6]))\n```\n\n3. Write\
          \ a Python function that takes a list of strings and returns a\n````"
        updatedAt: '2023-12-13T20:36:22.548Z'
      numEdits: 2
      reactions: []
    id: 657a123ab5343957f213ed0d
    type: comment
  author: jbochi
  content: "Adds [safetensors](https://huggingface.co/docs/safetensors/index) weights.\n\
    \nI tested it locally:\n\n````python\nIn [20]: model = AutoModelForCausalLM.from_pretrained(\"\
    ./phi-2\", trust_remote_code=True, torch_dtype=torch.float32, use_safetensors=True)\n\
    Loading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\
    \u2588\u2588| 2/2 [00:12<00:00,  6.09s/it]\n\nIn [21]: tokenizer = AutoTokenizer.from_pretrained(\"\
    ./phi-2\", trust_remote_code=True)\nSpecial tokens have been added in the vocabulary,\
    \ make sure the associated word embeddings are fine-tuned or trained.\n\nIn [22]:\
    \ inputs = tokenizer('''```python\n    ...: def print_prime(n):\n    ...:    \"\
    \"\"\n    ...:    Print all primes between 1 and n\n    ...:    \"\"\"''', return_tensors=\"\
    pt\", return_attention_mask=False)\n\nIn [23]: outputs = model.generate(**inputs,\
    \ max_length=200)\n\nIn [24]: text = tokenizer.batch_decode(outputs)[0]\n    ...:\
    \ print(text)\n```python\ndef print_prime(n):\n   \"\"\"\n   Print all primes\
    \ between 1 and n\n   \"\"\"\n   for i in range(2, n+1):\n       for j in range(2,\
    \ i):\n           if i % j == 0:\n               break\n       else:\n       \
    \    print(i)\n\nprint_prime(20)\n```\n\n2. Write a Python function that takes\
    \ a list of numbers and returns the sum of all even numbers in the list.\n\n```python\n\
    def sum_even(numbers):\n   \"\"\"\n   Return the sum of all even numbers in the\
    \ list\n   \"\"\"\n   return sum(num for num in numbers if num % 2 == 0)\n\nprint(sum_even([1,\
    \ 2, 3, 4, 5, 6]))\n```\n\n3. Write a Python function that takes a list of strings\
    \ and returns a\n````"
  created_at: 2023-12-13 20:21:14+00:00
  edited: true
  hidden: false
  id: 657a123ab5343957f213ed0d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    author:
      avatarUrl: /avatars/1018b29e2da89f5920a58482e17a1948.svg
      fullname: J Bochi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: jbochi
      type: user
    createdAt: '2023-12-13T20:22:28.000Z'
    data:
      oid: 511b69b040b1df6a761950a7c5562bc313431c5a
      parents:
      - 120f9782b01128677a48d7dfab2bd14fabd0f0bf
      subject: Add safetensors
    id: 657a12840000000000000000
    type: commit
  author: jbochi
  created_at: 2023-12-13 20:22:28+00:00
  id: 657a12840000000000000000
  oid: 511b69b040b1df6a761950a7c5562bc313431c5a
  summary: Add safetensors
  type: commit
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b7e345f92b20f7a38bf47a/EtTE7HF5b20A8638lrKqq.jpeg?w=200&h=200&f=face
      fullname: Farouk
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: pharaouk
      type: user
    createdAt: '2023-12-13T22:15:47.000Z'
    data:
      edited: false
      editors:
      - pharaouk
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9146074056625366
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b7e345f92b20f7a38bf47a/EtTE7HF5b20A8638lrKqq.jpeg?w=200&h=200&f=face
          fullname: Farouk
          isHf: false
          isPro: false
          name: pharaouk
          type: user
        html: '<p>thank you for your service</p>

          '
        raw: thank you for your service
        updatedAt: '2023-12-13T22:15:47.568Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - jbochi
      relatedEventId: 657a2d13e221007741cca31f
    id: 657a2d13e221007741cca317
    type: comment
  author: pharaouk
  content: thank you for your service
  created_at: 2023-12-13 22:15:47+00:00
  edited: false
  hidden: false
  id: 657a2d13e221007741cca317
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b7e345f92b20f7a38bf47a/EtTE7HF5b20A8638lrKqq.jpeg?w=200&h=200&f=face
      fullname: Farouk
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: pharaouk
      type: user
    createdAt: '2023-12-13T22:15:47.000Z'
    data:
      status: open
    id: 657a2d13e221007741cca31f
    type: status-change
  author: pharaouk
  created_at: 2023-12-13 22:15:47+00:00
  id: 657a2d13e221007741cca31f
  new_status: open
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b7e345f92b20f7a38bf47a/EtTE7HF5b20A8638lrKqq.jpeg?w=200&h=200&f=face
      fullname: Farouk
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: pharaouk
      type: user
    createdAt: '2023-12-13T22:15:54.000Z'
    data:
      status: merged
    id: 657a2d1ac28ce07c52a714ab
    type: status-change
  author: pharaouk
  created_at: 2023-12-13 22:15:54+00:00
  id: 657a2d1ac28ce07c52a714ab
  new_status: merged
  type: status-change
is_pull_request: true
merge_commit_oid: a74210bf98ef34291c0644908402600131e15847
num: 9
repo_id: SkunkworksAI/phi-2
repo_type: model
status: merged
target_branch: refs/heads/main
title: Add safetensors
