!!python/object:huggingface_hub.community.DiscussionWithDetails
author: SaraAmd
conflicting_files: null
created_at: 2022-09-23 15:49:03+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6b68a8d18c616a44b4255ac7eeefeb90.svg
      fullname: Sara.Amd
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: SaraAmd
      type: user
    createdAt: '2022-09-23T16:49:03.000Z'
    data:
      edited: true
      editors:
      - SaraAmd
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6b68a8d18c616a44b4255ac7eeefeb90.svg
          fullname: Sara.Amd
          isHf: false
          isPro: false
          name: SaraAmd
          type: user
        html: '<p>Could you please show a demo or an example of how to use this model
          on object detection tasks? I need this model for this task on my own custom
          dataset but the code in their repository throws an error. And I hope at
          least it can be used in hugging face library</p>

          '
        raw: Could you please show a demo or an example of how to use this model on
          object detection tasks? I need this model for this task on my own custom
          dataset but the code in their repository throws an error. And I hope at
          least it can be used in hugging face library
        updatedAt: '2022-09-23T16:49:24.301Z'
      numEdits: 1
      reactions: []
    id: 632de37f90fad44b4c5e0afa
    type: comment
  author: SaraAmd
  content: Could you please show a demo or an example of how to use this model on
    object detection tasks? I need this model for this task on my own custom dataset
    but the code in their repository throws an error. And I hope at least it can be
    used in hugging face library
  created_at: 2022-09-23 15:49:03+00:00
  edited: true
  hidden: false
  id: 632de37f90fad44b4c5e0afa
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d482a8fd525b810b860f0fafbf26572b.svg
      fullname: R
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: senthil-r
      type: user
    createdAt: '2023-08-08T16:43:20.000Z'
    data:
      edited: false
      editors:
      - senthil-r
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8295980095863342
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d482a8fd525b810b860f0fafbf26572b.svg
          fullname: R
          isHf: false
          isPro: false
          name: senthil-r
          type: user
        html: '<p>Can you share the error?</p>

          '
        raw: Can you share the error?
        updatedAt: '2023-08-08T16:43:20.011Z'
      numEdits: 0
      reactions: []
    id: 64d270a8c2bd2354220d6f2f
    type: comment
  author: senthil-r
  content: Can you share the error?
  created_at: 2023-08-08 15:43:20+00:00
  edited: false
  hidden: false
  id: 64d270a8c2bd2354220d6f2f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/V6Qj6xRFGH48qagPSkCVn.jpeg?w=200&h=200&f=face
      fullname: "M. \xC1ngel Gonz\xE1lez"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AITEK-DEV
      type: user
    createdAt: '2023-08-08T21:50:10.000Z'
    data:
      edited: false
      editors:
      - AITEK-DEV
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5873196125030518
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/V6Qj6xRFGH48qagPSkCVn.jpeg?w=200&h=200&f=face
          fullname: "M. \xC1ngel Gonz\xE1lez"
          isHf: false
          isPro: false
          name: AITEK-DEV
          type: user
        html: '<p>Provide more information </p>

          '
        raw: 'Provide more information '
        updatedAt: '2023-08-08T21:50:10.579Z'
      numEdits: 0
      reactions: []
    id: 64d2b892bd61fedadf3b6883
    type: comment
  author: AITEK-DEV
  content: 'Provide more information '
  created_at: 2023-08-08 20:50:10+00:00
  edited: false
  hidden: false
  id: 64d2b892bd61fedadf3b6883
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/f3402803a11ecd34264f98be12bc20ee.svg
      fullname: Yaniv Ben-Malka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ybm11
      type: user
    createdAt: '2023-08-15T12:46:35.000Z'
    data:
      edited: false
      editors:
      - ybm11
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6503236889839172
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/f3402803a11ecd34264f98be12bc20ee.svg
          fullname: Yaniv Ben-Malka
          isHf: false
          isPro: false
          name: ybm11
          type: user
        html: '<p>DiT model card (<a href="https://huggingface.co/docs/transformers/model_doc/dit">https://huggingface.co/docs/transformers/model_doc/dit</a>)
          refers to 3 use cases: image classification, layout analysis and table detection.<br>However,
          the resources section in the model card contains only a notebook with an
          image classification working example.<br>In addition, the only code snippet
          from <code>dit-base</code> model card (captioned below), returns only the
          logits,  other than demonstrating the complete pipeline for each of the
          use cases.<br>Getting a working example of each use case complete pipeline
          will be very helpful.<br>Thank you in advance.</p>

          <pre><code class="language-from">import torch

          from PIL import Image


          image = Image.open(''path_to_your_document_image'').convert(''RGB'')


          processor = BeitImageProcessor.from_pretrained("microsoft/dit-base")

          model = BeitForMaskedImageModeling.from_pretrained("microsoft/dit-base")


          num_patches = (model.config.image_size // model.config.patch_size) ** 2

          pixel_values = processor(images=image, return_tensors="pt").pixel_values

          # create random boolean mask of shape (batch_size, num_patches)

          bool_masked_pos = torch.randint(low=0, high=2, size=(1, num_patches)).bool()


          outputs = model(pixel_values, bool_masked_pos=bool_masked_pos)

          loss, logits = outputs.loss, outputs.logits```

          </code></pre>

          '
        raw: 'DiT model card (https://huggingface.co/docs/transformers/model_doc/dit)
          refers to 3 use cases: image classification, layout analysis and table detection.

          However, the resources section in the model card contains only a notebook
          with an image classification working example.

          In addition, the only code snippet from <code>dit-base</code> model card
          (captioned below), returns only the logits,  other than demonstrating the
          complete pipeline for each of the use cases.

          Getting a working example of each use case complete pipeline will be very
          helpful.

          Thank you in advance.


          ```from transformers import BeitImageProcessor, BeitForMaskedImageModeling

          import torch

          from PIL import Image


          image = Image.open(''path_to_your_document_image'').convert(''RGB'')


          processor = BeitImageProcessor.from_pretrained("microsoft/dit-base")

          model = BeitForMaskedImageModeling.from_pretrained("microsoft/dit-base")


          num_patches = (model.config.image_size // model.config.patch_size) ** 2

          pixel_values = processor(images=image, return_tensors="pt").pixel_values

          # create random boolean mask of shape (batch_size, num_patches)

          bool_masked_pos = torch.randint(low=0, high=2, size=(1, num_patches)).bool()


          outputs = model(pixel_values, bool_masked_pos=bool_masked_pos)

          loss, logits = outputs.loss, outputs.logits```

          '
        updatedAt: '2023-08-15T12:46:35.141Z'
      numEdits: 0
      reactions:
      - count: 3
        reaction: "\U0001F44D"
        users:
        - nolankurylo
        - Malithius
        - ivankqw
    id: 64db73ab858f8a41c111c3f1
    type: comment
  author: ybm11
  content: 'DiT model card (https://huggingface.co/docs/transformers/model_doc/dit)
    refers to 3 use cases: image classification, layout analysis and table detection.

    However, the resources section in the model card contains only a notebook with
    an image classification working example.

    In addition, the only code snippet from <code>dit-base</code> model card (captioned
    below), returns only the logits,  other than demonstrating the complete pipeline
    for each of the use cases.

    Getting a working example of each use case complete pipeline will be very helpful.

    Thank you in advance.


    ```from transformers import BeitImageProcessor, BeitForMaskedImageModeling

    import torch

    from PIL import Image


    image = Image.open(''path_to_your_document_image'').convert(''RGB'')


    processor = BeitImageProcessor.from_pretrained("microsoft/dit-base")

    model = BeitForMaskedImageModeling.from_pretrained("microsoft/dit-base")


    num_patches = (model.config.image_size // model.config.patch_size) ** 2

    pixel_values = processor(images=image, return_tensors="pt").pixel_values

    # create random boolean mask of shape (batch_size, num_patches)

    bool_masked_pos = torch.randint(low=0, high=2, size=(1, num_patches)).bool()


    outputs = model(pixel_values, bool_masked_pos=bool_masked_pos)

    loss, logits = outputs.loss, outputs.logits```

    '
  created_at: 2023-08-15 11:46:35+00:00
  edited: false
  hidden: false
  id: 64db73ab858f8a41c111c3f1
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: microsoft/dit-base
repo_type: model
status: open
target_branch: null
title: DiT for object detection
