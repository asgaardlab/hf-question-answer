!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Wok
conflicting_files: null
created_at: 2023-12-03 16:01:23+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
      fullname: Wok
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Wok
      type: user
    createdAt: '2023-12-03T16:01:23.000Z'
    data:
      edited: true
      editors:
      - Wok
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5770671367645264
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
          fullname: Wok
          isHf: false
          isPro: false
          name: Wok
          type: user
        html: "<pre><code class=\"language-python\"><span class=\"hljs-keyword\">from</span>\
          \ transformers <span class=\"hljs-keyword\">import</span> AutoProcessor\n\
          \nprocessor = AutoProcessor.from_pretrained(<span class=\"hljs-string\"\
          >\"CompVis/stable-diffusion-safety-checker\"</span>)\n</code></pre>\n<pre><code>OSError\
          \                                   Traceback (most recent call last)\n\n\
          &lt;ipython-input-21-ef63f91e2754&gt; in &lt;cell line: 3&gt;()\n      1\
          \ from transformers import AutoProcessor\n      2 \n----&gt; 3 processor\
          \ = AutoProcessor.from_pretrained(\"CompVis/stable-diffusion-safety-checker\"\
          )\n\n/usr/local/lib/python3.10/dist-packages/transformers/models/auto/processing_auto.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, **kwargs)\n   \
          \ 295         # Last try: we use the PROCESSOR_MAPPING.\n    296       \
          \  elif type(config) in PROCESSOR_MAPPING:\n--&gt; 297             return\
          \ PROCESSOR_MAPPING[type(config)].from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs)\n    298 \n    299         # At this stage, there doesn't seem\
          \ to be a `Processor` class available for this model, so let's try a\n\n\
          /usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
          \ local_files_only, token, revision, **kwargs)\n    226             kwargs[\"\
          token\"] = token\n    227 \n--&gt; 228         args = cls._get_arguments_from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs)\n    229         return cls(*args)\n    230 \n\n/usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
          \ in _get_arguments_from_pretrained(cls, pretrained_model_name_or_path,\
          \ **kwargs)\n    270                 attribute_class = getattr(transformers_module,\
          \ class_name)\n    271 \n--&gt; 272             args.append(attribute_class.from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs))\n    273         return args\n    274 \n\n/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
          \ local_files_only, token, revision, *init_inputs, **kwargs)\n   2006 \n\
          \   2007         if all(full_file_name is None for full_file_name in resolved_vocab_files.values()):\n\
          -&gt; 2008             raise EnvironmentError(\n   2009                \
          \ f\"Can't load tokenizer for '{pretrained_model_name_or_path}'. If you\
          \ were trying to load it from \"\n   2010                 \"'https://huggingface.co/models',\
          \ make sure you don't have a local directory with the same name. \"\n\n\
          OSError: Can't load tokenizer for 'CompVis/stable-diffusion-safety-checker'.\
          \ If you were trying to load it from 'https://huggingface.co/models', make\
          \ sure you don't have a local directory with the same name. Otherwise, make\
          \ sure 'CompVis/stable-diffusion-safety-checker' is the correct path to\
          \ a directory containing all relevant files for a CLIPTokenizerFast tokenizer.\n\
          </code></pre>\n"
        raw: "```python\nfrom transformers import AutoProcessor\n\nprocessor = AutoProcessor.from_pretrained(\"\
          CompVis/stable-diffusion-safety-checker\")\n```\n\n```\nOSError        \
          \                           Traceback (most recent call last)\n\n<ipython-input-21-ef63f91e2754>\
          \ in <cell line: 3>()\n      1 from transformers import AutoProcessor\n\
          \      2 \n----> 3 processor = AutoProcessor.from_pretrained(\"CompVis/stable-diffusion-safety-checker\"\
          )\n\n/usr/local/lib/python3.10/dist-packages/transformers/models/auto/processing_auto.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, **kwargs)\n   \
          \ 295         # Last try: we use the PROCESSOR_MAPPING.\n    296       \
          \  elif type(config) in PROCESSOR_MAPPING:\n--> 297             return PROCESSOR_MAPPING[type(config)].from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs)\n    298 \n    299         # At this stage, there doesn't seem\
          \ to be a `Processor` class available for this model, so let's try a\n\n\
          /usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
          \ local_files_only, token, revision, **kwargs)\n    226             kwargs[\"\
          token\"] = token\n    227 \n--> 228         args = cls._get_arguments_from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs)\n    229         return cls(*args)\n    230 \n\n/usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
          \ in _get_arguments_from_pretrained(cls, pretrained_model_name_or_path,\
          \ **kwargs)\n    270                 attribute_class = getattr(transformers_module,\
          \ class_name)\n    271 \n--> 272             args.append(attribute_class.from_pretrained(pretrained_model_name_or_path,\
          \ **kwargs))\n    273         return args\n    274 \n\n/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py\
          \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
          \ local_files_only, token, revision, *init_inputs, **kwargs)\n   2006 \n\
          \   2007         if all(full_file_name is None for full_file_name in resolved_vocab_files.values()):\n\
          -> 2008             raise EnvironmentError(\n   2009                 f\"\
          Can't load tokenizer for '{pretrained_model_name_or_path}'. If you were\
          \ trying to load it from \"\n   2010                 \"'https://huggingface.co/models',\
          \ make sure you don't have a local directory with the same name. \"\n\n\
          OSError: Can't load tokenizer for 'CompVis/stable-diffusion-safety-checker'.\
          \ If you were trying to load it from 'https://huggingface.co/models', make\
          \ sure you don't have a local directory with the same name. Otherwise, make\
          \ sure 'CompVis/stable-diffusion-safety-checker' is the correct path to\
          \ a directory containing all relevant files for a CLIPTokenizerFast tokenizer.\n\
          ```"
        updatedAt: '2023-12-03T16:04:29.251Z'
      numEdits: 1
      reactions: []
    id: 656ca653ede71189ad4304de
    type: comment
  author: Wok
  content: "```python\nfrom transformers import AutoProcessor\n\nprocessor = AutoProcessor.from_pretrained(\"\
    CompVis/stable-diffusion-safety-checker\")\n```\n\n```\nOSError              \
    \                     Traceback (most recent call last)\n\n<ipython-input-21-ef63f91e2754>\
    \ in <cell line: 3>()\n      1 from transformers import AutoProcessor\n      2\
    \ \n----> 3 processor = AutoProcessor.from_pretrained(\"CompVis/stable-diffusion-safety-checker\"\
    )\n\n/usr/local/lib/python3.10/dist-packages/transformers/models/auto/processing_auto.py\
    \ in from_pretrained(cls, pretrained_model_name_or_path, **kwargs)\n    295  \
    \       # Last try: we use the PROCESSOR_MAPPING.\n    296         elif type(config)\
    \ in PROCESSOR_MAPPING:\n--> 297             return PROCESSOR_MAPPING[type(config)].from_pretrained(pretrained_model_name_or_path,\
    \ **kwargs)\n    298 \n    299         # At this stage, there doesn't seem to\
    \ be a `Processor` class available for this model, so let's try a\n\n/usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
    \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
    \ local_files_only, token, revision, **kwargs)\n    226             kwargs[\"\
    token\"] = token\n    227 \n--> 228         args = cls._get_arguments_from_pretrained(pretrained_model_name_or_path,\
    \ **kwargs)\n    229         return cls(*args)\n    230 \n\n/usr/local/lib/python3.10/dist-packages/transformers/processing_utils.py\
    \ in _get_arguments_from_pretrained(cls, pretrained_model_name_or_path, **kwargs)\n\
    \    270                 attribute_class = getattr(transformers_module, class_name)\n\
    \    271 \n--> 272             args.append(attribute_class.from_pretrained(pretrained_model_name_or_path,\
    \ **kwargs))\n    273         return args\n    274 \n\n/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py\
    \ in from_pretrained(cls, pretrained_model_name_or_path, cache_dir, force_download,\
    \ local_files_only, token, revision, *init_inputs, **kwargs)\n   2006 \n   2007\
    \         if all(full_file_name is None for full_file_name in resolved_vocab_files.values()):\n\
    -> 2008             raise EnvironmentError(\n   2009                 f\"Can't\
    \ load tokenizer for '{pretrained_model_name_or_path}'. If you were trying to\
    \ load it from \"\n   2010                 \"'https://huggingface.co/models',\
    \ make sure you don't have a local directory with the same name. \"\n\nOSError:\
    \ Can't load tokenizer for 'CompVis/stable-diffusion-safety-checker'. If you were\
    \ trying to load it from 'https://huggingface.co/models', make sure you don't\
    \ have a local directory with the same name. Otherwise, make sure 'CompVis/stable-diffusion-safety-checker'\
    \ is the correct path to a directory containing all relevant files for a CLIPTokenizerFast\
    \ tokenizer.\n```"
  created_at: 2023-12-03 16:01:23+00:00
  edited: true
  hidden: false
  id: 656ca653ede71189ad4304de
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
      fullname: Wok
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Wok
      type: user
    createdAt: '2023-12-03T16:14:19.000Z'
    data:
      edited: false
      editors:
      - Wok
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.706924319267273
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
          fullname: Wok
          isHf: false
          isPro: false
          name: Wok
          type: user
        html: '<p>I have used a workaround with another <code>import</code>. See <a
          href="https://huggingface.co/CompVis/stable-diffusion-safety-checker/discussions/44">https://huggingface.co/CompVis/stable-diffusion-safety-checker/discussions/44</a></p>

          '
        raw: I have used a workaround with another `import`. See https://huggingface.co/CompVis/stable-diffusion-safety-checker/discussions/44
        updatedAt: '2023-12-03T16:14:19.616Z'
      numEdits: 0
      reactions: []
    id: 656ca95b6f39f1565833d7e7
    type: comment
  author: Wok
  content: I have used a workaround with another `import`. See https://huggingface.co/CompVis/stable-diffusion-safety-checker/discussions/44
  created_at: 2023-12-03 16:14:19+00:00
  edited: false
  hidden: false
  id: 656ca95b6f39f1565833d7e7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
      fullname: Wok
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Wok
      type: user
    createdAt: '2023-12-04T09:13:37.000Z'
    data:
      edited: false
      editors:
      - Wok
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6782785654067993
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
          fullname: Wok
          isHf: false
          isPro: false
          name: Wok
          type: user
        html: '<p>Fixed with the following piece of code.</p>

          <pre><code class="language-python"><span class="hljs-keyword">from</span>
          transformers <span class="hljs-keyword">import</span> AutoFeatureExtractor


          processor = AutoFeatureExtractor.from_pretrained(<span class="hljs-string">"CompVis/stable-diffusion-safety-checker"</span>)

          </code></pre>

          '
        raw: 'Fixed with the following piece of code.


          ```python

          from transformers import AutoFeatureExtractor


          processor = AutoFeatureExtractor.from_pretrained("CompVis/stable-diffusion-safety-checker")

          ```'
        updatedAt: '2023-12-04T09:13:37.993Z'
      numEdits: 0
      reactions: []
    id: 656d9841edd446c42b909b3c
    type: comment
  author: Wok
  content: 'Fixed with the following piece of code.


    ```python

    from transformers import AutoFeatureExtractor


    processor = AutoFeatureExtractor.from_pretrained("CompVis/stable-diffusion-safety-checker")

    ```'
  created_at: 2023-12-04 09:13:37+00:00
  edited: false
  hidden: false
  id: 656d9841edd446c42b909b3c
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 43
repo_id: CompVis/stable-diffusion-safety-checker
repo_type: model
status: open
target_branch: null
title: 'OSError: Can''t load tokenizer for ''CompVis/stable-diffusion-safety-checker'''
