!!python/object:huggingface_hub.community.DiscussionWithDetails
author: sashokbg
conflicting_files: null
created_at: 2023-11-20 21:42:33+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/4620f0e8dd2934490ecd5cfc0f6e3942.svg
      fullname: Aleksandar KIRILOV
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sashokbg
      type: user
    createdAt: '2023-11-20T21:42:33.000Z'
    data:
      edited: false
      editors:
      - sashokbg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7526258826255798
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/4620f0e8dd2934490ecd5cfc0f6e3942.svg
          fullname: Aleksandar KIRILOV
          isHf: false
          isPro: false
          name: sashokbg
          type: user
        html: "<p>Hello, I managed to run your model on CPU by converting and quantizing\
          \ to 4 bits using llama.cpp<br><a rel=\"nofollow\" href=\"https://github.com/ggerganov/llama.cpp\"\
          >https://github.com/ggerganov/llama.cpp</a></p>\n<p>I have the following\
          \ prompt loaded, but the answers do not seem to be very precise.  Any idea\
          \ on how to improve ?</p>\n<p>./main -m ../invoker-13b/ggml-model-q4_0.gguf\
          \ -n 128 -f functions.txt</p>\n<p>Available Functions:</p>\n<pre><code class=\"\
          language-json\">        <span class=\"hljs-punctuation\">{</span>\n    \
          \      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\"\
          >:</span> <span class=\"hljs-string\">\"get_current_weather\"</span><span\
          \ class=\"hljs-punctuation\">,</span>\n          <span class=\"hljs-attr\"\
          >\"description\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-string\">\"Get the current weather in a given location\"</span><span\
          \ class=\"hljs-punctuation\">,</span>\n          <span class=\"hljs-attr\"\
          >\"parameters\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-punctuation\">{</span>\n            <span class=\"hljs-attr\">\"type\"\
          </span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\"\
          >\"object\"</span><span class=\"hljs-punctuation\">,</span>\n          \
          \  <span class=\"hljs-attr\">\"properties\"</span><span class=\"hljs-punctuation\"\
          >:</span> <span class=\"hljs-punctuation\">{</span>\n              <span\
          \ class=\"hljs-attr\">\"location\"</span><span class=\"hljs-punctuation\"\
          >:</span> <span class=\"hljs-punctuation\">{</span>\n                <span\
          \ class=\"hljs-attr\">\"type\"</span><span class=\"hljs-punctuation\">:</span>\
          \ <span class=\"hljs-string\">\"string\"</span><span class=\"hljs-punctuation\"\
          >,</span>\n                <span class=\"hljs-attr\">\"description\"</span><span\
          \ class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"The\
          \ city and state, e.g. San Francisco, CA\"</span>\n              <span class=\"\
          hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n \
          \             <span class=\"hljs-attr\">\"unit\"</span><span class=\"hljs-punctuation\"\
          >:</span> <span class=\"hljs-punctuation\">{</span>\n                <span\
          \ class=\"hljs-attr\">\"type\"</span><span class=\"hljs-punctuation\">:</span>\
          \ <span class=\"hljs-string\">\"string\"</span><span class=\"hljs-punctuation\"\
          >,</span>\n                <span class=\"hljs-attr\">\"enum\"</span><span\
          \ class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span\
          \ class=\"hljs-string\">\"celsius\"</span><span class=\"hljs-punctuation\"\
          >,</span> <span class=\"hljs-string\">\"fahrenheit\"</span><span class=\"\
          hljs-punctuation\">]</span>\n              <span class=\"hljs-punctuation\"\
          >}</span>\n            <span class=\"hljs-punctuation\">}</span><span class=\"\
          hljs-punctuation\">,</span>\n            <span class=\"hljs-attr\">\"required\"\
          </span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\"\
          >[</span><span class=\"hljs-string\">\"location\"</span><span class=\"hljs-punctuation\"\
          >]</span>\n          <span class=\"hljs-punctuation\">}</span>\n       \
          \ <span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<pre><code class=\"\
          language-json\">        <span class=\"hljs-punctuation\">{</span>\n    \
          \        <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\"\
          >:</span> <span class=\"hljs-string\">\"get_time\"</span><span class=\"\
          hljs-punctuation\">,</span>\n            <span class=\"hljs-attr\">\"description\"\
          </span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\"\
          >\"Get the current time\"</span><span class=\"hljs-punctuation\">,</span>\n\
          \            <span class=\"hljs-attr\">\"parameters\"</span><span class=\"\
          hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n\
          \                <span class=\"hljs-attr\">\"type\"</span><span class=\"\
          hljs-punctuation\">:</span> <span class=\"hljs-string\">\"object\"</span><span\
          \ class=\"hljs-punctuation\">,</span>\n                <span class=\"hljs-attr\"\
          >\"properties\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-punctuation\">{</span>\n                    <span class=\"hljs-attr\"\
          >\"location\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-punctuation\">{</span>\n                        <span class=\"hljs-attr\"\
          >\"type\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-string\">\"string\"</span><span class=\"hljs-punctuation\">,</span>\n\
          \                        <span class=\"hljs-attr\">\"description\"</span><span\
          \ class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"The\
          \ city and state, e.g. New York City, NY\"</span>\n                    <span\
          \ class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n\
          \                    <span class=\"hljs-attr\">\"format\"</span><span class=\"\
          hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n\
          \                    <span class=\"hljs-attr\">\"type\"</span><span class=\"\
          hljs-punctuation\">:</span> <span class=\"hljs-string\">\"string\"</span><span\
          \ class=\"hljs-punctuation\">,</span>\n                    <span class=\"\
          hljs-attr\">\"enum\"</span><span class=\"hljs-punctuation\">:</span> <span\
          \ class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">\"12-hour\"\
          </span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\"\
          >\"24-hour\"</span><span class=\"hljs-punctuation\">]</span>\n         \
          \           <span class=\"hljs-punctuation\">}</span>\n                <span\
          \ class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n\
          \                <span class=\"hljs-attr\">\"required\"</span><span class=\"\
          hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span\
          \ class=\"hljs-string\">\"location\"</span><span class=\"hljs-punctuation\"\
          >]</span>\n            <span class=\"hljs-punctuation\">}</span>\n     \
          \   <span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p>A chat\
          \ between a curious user and an artificial intelligence assistant. The assistant\
          \ gives helpful, detailed, and polite answers to the user's questions. The\
          \ assistant calls functions with appropriate input when necessary.</p>\n\
          <p>USER: We are going on a vacation in Paris, France, maybe we should take\
          \ an umbrella ?<br>ASSISTANT:</p>\n<p>First attempt:<br><code>{\"content\"\
          : \"That sounds like a great idea! I recommend using my `get_current_weather`\
          \ function to check the weather forecast for Paris. You can specify the\
          \ city and state as \\\"Paris, FR\\\" and the unit as \\\"celsius\\\". The\
          \ response will include information on whether it is likely to rain or not\
          \ during your stay.\", \"function_call\": null}</code> [end of text]</p>\n\
          <p>Second attempt:</p>\n<p>```{\"content\": \"Current weather in Paris is:\\\
          n\\n- Temperature: 39\\u00b0 F / 4\\u00b0 C\\n- Weather: Cloudy with Light\
          \ Rain\\n\\nTo get a more detailed forecast, you can use the function <code>get_current_weather</code>\
          \ and provide the location as <code>Paris, France</code>. \\nYou can also\
          \ specify the unit of temperature in either Celsius or Fahrenheit.\\n\\\
          nIf you want to know more about the weather and climate in Paris, you can\
          \ check out some</p>\n"
        raw: "Hello, I managed to run your model on CPU by converting and quantizing\
          \ to 4 bits using llama.cpp\r\nhttps://github.com/ggerganov/llama.cpp\r\n\
          \r\nI have the following prompt loaded, but the answers do not seem to be\
          \ very precise.  Any idea on how to improve ?\r\n\r\n./main -m ../invoker-13b/ggml-model-q4_0.gguf\
          \ -n 128 -f functions.txt\r\n\r\nAvailable Functions:\r\n```json\r\n   \
          \     {\r\n          \"name\": \"get_current_weather\",\r\n          \"\
          description\": \"Get the current weather in a given location\",\r\n    \
          \      \"parameters\": {\r\n            \"type\": \"object\",\r\n      \
          \      \"properties\": {\r\n              \"location\": {\r\n          \
          \      \"type\": \"string\",\r\n                \"description\": \"The city\
          \ and state, e.g. San Francisco, CA\"\r\n              },\r\n          \
          \    \"unit\": {\r\n                \"type\": \"string\",\r\n          \
          \      \"enum\": [\"celsius\", \"fahrenheit\"]\r\n              }\r\n  \
          \          },\r\n            \"required\": [\"location\"]\r\n          }\r\
          \n        }\r\n```\r\n```json\r\n        {\r\n            \"name\": \"get_time\"\
          ,\r\n            \"description\": \"Get the current time\",\r\n        \
          \    \"parameters\": {\r\n                \"type\": \"object\",\r\n    \
          \            \"properties\": {\r\n                    \"location\": {\r\n\
          \                        \"type\": \"string\",\r\n                     \
          \   \"description\": \"The city and state, e.g. New York City, NY\"\r\n\
          \                    },\r\n                    \"format\": {\r\n       \
          \             \"type\": \"string\",\r\n                    \"enum\": [\"\
          12-hour\", \"24-hour\"]\r\n                    }\r\n                },\r\
          \n                \"required\": [\"location\"]\r\n            }\r\n    \
          \    }\r\n```\r\n\r\nA chat between a curious user and an artificial intelligence\
          \ assistant. The assistant gives helpful, detailed, and polite answers to\
          \ the user's questions. The assistant calls functions with appropriate input\
          \ when necessary.\r\n\r\nUSER: We are going on a vacation in Paris, France,\
          \ maybe we should take an umbrella ?\r\nASSISTANT:\r\n\r\nFirst attempt:\r\
          \n```{\"content\": \"That sounds like a great idea! I recommend using my\
          \ `get_current_weather` function to check the weather forecast for Paris.\
          \ You can specify the city and state as \\\"Paris, FR\\\" and the unit as\
          \ \\\"celsius\\\". The response will include information on whether it is\
          \ likely to rain or not during your stay.\", \"function_call\": null}```\
          \ [end of text]\r\n\r\nSecond attempt:\r\n\r\n```{\"content\": \"Current\
          \ weather in Paris is:\\n\\n- Temperature: 39\\u00b0 F / 4\\u00b0 C\\n-\
          \ Weather: Cloudy with Light Rain\\n\\nTo get a more detailed forecast,\
          \ you can use the function `get_current_weather` and provide the location\
          \ as `Paris, France`. \\nYou can also specify the unit of temperature in\
          \ either Celsius or Fahrenheit.\\n\\nIf you want to know more about the\
          \ weather and climate in Paris, you can check out some\r\n"
        updatedAt: '2023-11-20T21:42:33.983Z'
      numEdits: 0
      reactions: []
    id: 655bd2c9f97967fef4129b47
    type: comment
  author: sashokbg
  content: "Hello, I managed to run your model on CPU by converting and quantizing\
    \ to 4 bits using llama.cpp\r\nhttps://github.com/ggerganov/llama.cpp\r\n\r\n\
    I have the following prompt loaded, but the answers do not seem to be very precise.\
    \  Any idea on how to improve ?\r\n\r\n./main -m ../invoker-13b/ggml-model-q4_0.gguf\
    \ -n 128 -f functions.txt\r\n\r\nAvailable Functions:\r\n```json\r\n        {\r\
    \n          \"name\": \"get_current_weather\",\r\n          \"description\": \"\
    Get the current weather in a given location\",\r\n          \"parameters\": {\r\
    \n            \"type\": \"object\",\r\n            \"properties\": {\r\n     \
    \         \"location\": {\r\n                \"type\": \"string\",\r\n       \
    \         \"description\": \"The city and state, e.g. San Francisco, CA\"\r\n\
    \              },\r\n              \"unit\": {\r\n                \"type\": \"\
    string\",\r\n                \"enum\": [\"celsius\", \"fahrenheit\"]\r\n     \
    \         }\r\n            },\r\n            \"required\": [\"location\"]\r\n\
    \          }\r\n        }\r\n```\r\n```json\r\n        {\r\n            \"name\"\
    : \"get_time\",\r\n            \"description\": \"Get the current time\",\r\n\
    \            \"parameters\": {\r\n                \"type\": \"object\",\r\n  \
    \              \"properties\": {\r\n                    \"location\": {\r\n  \
    \                      \"type\": \"string\",\r\n                        \"description\"\
    : \"The city and state, e.g. New York City, NY\"\r\n                    },\r\n\
    \                    \"format\": {\r\n                    \"type\": \"string\"\
    ,\r\n                    \"enum\": [\"12-hour\", \"24-hour\"]\r\n            \
    \        }\r\n                },\r\n                \"required\": [\"location\"\
    ]\r\n            }\r\n        }\r\n```\r\n\r\nA chat between a curious user and\
    \ an artificial intelligence assistant. The assistant gives helpful, detailed,\
    \ and polite answers to the user's questions. The assistant calls functions with\
    \ appropriate input when necessary.\r\n\r\nUSER: We are going on a vacation in\
    \ Paris, France, maybe we should take an umbrella ?\r\nASSISTANT:\r\n\r\nFirst\
    \ attempt:\r\n```{\"content\": \"That sounds like a great idea! I recommend using\
    \ my `get_current_weather` function to check the weather forecast for Paris. You\
    \ can specify the city and state as \\\"Paris, FR\\\" and the unit as \\\"celsius\\\
    \". The response will include information on whether it is likely to rain or not\
    \ during your stay.\", \"function_call\": null}``` [end of text]\r\n\r\nSecond\
    \ attempt:\r\n\r\n```{\"content\": \"Current weather in Paris is:\\n\\n- Temperature:\
    \ 39\\u00b0 F / 4\\u00b0 C\\n- Weather: Cloudy with Light Rain\\n\\nTo get a more\
    \ detailed forecast, you can use the function `get_current_weather` and provide\
    \ the location as `Paris, France`. \\nYou can also specify the unit of temperature\
    \ in either Celsius or Fahrenheit.\\n\\nIf you want to know more about the weather\
    \ and climate in Paris, you can check out some\r\n"
  created_at: 2023-11-20 21:42:33+00:00
  edited: false
  hidden: false
  id: 655bd2c9f97967fef4129b47
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b73c152f5a966b972a97cd/fhWH_JrS-TkRQbV8_UqR5.jpeg?w=200&h=200&f=face
      fullname: Jeffrey Fong
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: jeffrey-fong
      type: user
    createdAt: '2023-11-21T02:45:12.000Z'
    data:
      edited: false
      editors:
      - jeffrey-fong
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9317909479141235
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/64b73c152f5a966b972a97cd/fhWH_JrS-TkRQbV8_UqR5.jpeg?w=200&h=200&f=face
          fullname: Jeffrey Fong
          isHf: false
          isPro: false
          name: jeffrey-fong
          type: user
        html: '<p>Hi, I believe that the model was kinda overfitted to the style of
          query ("Can you...", etc.) in the data from ToolBench (I only used ToolBench''s
          function-calling data in the training data for Invoker). Thus, it may not
          be able to work well with other query styles. To improve this, we will need
          to include more diverse function-calling/tool-use data into training.</p>

          <p>Actually, I have stopped maintaining this project and I would like to
          recommend another great function-calling chat model (I''m part of the team/org
          working on it) if you are interested in trying out. It is finetuned on much
          more diverse data than Invoker and also on better pretrained model like
          Mistral.</p>

          <p><a rel="nofollow" href="https://github.com/MeetKai/functionary">https://github.com/MeetKai/functionary</a><br><a
          href="https://huggingface.co/meetkai/functionary-7b-v1.1">https://huggingface.co/meetkai/functionary-7b-v1.1</a></p>

          '
        raw: 'Hi, I believe that the model was kinda overfitted to the style of query
          ("Can you...", etc.) in the data from ToolBench (I only used ToolBench''s
          function-calling data in the training data for Invoker). Thus, it may not
          be able to work well with other query styles. To improve this, we will need
          to include more diverse function-calling/tool-use data into training.


          Actually, I have stopped maintaining this project and I would like to recommend
          another great function-calling chat model (I''m part of the team/org working
          on it) if you are interested in trying out. It is finetuned on much more
          diverse data than Invoker and also on better pretrained model like Mistral.


          https://github.com/MeetKai/functionary

          https://huggingface.co/meetkai/functionary-7b-v1.1'
        updatedAt: '2023-11-21T02:45:12.893Z'
      numEdits: 0
      reactions: []
    id: 655c19b813309a611b9eda25
    type: comment
  author: jeffrey-fong
  content: 'Hi, I believe that the model was kinda overfitted to the style of query
    ("Can you...", etc.) in the data from ToolBench (I only used ToolBench''s function-calling
    data in the training data for Invoker). Thus, it may not be able to work well
    with other query styles. To improve this, we will need to include more diverse
    function-calling/tool-use data into training.


    Actually, I have stopped maintaining this project and I would like to recommend
    another great function-calling chat model (I''m part of the team/org working on
    it) if you are interested in trying out. It is finetuned on much more diverse
    data than Invoker and also on better pretrained model like Mistral.


    https://github.com/MeetKai/functionary

    https://huggingface.co/meetkai/functionary-7b-v1.1'
  created_at: 2023-11-21 02:45:12+00:00
  edited: false
  hidden: false
  id: 655c19b813309a611b9eda25
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/4620f0e8dd2934490ecd5cfc0f6e3942.svg
      fullname: Aleksandar KIRILOV
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sashokbg
      type: user
    createdAt: '2023-11-21T08:32:58.000Z'
    data:
      edited: false
      editors:
      - sashokbg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9749795794487
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/4620f0e8dd2934490ecd5cfc0f6e3942.svg
          fullname: Aleksandar KIRILOV
          isHf: false
          isPro: false
          name: sashokbg
          type: user
        html: "<p>Hello <span data-props=\"{&quot;user&quot;:&quot;jeffrey-fong&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/jeffrey-fong\"\
          >@<span class=\"underline\">jeffrey-fong</span></a></span>\n\n\t</span></span>\
          \ thank you for your prompt answer.</p>\n<p>I will try the the query style\
          \ you refer to and I will check at the project as soon as I get some free\
          \ time. :)<br>Thank you !</p>\n"
        raw: 'Hello @jeffrey-fong thank you for your prompt answer.


          I will try the the query style you refer to and I will check at the project
          as soon as I get some free time. :)

          Thank you !'
        updatedAt: '2023-11-21T08:32:58.928Z'
      numEdits: 0
      reactions: []
      relatedEventId: 655c6b3a60b44278af768876
    id: 655c6b3a60b44278af768874
    type: comment
  author: sashokbg
  content: 'Hello @jeffrey-fong thank you for your prompt answer.


    I will try the the query style you refer to and I will check at the project as
    soon as I get some free time. :)

    Thank you !'
  created_at: 2023-11-21 08:32:58+00:00
  edited: false
  hidden: false
  id: 655c6b3a60b44278af768874
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/4620f0e8dd2934490ecd5cfc0f6e3942.svg
      fullname: Aleksandar KIRILOV
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sashokbg
      type: user
    createdAt: '2023-11-21T08:32:58.000Z'
    data:
      status: closed
    id: 655c6b3a60b44278af768876
    type: status-change
  author: sashokbg
  created_at: 2023-11-21 08:32:58+00:00
  id: 655c6b3a60b44278af768876
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: jeffrey-fong/invoker-13b
repo_type: model
status: closed
target_branch: null
title: Inference Quality
