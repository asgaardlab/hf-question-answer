!!python/object:huggingface_hub.community.DiscussionWithDetails
author: toughhou
conflicting_files: null
created_at: 2023-06-03 12:01:44+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/01def020e92e558e7173e959a7711b39.svg
      fullname: Tough HOU
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: toughhou
      type: user
    createdAt: '2023-06-03T13:01:44.000Z'
    data:
      edited: false
      editors:
      - toughhou
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9499803185462952
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/01def020e92e558e7173e959a7711b39.svg
          fullname: Tough HOU
          isHf: false
          isPro: false
          name: toughhou
          type: user
        html: '<p>Hi, here I have some confusion about the tuning</p>

          <ol>

          <li>what''s the size of the Instruction data?  It is about 67%, much larger
          than the pre-train data, especially compared with other LLMs. </li>

          <li>is there any difference between the instruction data training and pre-train
          data training, or just treat all the examples equally?</li>

          <li>is there any module like multi-task finetuning mentioned in the paper?</li>

          <li>usually the pre-train data is far larger than the instruction data,
          but here it''s about 67%. How to make sure the instruction data is high-quality
          when using self-instruct and self-qa?</li>

          </ol>

          '
        raw: "Hi, here I have some confusion about the tuning\r\n\r\n1. what's the\
          \ size of the Instruction data?  It is about 67%, much larger than the pre-train\
          \ data, especially compared with other LLMs. \r\n2. is there any difference\
          \ between the instruction data training and pre-train data training, or\
          \ just treat all the examples equally?\r\n3. is there any module like multi-task\
          \ finetuning mentioned in the paper?\r\n4. usually the pre-train data is\
          \ far larger than the instruction data, but here it's about 67%. How to\
          \ make sure the instruction data is high-quality when using self-instruct\
          \ and self-qa?"
        updatedAt: '2023-06-03T13:01:44.847Z'
      numEdits: 0
      reactions: []
    id: 647b39b8f8df36a726d40514
    type: comment
  author: toughhou
  content: "Hi, here I have some confusion about the tuning\r\n\r\n1. what's the size\
    \ of the Instruction data?  It is about 67%, much larger than the pre-train data,\
    \ especially compared with other LLMs. \r\n2. is there any difference between\
    \ the instruction data training and pre-train data training, or just treat all\
    \ the examples equally?\r\n3. is there any module like multi-task finetuning mentioned\
    \ in the paper?\r\n4. usually the pre-train data is far larger than the instruction\
    \ data, but here it's about 67%. How to make sure the instruction data is high-quality\
    \ when using self-instruct and self-qa?"
  created_at: 2023-06-03 12:01:44+00:00
  edited: false
  hidden: false
  id: 647b39b8f8df36a726d40514
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 6
repo_id: xyz-nlp/XuanYuan2.0
repo_type: model
status: open
target_branch: null
title: Why Hybrid-tuning works
