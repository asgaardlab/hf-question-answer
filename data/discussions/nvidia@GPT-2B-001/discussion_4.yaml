!!python/object:huggingface_hub.community.DiscussionWithDetails
author: lizelive
conflicting_files: null
created_at: 2023-05-04 07:02:58+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661326769282-noauth.png?w=200&h=200&f=face
      fullname: Lize Live
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: lizelive
      type: user
    createdAt: '2023-05-04T08:02:58.000Z'
    data:
      edited: false
      editors:
      - lizelive
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661326769282-noauth.png?w=200&h=200&f=face
          fullname: Lize Live
          isHf: false
          isPro: false
          name: lizelive
          type: user
        html: "<p>using the image <code>nvcr.io/nvidia/nemo:23.02</code><br>4090<br>start\
          \ server with<br><code>python /workspace/nemo/examples/nlp/language_modeling/megatron_gpt_eval.py\
          \ gpt_model_file=GPT-2B-001_bf16_tp1.nemo trainer.precision=bf16 server=True\
          \ tensor_model_parallel_size=1 trainer.devices=1</code><br>run unmodified\
          \ sample code</p>\n<pre><code class=\"language-python\"><span class=\"hljs-keyword\"\
          >import</span> json\n<span class=\"hljs-keyword\">import</span> requests\n\
          \nport_num = <span class=\"hljs-number\">5555</span>\nheaders = {<span class=\"\
          hljs-string\">\"Content-Type\"</span>: <span class=\"hljs-string\">\"application/json\"\
          </span>}\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\
          \ function_\">request_data</span>(<span class=\"hljs-params\">data</span>):\n\
          \    resp = requests.put(<span class=\"hljs-string\">'http://localhost:{}/generate'</span>.<span\
          \ class=\"hljs-built_in\">format</span>(port_num),\n                   \
          \     data=json.dumps(data),\n                        headers=headers)\n\
          \    sentences = resp.json()[<span class=\"hljs-string\">'sentences'</span>]\n\
          \    <span class=\"hljs-keyword\">return</span> sentences\n\n\ndata = {\n\
          \    <span class=\"hljs-string\">\"sentences\"</span>: [<span class=\"hljs-string\"\
          >\"Tell me an interesting fact about space travel.\"</span>]*<span class=\"\
          hljs-number\">1</span>,\n    <span class=\"hljs-string\">\"tokens_to_generate\"\
          </span>: <span class=\"hljs-number\">50</span>,\n    <span class=\"hljs-string\"\
          >\"temperature\"</span>: <span class=\"hljs-number\">1.0</span>,\n    <span\
          \ class=\"hljs-string\">\"add_BOS\"</span>: <span class=\"hljs-literal\"\
          >True</span>,\n    <span class=\"hljs-string\">\"top_k\"</span>: <span class=\"\
          hljs-number\">0</span>,\n    <span class=\"hljs-string\">\"top_p\"</span>:\
          \ <span class=\"hljs-number\">0.9</span>,\n    <span class=\"hljs-string\"\
          >\"greedy\"</span>: <span class=\"hljs-literal\">False</span>,\n    <span\
          \ class=\"hljs-string\">\"all_probs\"</span>: <span class=\"hljs-literal\"\
          >False</span>,\n    <span class=\"hljs-string\">\"repetition_penalty\"</span>:\
          \ <span class=\"hljs-number\">1.2</span>,\n    <span class=\"hljs-string\"\
          >\"min_tokens_to_generate\"</span>: <span class=\"hljs-number\">2</span>,\n\
          }\n\nsentences = request_data(data)\n<span class=\"hljs-built_in\">print</span>(sentences[<span\
          \ class=\"hljs-number\">0</span>])\n</code></pre>\n<blockquote>\n<p>Tell\
          \ me an interesting fact about space travel. My version of health. A method\
          \ of therapy for gonorrhoea by a man. A man presented with this complaint\
          \ of \"despair for me for a man for a man with gonorrhea. I presented to\
          \ a man with gonoragia. My man</p>\n</blockquote>\n"
        raw: "using the image `nvcr.io/nvidia/nemo:23.02`\r\n4090\r\nstart server\
          \ with\r\n`python /workspace/nemo/examples/nlp/language_modeling/megatron_gpt_eval.py\
          \ gpt_model_file=GPT-2B-001_bf16_tp1.nemo trainer.precision=bf16 server=True\
          \ tensor_model_parallel_size=1 trainer.devices=1`\r\nrun unmodified sample\
          \ code\r\n```python\r\nimport json\r\nimport requests\r\n\r\nport_num =\
          \ 5555\r\nheaders = {\"Content-Type\": \"application/json\"}\r\n\r\ndef\
          \ request_data(data):\r\n    resp = requests.put('http://localhost:{}/generate'.format(port_num),\r\
          \n                        data=json.dumps(data),\r\n                   \
          \     headers=headers)\r\n    sentences = resp.json()['sentences']\r\n \
          \   return sentences\r\n\r\n\r\ndata = {\r\n    \"sentences\": [\"Tell me\
          \ an interesting fact about space travel.\"]*1,\r\n    \"tokens_to_generate\"\
          : 50,\r\n    \"temperature\": 1.0,\r\n    \"add_BOS\": True,\r\n    \"top_k\"\
          : 0,\r\n    \"top_p\": 0.9,\r\n    \"greedy\": False,\r\n    \"all_probs\"\
          : False,\r\n    \"repetition_penalty\": 1.2,\r\n    \"min_tokens_to_generate\"\
          : 2,\r\n}\r\n\r\nsentences = request_data(data)\r\nprint(sentences[0])\r\
          \n```\r\n\r\n> Tell me an interesting fact about space travel. My version\
          \ of health. A method of therapy for gonorrhoea by a man. A man presented\
          \ with this complaint of \"despair for me for a man for a man with gonorrhea.\
          \ I presented to a man with gonoragia. My man"
        updatedAt: '2023-05-04T08:02:58.042Z'
      numEdits: 0
      reactions:
      - count: 3
        reaction: "\U0001F614"
        users:
        - lizelive
        - evantill
        - dataplayer12
      - count: 1
        reaction: "\u2764\uFE0F"
        users:
        - evantill
    id: 645366b25fe43f8f67477c4f
    type: comment
  author: lizelive
  content: "using the image `nvcr.io/nvidia/nemo:23.02`\r\n4090\r\nstart server with\r\
    \n`python /workspace/nemo/examples/nlp/language_modeling/megatron_gpt_eval.py\
    \ gpt_model_file=GPT-2B-001_bf16_tp1.nemo trainer.precision=bf16 server=True tensor_model_parallel_size=1\
    \ trainer.devices=1`\r\nrun unmodified sample code\r\n```python\r\nimport json\r\
    \nimport requests\r\n\r\nport_num = 5555\r\nheaders = {\"Content-Type\": \"application/json\"\
    }\r\n\r\ndef request_data(data):\r\n    resp = requests.put('http://localhost:{}/generate'.format(port_num),\r\
    \n                        data=json.dumps(data),\r\n                        headers=headers)\r\
    \n    sentences = resp.json()['sentences']\r\n    return sentences\r\n\r\n\r\n\
    data = {\r\n    \"sentences\": [\"Tell me an interesting fact about space travel.\"\
    ]*1,\r\n    \"tokens_to_generate\": 50,\r\n    \"temperature\": 1.0,\r\n    \"\
    add_BOS\": True,\r\n    \"top_k\": 0,\r\n    \"top_p\": 0.9,\r\n    \"greedy\"\
    : False,\r\n    \"all_probs\": False,\r\n    \"repetition_penalty\": 1.2,\r\n\
    \    \"min_tokens_to_generate\": 2,\r\n}\r\n\r\nsentences = request_data(data)\r\
    \nprint(sentences[0])\r\n```\r\n\r\n> Tell me an interesting fact about space\
    \ travel. My version of health. A method of therapy for gonorrhoea by a man. A\
    \ man presented with this complaint of \"despair for me for a man for a man with\
    \ gonorrhea. I presented to a man with gonoragia. My man"
  created_at: 2023-05-04 07:02:58+00:00
  edited: false
  hidden: false
  id: 645366b25fe43f8f67477c4f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/f2fa0944081ed996c31f648eae065f32.svg
      fullname: Jaiyam Sharma
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dataplayer12
      type: user
    createdAt: '2023-05-08T09:34:14.000Z'
    data:
      edited: false
      editors:
      - dataplayer12
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/f2fa0944081ed996c31f648eae065f32.svg
          fullname: Jaiyam Sharma
          isHf: false
          isPro: false
          name: dataplayer12
          type: user
        html: '<p>Nothing wrong with your setup. The model is just not good out of
          the box. Needs finetuning with RLHF.</p>

          '
        raw: Nothing wrong with your setup. The model is just not good out of the
          box. Needs finetuning with RLHF.
        updatedAt: '2023-05-08T09:34:14.341Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - georey
    id: 6458c216f92601affa2b19fe
    type: comment
  author: dataplayer12
  content: Nothing wrong with your setup. The model is just not good out of the box.
    Needs finetuning with RLHF.
  created_at: 2023-05-08 08:34:14+00:00
  edited: false
  hidden: false
  id: 6458c216f92601affa2b19fe
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: nvidia/GPT-2B-001
repo_type: model
status: open
target_branch: null
title: gibberish on  4090
