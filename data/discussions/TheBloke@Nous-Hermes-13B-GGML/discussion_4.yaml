!!python/object:huggingface_hub.community.DiscussionWithDetails
author: nicoleds
conflicting_files: null
created_at: 2023-08-17 02:17:09+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/7622c1e940db9d5cfb4ae599c608d5c8.svg
      fullname: Nicole
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nicoleds
      type: user
    createdAt: '2023-08-17T03:17:09.000Z'
    data:
      edited: false
      editors:
      - nicoleds
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5767849087715149
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/7622c1e940db9d5cfb4ae599c608d5c8.svg
          fullname: Nicole
          isHf: false
          isPro: false
          name: nicoleds
          type: user
        html: '<p>Using the code below to do question answering based on pdf:</p>

          <p>from ctransformers.langchain import CTransformers<br>from langchain.callbacks.streaming_stdout
          import StreamingStdOutCallbackHandler<br>model_path = ''/path/model/nous-hermes-13b.ggmlv3.q4_0.bin''<br>model_type
          = "llama"<br>llm = CTransformers(model= model_path, model_type = model_type,
          callbacks=[StreamingStdOutCallbackHandler()])<br>chain = RetrievalQA.from_chain_type(llm=llm,
          chain_type="stuff", retriever=retriever, return_source_documents=True,verbose=True)<br>result
          = chain({"query": query})</p>

          <p>Answer returned:<br> I don''s:I don''s: I don''s: I don''s: I don''s:
          I don''s: I don''s: I don''s: I don''s: I don''s: I don''s: I don''s:</p>

          <p>Any idea why? ;(</p>

          '
        raw: "Using the code below to do question answering based on pdf:\r\n\r\n\
          from ctransformers.langchain import CTransformers\r\nfrom langchain.callbacks.streaming_stdout\
          \ import StreamingStdOutCallbackHandler  \r\nmodel_path = '/path/model/nous-hermes-13b.ggmlv3.q4_0.bin'\r\
          \nmodel_type = \"llama\"\r\nllm = CTransformers(model= model_path, model_type\
          \ = model_type, callbacks=[StreamingStdOutCallbackHandler()])\r\nchain =\
          \ RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=retriever,\
          \ return_source_documents=True,verbose=True)\r\nresult = chain({\"query\"\
          : query})\r\n\r\nAnswer returned:\r\n I don's:I don's: I don's: I don's:\
          \ I don's: I don's: I don's: I don's: I don's: I don's: I don's: I don's:\r\
          \n\r\nAny idea why? ;("
        updatedAt: '2023-08-17T03:17:09.025Z'
      numEdits: 0
      reactions: []
    id: 64dd913567e9edf6cfa2be24
    type: comment
  author: nicoleds
  content: "Using the code below to do question answering based on pdf:\r\n\r\nfrom\
    \ ctransformers.langchain import CTransformers\r\nfrom langchain.callbacks.streaming_stdout\
    \ import StreamingStdOutCallbackHandler  \r\nmodel_path = '/path/model/nous-hermes-13b.ggmlv3.q4_0.bin'\r\
    \nmodel_type = \"llama\"\r\nllm = CTransformers(model= model_path, model_type\
    \ = model_type, callbacks=[StreamingStdOutCallbackHandler()])\r\nchain = RetrievalQA.from_chain_type(llm=llm,\
    \ chain_type=\"stuff\", retriever=retriever, return_source_documents=True,verbose=True)\r\
    \nresult = chain({\"query\": query})\r\n\r\nAnswer returned:\r\n I don's:I don's:\
    \ I don's: I don's: I don's: I don's: I don's: I don's: I don's: I don's: I don's:\
    \ I don's:\r\n\r\nAny idea why? ;("
  created_at: 2023-08-17 02:17:09+00:00
  edited: false
  hidden: false
  id: 64dd913567e9edf6cfa2be24
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: TheBloke/Nous-Hermes-13B-GGML
repo_type: model
status: open
target_branch: null
title: Model returning gibberish for question answering based on own document
