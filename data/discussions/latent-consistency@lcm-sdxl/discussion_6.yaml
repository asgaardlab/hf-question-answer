!!python/object:huggingface_hub.community.DiscussionWithDetails
author: lyosha
conflicting_files: null
created_at: 2023-11-13 18:09:12+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/05afc85633b66558d6b41eb05c980647.svg
      fullname: Alexey Popov
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: lyosha
      type: user
    createdAt: '2023-11-13T18:09:12.000Z'
    data:
      edited: false
      editors:
      - lyosha
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8136730194091797
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/05afc85633b66558d6b41eb05c980647.svg
          fullname: Alexey Popov
          isHf: false
          isPro: false
          name: lyosha
          type: user
        html: '<p>Hey everyone!<br>So I tried to adapt the example for image2image
          (<a href="https://huggingface.co/docs/diffusers/using-diffusers/img2img">https://huggingface.co/docs/diffusers/using-diffusers/img2img</a>)
          to this model, but no luck so far. It looks like the <code>AutoPipelineForImage2Image</code>
          wants to see a <code>model_index.json</code> that doesn''t exist here? Sorry
          if it''s a too much of a newbie question. Here''s the error too<br><a rel="nofollow"
          href="https://cdn-uploads.huggingface.co/production/uploads/6303b4435c70c21d0ea9b534/ViCB4_vh31ajH0ZIZk8Jo.png"><img
          alt="image.png" src="https://cdn-uploads.huggingface.co/production/uploads/6303b4435c70c21d0ea9b534/ViCB4_vh31ajH0ZIZk8Jo.png"></a></p>

          '
        raw: "Hey everyone!\r\nSo I tried to adapt the example for image2image (https://huggingface.co/docs/diffusers/using-diffusers/img2img)\
          \ to this model, but no luck so far. It looks like the `AutoPipelineForImage2Image`\
          \ wants to see a `model_index.json` that doesn't exist here? Sorry if it's\
          \ a too much of a newbie question. Here's the error too\r\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6303b4435c70c21d0ea9b534/ViCB4_vh31ajH0ZIZk8Jo.png)\r\
          \n\r\n"
        updatedAt: '2023-11-13T18:09:12.964Z'
      numEdits: 0
      reactions: []
    id: 65526648f3625761c0ff1c29
    type: comment
  author: lyosha
  content: "Hey everyone!\r\nSo I tried to adapt the example for image2image (https://huggingface.co/docs/diffusers/using-diffusers/img2img)\
    \ to this model, but no luck so far. It looks like the `AutoPipelineForImage2Image`\
    \ wants to see a `model_index.json` that doesn't exist here? Sorry if it's a too\
    \ much of a newbie question. Here's the error too\r\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6303b4435c70c21d0ea9b534/ViCB4_vh31ajH0ZIZk8Jo.png)\r\
    \n\r\n"
  created_at: 2023-11-13 18:09:12+00:00
  edited: false
  hidden: false
  id: 65526648f3625761c0ff1c29
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2024-01-16T23:11:02.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9363733530044556
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;lyosha&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/lyosha\">@<span class=\"\
          underline\">lyosha</span></a></span>\n\n\t</span></span> you find a solution\
          \ to this?</p>\n"
        raw: '@lyosha you find a solution to this?'
        updatedAt: '2024-01-16T23:11:02.085Z'
      numEdits: 0
      reactions: []
    id: 65a70d065fe6413360124993
    type: comment
  author: spejamas
  content: '@lyosha you find a solution to this?'
  created_at: 2024-01-16 23:11:02+00:00
  edited: false
  hidden: false
  id: 65a70d065fe6413360124993
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d0b407e56ec2c8bdd945afcb349a61fe.svg
      fullname: David Burnett
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Vargol
      type: user
    createdAt: '2024-01-17T07:11:37.000Z'
    data:
      edited: true
      editors:
      - Vargol
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6032405495643616
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d0b407e56ec2c8bdd945afcb349a61fe.svg
          fullname: David Burnett
          isHf: false
          isPro: false
          name: Vargol
          type: user
        html: '<p>This isn''t a full model , it''s only a unet.</p>

          <p>Try something like...</p>

          <p>unet = UNet2DConditionModel.from_pretrained("latent-consistency/lcm-sdxl",
          torch_dtype=torch.float16, variant="fp16")<br>pipe = AutoPipelineForImage2Image.from_pretrained("stabilityai/stable-diffusion-xl-base-1.0",
          unet=unet, torch_dtype=torch.float16, variant="fp16")</p>

          <p>Note I haven''t tested this or even checked it for syntax.</p>

          <p>Alternatively I "frankensteined" a full model at Vargol/lcm_sdxl_full_model</p>

          '
        raw: 'This isn''t a full model , it''s only a unet.


          Try something like...


          unet = UNet2DConditionModel.from_pretrained("latent-consistency/lcm-sdxl",
          torch_dtype=torch.float16, variant="fp16")

          pipe = AutoPipelineForImage2Image.from_pretrained("stabilityai/stable-diffusion-xl-base-1.0",
          unet=unet, torch_dtype=torch.float16, variant="fp16")


          Note I haven''t tested this or even checked it for syntax.


          Alternatively I "frankensteined" a full model at Vargol/lcm_sdxl_full_model

          '
        updatedAt: '2024-01-17T07:13:57.599Z'
      numEdits: 1
      reactions:
      - count: 1
        reaction: "\U0001F91D"
        users:
        - spejamas
    id: 65a77da93bb0e70b41bf0f55
    type: comment
  author: Vargol
  content: 'This isn''t a full model , it''s only a unet.


    Try something like...


    unet = UNet2DConditionModel.from_pretrained("latent-consistency/lcm-sdxl", torch_dtype=torch.float16,
    variant="fp16")

    pipe = AutoPipelineForImage2Image.from_pretrained("stabilityai/stable-diffusion-xl-base-1.0",
    unet=unet, torch_dtype=torch.float16, variant="fp16")


    Note I haven''t tested this or even checked it for syntax.


    Alternatively I "frankensteined" a full model at Vargol/lcm_sdxl_full_model

    '
  created_at: 2024-01-17 07:11:37+00:00
  edited: true
  hidden: false
  id: 65a77da93bb0e70b41bf0f55
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 6
repo_id: latent-consistency/lcm-sdxl
repo_type: model
status: open
target_branch: null
title: Image2image doesn't seem to work?
