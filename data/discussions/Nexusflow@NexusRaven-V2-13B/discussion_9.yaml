!!python/object:huggingface_hub.community.DiscussionWithDetails
author: mghafiri
conflicting_files: null
created_at: 2023-12-19 14:47:51+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/7e7f2ae0501dfc1ca59bd664a70fe234.svg
      fullname: GHAFIRI
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mghafiri
      type: user
    createdAt: '2023-12-19T14:47:51.000Z'
    data:
      edited: true
      editors:
      - mghafiri
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9025639891624451
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/7e7f2ae0501dfc1ca59bd664a70fe234.svg
          fullname: GHAFIRI
          isHf: false
          isPro: false
          name: mghafiri
          type: user
        html: '<p>Hello;</p>

          <p>The Model is working so perfectly for function calling with Pythonic
          method definition :)</p>

          <p>Just wondering if the model could be fine tuned to make REST API calls
          from OpenAPI json definition.</p>

          <p>I think one approach is to define Pythonic methods for API calls and
          use this model as it is, but just asking if there is any plan for a native
          Rest LLM model.</p>

          <p>Thanks again :)</p>

          <p>By the way I used that model for a prototype application here: <a rel="nofollow"
          href="https://github.com/mourad-ghafiri/OpenMindedChatbot">https://github.com/mourad-ghafiri/OpenMindedChatbot</a></p>

          '
        raw: 'Hello;


          The Model is working so perfectly for function calling with Pythonic method
          definition :)


          Just wondering if the model could be fine tuned to make REST API calls from
          OpenAPI json definition.


          I think one approach is to define Pythonic methods for API calls and use
          this model as it is, but just asking if there is any plan for a native Rest
          LLM model.


          Thanks again :)


          By the way I used that model for a prototype application here: https://github.com/mourad-ghafiri/OpenMindedChatbot'
        updatedAt: '2023-12-19T21:02:02.856Z'
      numEdits: 1
      reactions: []
    id: 6581ad174466994ea8484997
    type: comment
  author: mghafiri
  content: 'Hello;


    The Model is working so perfectly for function calling with Pythonic method definition
    :)


    Just wondering if the model could be fine tuned to make REST API calls from OpenAPI
    json definition.


    I think one approach is to define Pythonic methods for API calls and use this
    model as it is, but just asking if there is any plan for a native Rest LLM model.


    Thanks again :)


    By the way I used that model for a prototype application here: https://github.com/mourad-ghafiri/OpenMindedChatbot'
  created_at: 2023-12-19 14:47:51+00:00
  edited: true
  hidden: false
  id: 6581ad174466994ea8484997
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/7e7f2ae0501dfc1ca59bd664a70fe234.svg
      fullname: GHAFIRI
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mghafiri
      type: user
    createdAt: '2023-12-19T21:01:54.000Z'
    data:
      from: Is there any plan for Rest API call from OpenAI spec
      to: Is there any plan for Rest API call from OpenAPI spec
    id: 658204c2f563e9e971c7dff7
    type: title-change
  author: mghafiri
  created_at: 2023-12-19 21:01:54+00:00
  id: 658204c2f563e9e971c7dff7
  new_title: Is there any plan for Rest API call from OpenAPI spec
  old_title: Is there any plan for Rest API call from OpenAI spec
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d2aa2af71b8dd66f7633776ef8ebc212.svg
      fullname: Venkat Srinivasan
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: venkat-srinivasan-nexusflow
      type: user
    createdAt: '2023-12-21T22:51:57.000Z'
    data:
      edited: false
      editors:
      - venkat-srinivasan-nexusflow
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8704378008842468
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d2aa2af71b8dd66f7633776ef8ebc212.svg
          fullname: Venkat Srinivasan
          isHf: false
          isPro: false
          name: venkat-srinivasan-nexusflow
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;mghafiri&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/mghafiri\"\
          >@<span class=\"underline\">mghafiri</span></a></span>\n\n\t</span></span>,</p>\n\
          <p>Apologies for the late message. Thank you so much for your pointer to\
          \ your application -- it looks fantastic! It is so great to see Raven being\
          \ used for such cool applications!</p>\n<p>We released a package that might\
          \ be helpful for OpenAI spec that automatically converts the calls into\
          \ a Raven compatible call and vice versa. Would this work for your use case?\
          \ <a rel=\"nofollow\" href=\"https://pypi.org/project/nexusraven/\">https://pypi.org/project/nexusraven/</a></p>\n"
        raw: 'Hi @mghafiri,


          Apologies for the late message. Thank you so much for your pointer to your
          application -- it looks fantastic! It is so great to see Raven being used
          for such cool applications!


          We released a package that might be helpful for OpenAI spec that automatically
          converts the calls into a Raven compatible call and vice versa. Would this
          work for your use case? https://pypi.org/project/nexusraven/'
        updatedAt: '2023-12-21T22:51:57.550Z'
      numEdits: 0
      reactions: []
    id: 6584c18debd17631e98b215a
    type: comment
  author: venkat-srinivasan-nexusflow
  content: 'Hi @mghafiri,


    Apologies for the late message. Thank you so much for your pointer to your application
    -- it looks fantastic! It is so great to see Raven being used for such cool applications!


    We released a package that might be helpful for OpenAI spec that automatically
    converts the calls into a Raven compatible call and vice versa. Would this work
    for your use case? https://pypi.org/project/nexusraven/'
  created_at: 2023-12-21 22:51:57+00:00
  edited: false
  hidden: false
  id: 6584c18debd17631e98b215a
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 9
repo_id: Nexusflow/NexusRaven-V2-13B
repo_type: model
status: open
target_branch: null
title: Is there any plan for Rest API call from OpenAPI spec
