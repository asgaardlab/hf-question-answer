!!python/object:huggingface_hub.community.DiscussionWithDetails
author: spyroskoun
conflicting_files: null
created_at: 2024-01-05 18:30:11+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/7f5f6f702d9c9af7be7fd5982b6752af.svg
      fullname: Spyros Kounoupidis
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spyroskoun
      type: user
    createdAt: '2024-01-05T18:30:11.000Z'
    data:
      edited: false
      editors:
      - spyroskoun
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9240710139274597
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/7f5f6f702d9c9af7be7fd5982b6752af.svg
          fullname: Spyros Kounoupidis
          isHf: false
          isPro: false
          name: spyroskoun
          type: user
        html: '<p>Hi,</p>

          <p>I''ve used your model through the inference widget of the Hugging Face
          website and programmaticaly through python. When I pass an input I get different
          results. Seems like I''ve got a problem with the model or the tokenization
          when I try it programmatically. Do you know what it coud be?</p>

          <p>Thanks,<br>Spyros</p>

          '
        raw: "Hi,\r\n\r\nI've used your model through the inference widget of the\
          \ Hugging Face website and programmaticaly through python. When I pass an\
          \ input I get different results. Seems like I've got a problem with the\
          \ model or the tokenization when I try it programmatically. Do you know\
          \ what it coud be?\r\n\r\nThanks,\r\nSpyros"
        updatedAt: '2024-01-05T18:30:11.416Z'
      numEdits: 0
      reactions: []
    id: 65984ab3654fe4eb0a563fe5
    type: comment
  author: spyroskoun
  content: "Hi,\r\n\r\nI've used your model through the inference widget of the Hugging\
    \ Face website and programmaticaly through python. When I pass an input I get\
    \ different results. Seems like I've got a problem with the model or the tokenization\
    \ when I try it programmatically. Do you know what it coud be?\r\n\r\nThanks,\r\
    \nSpyros"
  created_at: 2024-01-05 18:30:11+00:00
  edited: false
  hidden: false
  id: 65984ab3654fe4eb0a563fe5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1645350477755-60886725e2b7cc3a117b0dd3.jpeg?w=200&h=200&f=face
      fullname: Dimitris Papaevagelou
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: andefined
      type: user
    createdAt: '2024-01-06T09:23:37.000Z'
    data:
      edited: false
      editors:
      - andefined
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4078809320926666
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1645350477755-60886725e2b7cc3a117b0dd3.jpeg?w=200&h=200&f=face
          fullname: Dimitris Papaevagelou
          isHf: false
          isPro: false
          name: andefined
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;spyroskoun&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/spyroskoun\"\
          >@<span class=\"underline\">spyroskoun</span></a></span>\n\n\t</span></span>,\
          \ I am not sure I can reproduce this issue. I've tried to use an older version\
          \ of <code>transformers==4.19.2</code>and had some differences but I think\
          \ it is due to the <a href=\"https://huggingface.co/docs/transformers/v4.36.1/en/main_classes/pipelines#transformers.TextClassificationPipeline.function_to_apply\"\
          >function_to_apply</a>. Can you share an example +<code>transformers</code>\
          \ version?</p>\n<pre><code class=\"language-py\"><span class=\"hljs-keyword\"\
          >from</span> transformers <span class=\"hljs-keyword\">import</span> pipeline,\
          \ AutoModelForSequenceClassification, AutoTokenizer\n\nMODEL = <span class=\"\
          hljs-string\">\"cvcio/comments-el-toxic\"</span>\ntokenizer = AutoTokenizer.from_pretrained(MODEL)\n\
          model = AutoModelForSequenceClassification.from_pretrained(MODEL)\npipe\
          \ = pipeline(<span class=\"hljs-string\">\"text-classification\"</span>,\
          \ model = model, tokenizer = tokenizer, return_all_scores = <span class=\"\
          hljs-literal\">True</span>)\n\n<span class=\"hljs-comment\"># random [article\
          \ from makeleio](https://www.makeleio.gr/%ce%b5%cf%80%ce%b9%ce%ba%ce%b1%ce%b9%cf%81%ce%bf%cf%84%ce%b7%cf%84%ce%b1/a%cf%85%cf%84%cf%8c-%cf%84%ce%bf-%ce%b1%ce%bd%ce%b4%cf%81%ce%b5%ce%af%ce%ba%ce%b5%ce%bb%ce%bf-%cf%80%ce%bf%cf%85-%ce%bb%ce%ad%ce%b3%ce%b5%cf%84%ce%b1%ce%b9-%ce%a7%cf%81%cf%85%cf%83%ce%bf%cf%87%ce%bf/)</span>\n\
          pipe(<span class=\"hljs-string\">\"A\u03C5\u03C4\u03CC \u03C4\u03BF \u03B1\
          \u03BD\u03B4\u03C1\u03B5\u03AF\u03BA\u03B5\u03BB\u03BF \u03C0\u03BF\u03C5\
          \ \u03BB\u03AD\u03B3\u03B5\u03C4\u03B1\u03B9 \u03A7\u03C1\u03C5\u03C3\u03BF\
          \u03C7\u03BF\u03AF\u03B4\u03B7\u03C2, \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BF\
          \ \u03C5\u03C0\u03BF\u03C5\u03C1\u03B3\u03CC\u03C2 \u03C0\u03BF\u03C5 \u03BC\
          \u03BF\u03C5 \u03B1\u03C6\u03B1\u03AF\u03C1\u03B5\u03C3\u03B5- \u03B5\u03C3\
          \u03BA\u03B5\u03BC\u03BC\u03AD\u03BD\u03B1- \u03C4\u03B7\u03BD \u03B1\u03C3\
          \u03C4\u03C5\u03BD\u03BF\u03BC\u03B9\u03BA\u03AE \u03C6\u03CD\u03BB\u03B1\
          \u03BE\u03B7 \u03BA\u03B1\u03B9 \u03AE\u03C1\u03B8\u03B1\u03BD \u03B3\u03B9\
          \u03B1 \u03BD\u03B1 \u03BC\u03B5 \u03C3\u03BA\u03BF\u03C4\u03CE\u03C3\u03BF\
          \u03C5\u03BD. \u039C\u03B9\u03C7\u03B1\u03BB\u03AC\u03BA\u03B7, \u03BA\u03B1\
          \u03BB\u03CE\u03C2 \u03CC\u03C1\u03B9\u03C3\u03B5\u03C2. \u039A\u03B1\u03B9\
          \ \u03C4\u03CE\u03C1\u03B1 \u03BF\u03B9 \u03B4\u03C5\u03BF \u03BC\u03B1\u03C2\
          , \u03B8\u03C1\u03B1\u03C3\u03CD\u03C4\u03B1\u03C4\u03B5 \u03C0\u03BF\u03BB\
          \u03B9\u03C4\u03B9\u03BA\u03AD \u03B1\u03BB\u03B7\u03C4\u03AC\u03BA\u03BF\
          \"</span>)\n\n<span class=\"hljs-comment\"># will return (same as the inference\
          \ widget)</span>\n[[{<span class=\"hljs-string\">'label'</span>: <span class=\"\
          hljs-string\">'TOXIC'</span>, <span class=\"hljs-string\">'score'</span>:\
          \ <span class=\"hljs-number\">0.7913345098495483</span>}, {<span class=\"\
          hljs-string\">'label'</span>: <span class=\"hljs-string\">'SEVERE_TOXIC'</span>,\
          \ <span class=\"hljs-string\">'score'</span>: <span class=\"hljs-number\"\
          >0.7585222125053406</span>}, {<span class=\"hljs-string\">'label'</span>:\
          \ <span class=\"hljs-string\">'INSULT'</span>, <span class=\"hljs-string\"\
          >'score'</span>: <span class=\"hljs-number\">0.7705711126327515</span>},\
          \ {<span class=\"hljs-string\">'label'</span>: <span class=\"hljs-string\"\
          >'IDENTITY_HATE'</span>, <span class=\"hljs-string\">'score'</span>: <span\
          \ class=\"hljs-number\">0.038777269423007965</span>}]]\n</code></pre>\n"
        raw: "Hi @spyroskoun, I am not sure I can reproduce this issue. I've tried\
          \ to use an older version of `transformers==4.19.2`and had some differences\
          \ but I think it is due to the [function_to_apply](https://huggingface.co/docs/transformers/v4.36.1/en/main_classes/pipelines#transformers.TextClassificationPipeline.function_to_apply).\
          \ Can you share an example +`transformers` version?\n\n```py\nfrom transformers\
          \ import pipeline, AutoModelForSequenceClassification, AutoTokenizer\n\n\
          MODEL = \"cvcio/comments-el-toxic\"\ntokenizer = AutoTokenizer.from_pretrained(MODEL)\n\
          model = AutoModelForSequenceClassification.from_pretrained(MODEL)\npipe\
          \ = pipeline(\"text-classification\", model = model, tokenizer = tokenizer,\
          \ return_all_scores = True)\n\n# random [article from makeleio](https://www.makeleio.gr/%ce%b5%cf%80%ce%b9%ce%ba%ce%b1%ce%b9%cf%81%ce%bf%cf%84%ce%b7%cf%84%ce%b1/a%cf%85%cf%84%cf%8c-%cf%84%ce%bf-%ce%b1%ce%bd%ce%b4%cf%81%ce%b5%ce%af%ce%ba%ce%b5%ce%bb%ce%bf-%cf%80%ce%bf%cf%85-%ce%bb%ce%ad%ce%b3%ce%b5%cf%84%ce%b1%ce%b9-%ce%a7%cf%81%cf%85%cf%83%ce%bf%cf%87%ce%bf/)\n\
          pipe(\"A\u03C5\u03C4\u03CC \u03C4\u03BF \u03B1\u03BD\u03B4\u03C1\u03B5\u03AF\
          \u03BA\u03B5\u03BB\u03BF \u03C0\u03BF\u03C5 \u03BB\u03AD\u03B3\u03B5\u03C4\
          \u03B1\u03B9 \u03A7\u03C1\u03C5\u03C3\u03BF\u03C7\u03BF\u03AF\u03B4\u03B7\
          \u03C2, \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BF \u03C5\u03C0\u03BF\u03C5\u03C1\
          \u03B3\u03CC\u03C2 \u03C0\u03BF\u03C5 \u03BC\u03BF\u03C5 \u03B1\u03C6\u03B1\
          \u03AF\u03C1\u03B5\u03C3\u03B5- \u03B5\u03C3\u03BA\u03B5\u03BC\u03BC\u03AD\
          \u03BD\u03B1- \u03C4\u03B7\u03BD \u03B1\u03C3\u03C4\u03C5\u03BD\u03BF\u03BC\
          \u03B9\u03BA\u03AE \u03C6\u03CD\u03BB\u03B1\u03BE\u03B7 \u03BA\u03B1\u03B9\
          \ \u03AE\u03C1\u03B8\u03B1\u03BD \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BC\u03B5\
          \ \u03C3\u03BA\u03BF\u03C4\u03CE\u03C3\u03BF\u03C5\u03BD. \u039C\u03B9\u03C7\
          \u03B1\u03BB\u03AC\u03BA\u03B7, \u03BA\u03B1\u03BB\u03CE\u03C2 \u03CC\u03C1\
          \u03B9\u03C3\u03B5\u03C2. \u039A\u03B1\u03B9 \u03C4\u03CE\u03C1\u03B1 \u03BF\
          \u03B9 \u03B4\u03C5\u03BF \u03BC\u03B1\u03C2, \u03B8\u03C1\u03B1\u03C3\u03CD\
          \u03C4\u03B1\u03C4\u03B5 \u03C0\u03BF\u03BB\u03B9\u03C4\u03B9\u03BA\u03AD\
          \ \u03B1\u03BB\u03B7\u03C4\u03AC\u03BA\u03BF\")\n\n# will return (same as\
          \ the inference widget)\n[[{'label': 'TOXIC', 'score': 0.7913345098495483},\
          \ {'label': 'SEVERE_TOXIC', 'score': 0.7585222125053406}, {'label': 'INSULT',\
          \ 'score': 0.7705711126327515}, {'label': 'IDENTITY_HATE', 'score': 0.038777269423007965}]]\n\
          ```"
        updatedAt: '2024-01-06T09:23:37.389Z'
      numEdits: 0
      reactions: []
    id: 65991c198c8ac79295d6b749
    type: comment
  author: andefined
  content: "Hi @spyroskoun, I am not sure I can reproduce this issue. I've tried to\
    \ use an older version of `transformers==4.19.2`and had some differences but I\
    \ think it is due to the [function_to_apply](https://huggingface.co/docs/transformers/v4.36.1/en/main_classes/pipelines#transformers.TextClassificationPipeline.function_to_apply).\
    \ Can you share an example +`transformers` version?\n\n```py\nfrom transformers\
    \ import pipeline, AutoModelForSequenceClassification, AutoTokenizer\n\nMODEL\
    \ = \"cvcio/comments-el-toxic\"\ntokenizer = AutoTokenizer.from_pretrained(MODEL)\n\
    model = AutoModelForSequenceClassification.from_pretrained(MODEL)\npipe = pipeline(\"\
    text-classification\", model = model, tokenizer = tokenizer, return_all_scores\
    \ = True)\n\n# random [article from makeleio](https://www.makeleio.gr/%ce%b5%cf%80%ce%b9%ce%ba%ce%b1%ce%b9%cf%81%ce%bf%cf%84%ce%b7%cf%84%ce%b1/a%cf%85%cf%84%cf%8c-%cf%84%ce%bf-%ce%b1%ce%bd%ce%b4%cf%81%ce%b5%ce%af%ce%ba%ce%b5%ce%bb%ce%bf-%cf%80%ce%bf%cf%85-%ce%bb%ce%ad%ce%b3%ce%b5%cf%84%ce%b1%ce%b9-%ce%a7%cf%81%cf%85%cf%83%ce%bf%cf%87%ce%bf/)\n\
    pipe(\"A\u03C5\u03C4\u03CC \u03C4\u03BF \u03B1\u03BD\u03B4\u03C1\u03B5\u03AF\u03BA\
    \u03B5\u03BB\u03BF \u03C0\u03BF\u03C5 \u03BB\u03AD\u03B3\u03B5\u03C4\u03B1\u03B9\
    \ \u03A7\u03C1\u03C5\u03C3\u03BF\u03C7\u03BF\u03AF\u03B4\u03B7\u03C2, \u03B5\u03AF\
    \u03BD\u03B1\u03B9 \u03BF \u03C5\u03C0\u03BF\u03C5\u03C1\u03B3\u03CC\u03C2 \u03C0\
    \u03BF\u03C5 \u03BC\u03BF\u03C5 \u03B1\u03C6\u03B1\u03AF\u03C1\u03B5\u03C3\u03B5\
    - \u03B5\u03C3\u03BA\u03B5\u03BC\u03BC\u03AD\u03BD\u03B1- \u03C4\u03B7\u03BD \u03B1\
    \u03C3\u03C4\u03C5\u03BD\u03BF\u03BC\u03B9\u03BA\u03AE \u03C6\u03CD\u03BB\u03B1\
    \u03BE\u03B7 \u03BA\u03B1\u03B9 \u03AE\u03C1\u03B8\u03B1\u03BD \u03B3\u03B9\u03B1\
    \ \u03BD\u03B1 \u03BC\u03B5 \u03C3\u03BA\u03BF\u03C4\u03CE\u03C3\u03BF\u03C5\u03BD\
    . \u039C\u03B9\u03C7\u03B1\u03BB\u03AC\u03BA\u03B7, \u03BA\u03B1\u03BB\u03CE\u03C2\
    \ \u03CC\u03C1\u03B9\u03C3\u03B5\u03C2. \u039A\u03B1\u03B9 \u03C4\u03CE\u03C1\u03B1\
    \ \u03BF\u03B9 \u03B4\u03C5\u03BF \u03BC\u03B1\u03C2, \u03B8\u03C1\u03B1\u03C3\
    \u03CD\u03C4\u03B1\u03C4\u03B5 \u03C0\u03BF\u03BB\u03B9\u03C4\u03B9\u03BA\u03AD\
    \ \u03B1\u03BB\u03B7\u03C4\u03AC\u03BA\u03BF\")\n\n# will return (same as the\
    \ inference widget)\n[[{'label': 'TOXIC', 'score': 0.7913345098495483}, {'label':\
    \ 'SEVERE_TOXIC', 'score': 0.7585222125053406}, {'label': 'INSULT', 'score': 0.7705711126327515},\
    \ {'label': 'IDENTITY_HATE', 'score': 0.038777269423007965}]]\n```"
  created_at: 2024-01-06 09:23:37+00:00
  edited: false
  hidden: false
  id: 65991c198c8ac79295d6b749
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/7f5f6f702d9c9af7be7fd5982b6752af.svg
      fullname: Spyros Kounoupidis
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spyroskoun
      type: user
    createdAt: '2024-01-06T18:05:02.000Z'
    data:
      edited: false
      editors:
      - spyroskoun
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.959373414516449
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/7f5f6f702d9c9af7be7fd5982b6752af.svg
          fullname: Spyros Kounoupidis
          isHf: false
          isPro: false
          name: spyroskoun
          type: user
        html: '<p>Oh, great! I was using a different way thus getting weird results.
          I am now getting the results I wanted. Thanks!</p>

          '
        raw: Oh, great! I was using a different way thus getting weird results. I
          am now getting the results I wanted. Thanks!
        updatedAt: '2024-01-06T18:05:02.332Z'
      numEdits: 0
      reactions: []
    id: 6599964ef82b15d66313eed6
    type: comment
  author: spyroskoun
  content: Oh, great! I was using a different way thus getting weird results. I am
    now getting the results I wanted. Thanks!
  created_at: 2024-01-06 18:05:02+00:00
  edited: false
  hidden: false
  id: 6599964ef82b15d66313eed6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1645350477755-60886725e2b7cc3a117b0dd3.jpeg?w=200&h=200&f=face
      fullname: Dimitris Papaevagelou
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: andefined
      type: user
    createdAt: '2024-01-07T07:25:50.000Z'
    data:
      status: closed
    id: 659a51fe1b4a26041af4cefd
    type: status-change
  author: andefined
  created_at: 2024-01-07 07:25:50+00:00
  id: 659a51fe1b4a26041af4cefd
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: cvcio/comments-el-toxic
repo_type: model
status: closed
target_branch: null
title: Not getting consistent results
