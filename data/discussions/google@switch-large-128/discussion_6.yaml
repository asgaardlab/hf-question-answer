!!python/object:huggingface_hub.community.DiscussionWithDetails
author: VIArchitect
conflicting_files: null
created_at: 2022-12-26 10:09:25+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
      fullname: Ranggi Hwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: VIArchitect
      type: user
    createdAt: '2022-12-26T10:09:25.000Z'
    data:
      edited: false
      editors:
      - VIArchitect
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
          fullname: Ranggi Hwang
          isHf: false
          isPro: false
          name: VIArchitect
          type: user
        html: "<p>Hello</p>\n<p>I'd like to report a bug on the inference execution.</p>\n\
          <p>When I executed the example code in the model card with 4 GPUs, it worked\
          \ well.</p>\n<p>But when I tried it with 3 or fewer GPUs, for example CUDA_VISIBLE_DEVICES=0,1\
          \ , it doesn't work and showed the following error.<br><code>RuntimeError:\
          \ expected scalar type Float but found BFloat16</code></p>\n<p>It came from\
          \ here.</p>\n<pre><code> File \"/root/hugging_face/hf/lib/python3.8/site-packages/transformers/models/switch_transformers/modeling_switch_transformers.py\"\
          , line 188, in _compute_router_probabilities\n    router_logits = self.classifier(hidden_states)\n\
          \  File \"/root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/module.py\"\
          , line 1190, in _call_impl\n    return forward_call(*input, **kwargs)\n\
          \  File \"/root/hugging_face/hf/lib/python3.8/site-packages/accelerate/hooks.py\"\
          , line 156, in new_forward\n    output = old_forward(*args, **kwargs)\n\
          \  File \"/root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/linear.py\"\
          , line 114, in forward\n    return F.linear(input, self.weight, self.bias)\n\
          </code></pre>\n<p>From my understanding, the only difference between the\
          \ two execution is the number of GPUs used, which means that, at the code\
          \ level, noting is different.<br>I cannot understand why this happened.</p>\n\
          <p>Would you please help me to fix it?</p>\n"
        raw: "Hello\r\n\r\nI'd like to report a bug on the inference execution.\r\n\
          \r\nWhen I executed the example code in the model card with 4 GPUs, it worked\
          \ well.\r\n\r\nBut when I tried it with 3 or fewer GPUs, for example CUDA_VISIBLE_DEVICES=0,1\
          \ , it doesn't work and showed the following error.\r\n`RuntimeError: expected\
          \ scalar type Float but found BFloat16`\r\n\r\nIt came from here.\r\n\r\n\
          ```\r\n File \"/root/hugging_face/hf/lib/python3.8/site-packages/transformers/models/switch_transformers/modeling_switch_transformers.py\"\
          , line 188, in _compute_router_probabilities\r\n    router_logits = self.classifier(hidden_states)\r\
          \n  File \"/root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/module.py\"\
          , line 1190, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\
          \n  File \"/root/hugging_face/hf/lib/python3.8/site-packages/accelerate/hooks.py\"\
          , line 156, in new_forward\r\n    output = old_forward(*args, **kwargs)\r\
          \n  File \"/root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/linear.py\"\
          , line 114, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\
          \n```\r\n\r\nFrom my understanding, the only difference between the two\
          \ execution is the number of GPUs used, which means that, at the code level,\
          \ noting is different.\r\nI cannot understand why this happened.\r\n\r\n\
          Would you please help me to fix it?"
        updatedAt: '2022-12-26T10:09:25.562Z'
      numEdits: 0
      reactions: []
    id: 63a972d57930fa8c7dd707c0
    type: comment
  author: VIArchitect
  content: "Hello\r\n\r\nI'd like to report a bug on the inference execution.\r\n\r\
    \nWhen I executed the example code in the model card with 4 GPUs, it worked well.\r\
    \n\r\nBut when I tried it with 3 or fewer GPUs, for example CUDA_VISIBLE_DEVICES=0,1\
    \ , it doesn't work and showed the following error.\r\n`RuntimeError: expected\
    \ scalar type Float but found BFloat16`\r\n\r\nIt came from here.\r\n\r\n```\r\
    \n File \"/root/hugging_face/hf/lib/python3.8/site-packages/transformers/models/switch_transformers/modeling_switch_transformers.py\"\
    , line 188, in _compute_router_probabilities\r\n    router_logits = self.classifier(hidden_states)\r\
    \n  File \"/root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/module.py\"\
    , line 1190, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File\
    \ \"/root/hugging_face/hf/lib/python3.8/site-packages/accelerate/hooks.py\", line\
    \ 156, in new_forward\r\n    output = old_forward(*args, **kwargs)\r\n  File \"\
    /root/hugging_face/hf/lib/python3.8/site-packages/torch/nn/modules/linear.py\"\
    , line 114, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\
    \n```\r\n\r\nFrom my understanding, the only difference between the two execution\
    \ is the number of GPUs used, which means that, at the code level, noting is different.\r\
    \nI cannot understand why this happened.\r\n\r\nWould you please help me to fix\
    \ it?"
  created_at: 2022-12-26 10:09:25+00:00
  edited: false
  hidden: false
  id: 63a972d57930fa8c7dd707c0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1648631057413-noauth.png?w=200&h=200&f=face
      fullname: Younes Belkada
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: ybelkada
      type: user
    createdAt: '2022-12-26T10:21:20.000Z'
    data:
      edited: false
      editors:
      - ybelkada
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1648631057413-noauth.png?w=200&h=200&f=face
          fullname: Younes Belkada
          isHf: true
          isPro: false
          name: ybelkada
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;VIArchitect&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/VIArchitect\"\
          >@<span class=\"underline\">VIArchitect</span></a></span>\n\n\t</span></span>\
          \ </p>\n<p>Thanks for the report!<br>Which example code are you using? The\
          \ one with half precision or the full precision one?<br>Thanks!</p>\n"
        raw: "Hi @VIArchitect \n\nThanks for the report! \nWhich example code are\
          \ you using? The one with half precision or the full precision one?\nThanks!"
        updatedAt: '2022-12-26T10:21:20.868Z'
      numEdits: 0
      reactions: []
    id: 63a975a00c51f01ed60c255d
    type: comment
  author: ybelkada
  content: "Hi @VIArchitect \n\nThanks for the report! \nWhich example code are you\
    \ using? The one with half precision or the full precision one?\nThanks!"
  created_at: 2022-12-26 10:21:20+00:00
  edited: false
  hidden: false
  id: 63a975a00c51f01ed60c255d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
      fullname: Ranggi Hwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: VIArchitect
      type: user
    createdAt: '2022-12-26T10:26:28.000Z'
    data:
      edited: true
      editors:
      - VIArchitect
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
          fullname: Ranggi Hwang
          isHf: false
          isPro: false
          name: VIArchitect
          type: user
        html: "<p>Thanks for the fast response <span data-props=\"{&quot;user&quot;:&quot;ybelkada&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/ybelkada\"\
          >@<span class=\"underline\">ybelkada</span></a></span>\n\n\t</span></span>\
          \ !<br>It was a full-precision one!</p>\n<pre><code>from transformers import\
          \ AutoTokenizer, SwitchTransformersForConditionalGeneration\n\ntokenizer\
          \ = AutoTokenizer.from_pretrained(\"google/switch-large-128\", resume_download=True)\n\
          \ninput_text = \"A &lt;extra_id_0&gt; walks into a bar a orders a &lt;extra_id_1&gt;\
          \ with &lt;extra_id_2&gt; pinch of &lt;extra_id_3&gt;.\"\n\n# To use GPU,\
          \ add .to(0)\ninput_ids = tokenizer(input_text, return_tensors=\"pt\").input_ids.to(0)\n\
          \n# To use GPU, add args device_map=\"auto\"\nmodel = SwitchTransformersForConditionalGeneration.from_pretrained(\n\
          \    \"google/switch-large-128\", device_map=\"auto\", resume_download=True)\n\
          outputs = model.generate(input_ids, decoder_start_token_id=0, bos_token_id=2)\n\
          \n\nprint(\"final output = \")\nprint(tokenizer.decode(outputs[0]))\n</code></pre>\n\
          <p>This is the code I used for the execution.</p>\n<p>I suspect It's caused\
          \ by a lack of memory capacity.<br>But the problem is this also happened\
          \ when I used DeepSpeed-offload, which offloads parameters to CPU DRAM and\
          \ enables execution of the larger model.</p>\n<p>Does SwitchTransformer\
          \ support DeepSpeed functions? (<a href=\"https://huggingface.co/docs/transformers/v4.25.1/en/main_classes/deepspeed\"\
          >https://huggingface.co/docs/transformers/v4.25.1/en/main_classes/deepspeed</a>)</p>\n"
        raw: "Thanks for the fast response @ybelkada !\nIt was a full-precision one!\n\
          \n```\nfrom transformers import AutoTokenizer, SwitchTransformersForConditionalGeneration\n\
          \ntokenizer = AutoTokenizer.from_pretrained(\"google/switch-large-128\"\
          , resume_download=True)\n\ninput_text = \"A <extra_id_0> walks into a bar\
          \ a orders a <extra_id_1> with <extra_id_2> pinch of <extra_id_3>.\"\n\n\
          # To use GPU, add .to(0)\ninput_ids = tokenizer(input_text, return_tensors=\"\
          pt\").input_ids.to(0)\n\n# To use GPU, add args device_map=\"auto\"\nmodel\
          \ = SwitchTransformersForConditionalGeneration.from_pretrained(\n    \"\
          google/switch-large-128\", device_map=\"auto\", resume_download=True)\n\
          outputs = model.generate(input_ids, decoder_start_token_id=0, bos_token_id=2)\n\
          \n\nprint(\"final output = \")\nprint(tokenizer.decode(outputs[0]))\n```\n\
          \nThis is the code I used for the execution.\n\nI suspect It's caused by\
          \ a lack of memory capacity.\nBut the problem is this also happened when\
          \ I used DeepSpeed-offload, which offloads parameters to CPU DRAM and enables\
          \ execution of the larger model.\n\nDoes SwitchTransformer support DeepSpeed\
          \ functions? (https://huggingface.co/docs/transformers/v4.25.1/en/main_classes/deepspeed)"
        updatedAt: '2022-12-26T10:26:45.442Z'
      numEdits: 1
      reactions: []
    id: 63a976d457ca9193a6711d91
    type: comment
  author: VIArchitect
  content: "Thanks for the fast response @ybelkada !\nIt was a full-precision one!\n\
    \n```\nfrom transformers import AutoTokenizer, SwitchTransformersForConditionalGeneration\n\
    \ntokenizer = AutoTokenizer.from_pretrained(\"google/switch-large-128\", resume_download=True)\n\
    \ninput_text = \"A <extra_id_0> walks into a bar a orders a <extra_id_1> with\
    \ <extra_id_2> pinch of <extra_id_3>.\"\n\n# To use GPU, add .to(0)\ninput_ids\
    \ = tokenizer(input_text, return_tensors=\"pt\").input_ids.to(0)\n\n# To use GPU,\
    \ add args device_map=\"auto\"\nmodel = SwitchTransformersForConditionalGeneration.from_pretrained(\n\
    \    \"google/switch-large-128\", device_map=\"auto\", resume_download=True)\n\
    outputs = model.generate(input_ids, decoder_start_token_id=0, bos_token_id=2)\n\
    \n\nprint(\"final output = \")\nprint(tokenizer.decode(outputs[0]))\n```\n\nThis\
    \ is the code I used for the execution.\n\nI suspect It's caused by a lack of\
    \ memory capacity.\nBut the problem is this also happened when I used DeepSpeed-offload,\
    \ which offloads parameters to CPU DRAM and enables execution of the larger model.\n\
    \nDoes SwitchTransformer support DeepSpeed functions? (https://huggingface.co/docs/transformers/v4.25.1/en/main_classes/deepspeed)"
  created_at: 2022-12-26 10:26:28+00:00
  edited: true
  hidden: false
  id: 63a976d457ca9193a6711d91
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
      fullname: Ranggi Hwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: VIArchitect
      type: user
    createdAt: '2022-12-27T02:07:37.000Z'
    data:
      edited: false
      editors:
      - VIArchitect
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
          fullname: Ranggi Hwang
          isHf: false
          isPro: false
          name: VIArchitect
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;ybelkada&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/ybelkada\">@<span class=\"\
          underline\">ybelkada</span></a></span>\n\n\t</span></span> Does it happen\
          \ in your environment either?</p>\n"
        raw: '@ybelkada Does it happen in your environment either?'
        updatedAt: '2022-12-27T02:07:37.189Z'
      numEdits: 0
      reactions: []
    id: 63aa536957ca9193a67e2318
    type: comment
  author: VIArchitect
  content: '@ybelkada Does it happen in your environment either?'
  created_at: 2022-12-27 02:07:37+00:00
  edited: false
  hidden: false
  id: 63aa536957ca9193a67e2318
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
      fullname: Ranggi Hwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: VIArchitect
      type: user
    createdAt: '2022-12-27T04:03:19.000Z'
    data:
      edited: false
      editors:
      - VIArchitect
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
          fullname: Ranggi Hwang
          isHf: false
          isPro: false
          name: VIArchitect
          type: user
        html: '<p>It is solved by giving the data type to the model.<br><code>model
          = SwitchTransformersForConditionalGeneration.from_pretrained("google/switch-large-128",
          device_map="auto", resume_download=True, torch_dtype=torch.float32)</code></p>

          <p>But then here''s the new question.<br>Does the model automatically adjust
          the datatype dynamically depending on GPU memory capacity?</p>

          <p>According to the reference paper, the large-128 model has 26B parameters
          requiring 104GB (fp32).<br>When I used 4x 32GB V100, it showed that each
          GPU consumes around 25GB of memory (total around 100GB).<br>But when I tried
          it with 1x 32GB V100, it showed that a single GPU consumes 25GB of memory.</p>

          <p>It seems like the model automatically reduces the data size to int8 or
          something.<br>Does that happen, or does it has another reason?</p>

          '
        raw: 'It is solved by giving the data type to the model.

          `model = SwitchTransformersForConditionalGeneration.from_pretrained("google/switch-large-128",
          device_map="auto", resume_download=True, torch_dtype=torch.float32)`


          But then here''s the new question.

          Does the model automatically adjust the datatype dynamically depending on
          GPU memory capacity?


          According to the reference paper, the large-128 model has 26B parameters
          requiring 104GB (fp32).

          When I used 4x 32GB V100, it showed that each GPU consumes around 25GB of
          memory (total around 100GB).

          But when I tried it with 1x 32GB V100, it showed that a single GPU consumes
          25GB of memory.


          It seems like the model automatically reduces the data size to int8 or something.

          Does that happen, or does it has another reason?'
        updatedAt: '2022-12-27T04:03:19.893Z'
      numEdits: 0
      reactions: []
    id: 63aa6e873c331aa6f5eb94f5
    type: comment
  author: VIArchitect
  content: 'It is solved by giving the data type to the model.

    `model = SwitchTransformersForConditionalGeneration.from_pretrained("google/switch-large-128",
    device_map="auto", resume_download=True, torch_dtype=torch.float32)`


    But then here''s the new question.

    Does the model automatically adjust the datatype dynamically depending on GPU
    memory capacity?


    According to the reference paper, the large-128 model has 26B parameters requiring
    104GB (fp32).

    When I used 4x 32GB V100, it showed that each GPU consumes around 25GB of memory
    (total around 100GB).

    But when I tried it with 1x 32GB V100, it showed that a single GPU consumes 25GB
    of memory.


    It seems like the model automatically reduces the data size to int8 or something.

    Does that happen, or does it has another reason?'
  created_at: 2022-12-27 04:03:19+00:00
  edited: false
  hidden: false
  id: 63aa6e873c331aa6f5eb94f5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/d1e4de4c33be67a0d9304ee491ee74c8.svg
      fullname: Ranggi Hwang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: VIArchitect
      type: user
    createdAt: '2022-12-30T02:30:45.000Z'
    data:
      status: closed
    id: 63ae4d55ba0c1d4a9a08e59a
    type: status-change
  author: VIArchitect
  created_at: 2022-12-30 02:30:45+00:00
  id: 63ae4d55ba0c1d4a9a08e59a
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 6
repo_id: google/switch-large-128
repo_type: model
status: closed
target_branch: null
title: 'RuntimeError: expected scalar type Float but found BFloat16'
