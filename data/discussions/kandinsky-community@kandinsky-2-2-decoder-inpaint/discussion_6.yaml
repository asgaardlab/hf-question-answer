!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Winne
conflicting_files: null
created_at: 2023-10-30 02:36:34+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/dae3a9a29449ad939183bad32a9aa151.svg
      fullname: Winne Chen
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Winne
      type: user
    createdAt: '2023-10-30T03:36:34.000Z'
    data:
      edited: false
      editors:
      - Winne
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6154283881187439
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/dae3a9a29449ad939183bad32a9aa151.svg
          fullname: Winne Chen
          isHf: false
          isPro: false
          name: Winne
          type: user
        html: '<p>the inpaint pipeline from in diffusers requires an argument image_embeds,
          does this embedding come from the prior like the text-to-image pipeline
          like the following codes</p>

          <p>pipe_prior = KandinskyV22PriorPipeline.from_pretrained(prior_path, torch_dtype=torch.float16)<br>image_emb,
          zero_image_emb = pipe_prior(prompt, return_dict=False)<br>out = pipe(<br>        image_emb,<br>        negative_image_embeds=zero_image_emb,<br>        image=image,<br>        mask_image=mask_image,<br>        height=image.height,<br>        width=image.width,<br>        num_inference_steps=150,<br>)<br>out_image
          = out.images[0]</p>

          '
        raw: "the inpaint pipeline from in diffusers requires an argument image_embeds,\
          \ does this embedding come from the prior like the text-to-image pipeline\
          \ like the following codes\r\n\r\npipe_prior = KandinskyV22PriorPipeline.from_pretrained(prior_path,\
          \ torch_dtype=torch.float16)\r\nimage_emb, zero_image_emb = pipe_prior(prompt,\
          \ return_dict=False)\r\nout = pipe(\r\n        image_emb,\r\n        negative_image_embeds=zero_image_emb,\r\
          \n        image=image,\r\n        mask_image=mask_image,\r\n        height=image.height,\r\
          \n        width=image.width,\r\n        num_inference_steps=150,\r\n)\r\n\
          out_image = out.images[0]"
        updatedAt: '2023-10-30T03:36:34.132Z'
      numEdits: 0
      reactions: []
    id: 653f24c2afcd26e2cbe9567d
    type: comment
  author: Winne
  content: "the inpaint pipeline from in diffusers requires an argument image_embeds,\
    \ does this embedding come from the prior like the text-to-image pipeline like\
    \ the following codes\r\n\r\npipe_prior = KandinskyV22PriorPipeline.from_pretrained(prior_path,\
    \ torch_dtype=torch.float16)\r\nimage_emb, zero_image_emb = pipe_prior(prompt,\
    \ return_dict=False)\r\nout = pipe(\r\n        image_emb,\r\n        negative_image_embeds=zero_image_emb,\r\
    \n        image=image,\r\n        mask_image=mask_image,\r\n        height=image.height,\r\
    \n        width=image.width,\r\n        num_inference_steps=150,\r\n)\r\nout_image\
    \ = out.images[0]"
  created_at: 2023-10-30 02:36:34+00:00
  edited: false
  hidden: false
  id: 653f24c2afcd26e2cbe9567d
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 6
repo_id: kandinsky-community/kandinsky-2-2-decoder-inpaint
repo_type: model
status: open
target_branch: null
title: does the image_embeds in the diffusers inpaint pipeline come from the prior?
