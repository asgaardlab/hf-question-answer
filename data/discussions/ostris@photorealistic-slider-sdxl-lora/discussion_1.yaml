!!python/object:huggingface_hub.community.DiscussionWithDetails
author: vionwinnie
conflicting_files: null
created_at: 2023-08-31 19:42:40+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ad0dc08ee5de38b67c5bbebb84bd0bae.svg
      fullname: Man Wai Winnie Yeung
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: vionwinnie
      type: user
    createdAt: '2023-08-31T20:42:40.000Z'
    data:
      edited: false
      editors:
      - vionwinnie
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8804492950439453
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ad0dc08ee5de38b67c5bbebb84bd0bae.svg
          fullname: Man Wai Winnie Yeung
          isHf: false
          isPro: false
          name: vionwinnie
          type: user
        html: '<p>Can you show me an example of how to load the weights?</p>

          <p>I am having error message of checkpoint not supported :( </p>

          '
        raw: "Can you show me an example of how to load the weights?\r\n\r\nI am having\
          \ error message of checkpoint not supported :( "
        updatedAt: '2023-08-31T20:42:40.426Z'
      numEdits: 0
      reactions: []
    id: 64f0fb40c28826b0a49873e3
    type: comment
  author: vionwinnie
  content: "Can you show me an example of how to load the weights?\r\n\r\nI am having\
    \ error message of checkpoint not supported :( "
  created_at: 2023-08-31 19:42:40+00:00
  edited: false
  hidden: false
  id: 64f0fb40c28826b0a49873e3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ad0dc08ee5de38b67c5bbebb84bd0bae.svg
      fullname: Man Wai Winnie Yeung
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: vionwinnie
      type: user
    createdAt: '2023-08-31T20:53:43.000Z'
    data:
      edited: false
      editors:
      - vionwinnie
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.39939311146736145
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ad0dc08ee5de38b67c5bbebb84bd0bae.svg
          fullname: Man Wai Winnie Yeung
          isHf: false
          isPro: false
          name: vionwinnie
          type: user
        html: '<h2 id="valueerror-checkpoint-not-supported">ValueError: Checkpoint
          not supported</h2>

          <p>ValueError                                Traceback (most recent call
          last)<br>File :1<br>----&gt; 1 pipe.load_lora_weights("ostris/photorealistic-slider-sdxl-lora",
          weight_name="sdxl_photorealistic_slider_v1-0.safetensors")</p>

          <p>File :1163, in StableDiffusionXLInpaintPipeline.load_lora_weights(self,
          pretrained_model_name_or_path_or_dict, **kwargs)<br>   1159 def load_lora_weights(self,
          pretrained_model_name_or_path_or_dict: Union[str, Dict[str, torch.Tensor]],
          **kwargs):<br>   1160     # We could have accessed the unet config from
          <code>lora_state_dict()</code> too. We pass<br>   1161     # it here explicitly
          to be able to tell that it''s coming from an SDXL<br>   1162     # pipeline.<br>-&gt;
          1163     state_dict, network_alphas = self.lora_state_dict(<br>   1164         pretrained_model_name_or_path_or_dict,<br>   1165         unet_config=self.unet.config,<br>   1166         **kwargs,<br>   1167     )<br>   1168     self.load_lora_into_unet(state_dict,
          network_alphas=network_alphas, unet=self.unet)<br>   1170     text_encoder_state_dict
          = {k: v for k, v in state_dict.items() if "text_encoder." in k}</p>

          <p>File /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1075,
          in LoraLoaderMixin.lora_state_dict(cls, pretrained_model_name_or_path_or_dict,
          **kwargs)<br>   1063 if all(<br>   1064     (<br>   1065         k.startswith("lora_te_")<br>   (...)<br>   1071
          ):<br>   1072     # Map SDXL blocks correctly.<br>   1073     if unet_config
          is not None:<br>   1074         # use unet config to remap block numbers<br>-&gt;
          1075         state_dict = cls._map_sgm_blocks_to_diffusers(state_dict, unet_config)<br>   1076     state_dict,
          network_alphas = cls._convert_kohya_lora_to_diffusers(state_dict)<br>   1078
          return state_dict, network_alphas</p>

          <p>File /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1098,
          in LoraLoaderMixin._map_sgm_blocks_to_diffusers(cls, state_dict, unet_config,
          delimiter, block_slice_pos)<br>   1096             output_block_ids.add(layer_id)<br>   1097         else:<br>-&gt;
          1098             raise ValueError("Checkpoint not supported")<br>   1100
          input_blocks = {<br>   1101     layer_id: [key for key in state_dict if
          f"input_blocks{delimiter}{layer_id}" in key]<br>   1102     for layer_id
          in input_block_ids<br>   1103 }<br>   1104 middle_blocks = {<br>   1105     layer_id:
          [key for key in state_dict if f"middle_block{delimiter}{layer_id}" in key]<br>   1106     for
          layer_id in middle_block_ids<br>   1107 }</p>

          <p>ValueError: Checkpoint not supported</p>

          '
        raw: "ValueError: Checkpoint not supported\n---------------------------------------------------------------------------\n\
          ValueError                                Traceback (most recent call last)\n\
          File <command-4106296198582646>:1\n----> 1 pipe.load_lora_weights(\"ostris/photorealistic-slider-sdxl-lora\"\
          , weight_name=\"sdxl_photorealistic_slider_v1-0.safetensors\")\n\nFile <command-4106296198582635>:1163,\
          \ in StableDiffusionXLInpaintPipeline.load_lora_weights(self, pretrained_model_name_or_path_or_dict,\
          \ **kwargs)\n   1159 def load_lora_weights(self, pretrained_model_name_or_path_or_dict:\
          \ Union[str, Dict[str, torch.Tensor]], **kwargs):\n   1160     # We could\
          \ have accessed the unet config from `lora_state_dict()` too. We pass\n\
          \   1161     # it here explicitly to be able to tell that it's coming from\
          \ an SDXL\n   1162     # pipeline.\n-> 1163     state_dict, network_alphas\
          \ = self.lora_state_dict(\n   1164         pretrained_model_name_or_path_or_dict,\n\
          \   1165         unet_config=self.unet.config,\n   1166         **kwargs,\n\
          \   1167     )\n   1168     self.load_lora_into_unet(state_dict, network_alphas=network_alphas,\
          \ unet=self.unet)\n   1170     text_encoder_state_dict = {k: v for k, v\
          \ in state_dict.items() if \"text_encoder.\" in k}\n\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1075,\
          \ in LoraLoaderMixin.lora_state_dict(cls, pretrained_model_name_or_path_or_dict,\
          \ **kwargs)\n   1063 if all(\n   1064     (\n   1065         k.startswith(\"\
          lora_te_\")\n   (...)\n   1071 ):\n   1072     # Map SDXL blocks correctly.\n\
          \   1073     if unet_config is not None:\n   1074         # use unet config\
          \ to remap block numbers\n-> 1075         state_dict = cls._map_sgm_blocks_to_diffusers(state_dict,\
          \ unet_config)\n   1076     state_dict, network_alphas = cls._convert_kohya_lora_to_diffusers(state_dict)\n\
          \   1078 return state_dict, network_alphas\n\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1098,\
          \ in LoraLoaderMixin._map_sgm_blocks_to_diffusers(cls, state_dict, unet_config,\
          \ delimiter, block_slice_pos)\n   1096             output_block_ids.add(layer_id)\n\
          \   1097         else:\n-> 1098             raise ValueError(\"Checkpoint\
          \ not supported\")\n   1100 input_blocks = {\n   1101     layer_id: [key\
          \ for key in state_dict if f\"input_blocks{delimiter}{layer_id}\" in key]\n\
          \   1102     for layer_id in input_block_ids\n   1103 }\n   1104 middle_blocks\
          \ = {\n   1105     layer_id: [key for key in state_dict if f\"middle_block{delimiter}{layer_id}\"\
          \ in key]\n   1106     for layer_id in middle_block_ids\n   1107 }\n\nValueError:\
          \ Checkpoint not supported"
        updatedAt: '2023-08-31T20:53:43.085Z'
      numEdits: 0
      reactions: []
    id: 64f0fdd7bba78f1f49af1ecb
    type: comment
  author: vionwinnie
  content: "ValueError: Checkpoint not supported\n---------------------------------------------------------------------------\n\
    ValueError                                Traceback (most recent call last)\n\
    File <command-4106296198582646>:1\n----> 1 pipe.load_lora_weights(\"ostris/photorealistic-slider-sdxl-lora\"\
    , weight_name=\"sdxl_photorealistic_slider_v1-0.safetensors\")\n\nFile <command-4106296198582635>:1163,\
    \ in StableDiffusionXLInpaintPipeline.load_lora_weights(self, pretrained_model_name_or_path_or_dict,\
    \ **kwargs)\n   1159 def load_lora_weights(self, pretrained_model_name_or_path_or_dict:\
    \ Union[str, Dict[str, torch.Tensor]], **kwargs):\n   1160     # We could have\
    \ accessed the unet config from `lora_state_dict()` too. We pass\n   1161    \
    \ # it here explicitly to be able to tell that it's coming from an SDXL\n   1162\
    \     # pipeline.\n-> 1163     state_dict, network_alphas = self.lora_state_dict(\n\
    \   1164         pretrained_model_name_or_path_or_dict,\n   1165         unet_config=self.unet.config,\n\
    \   1166         **kwargs,\n   1167     )\n   1168     self.load_lora_into_unet(state_dict,\
    \ network_alphas=network_alphas, unet=self.unet)\n   1170     text_encoder_state_dict\
    \ = {k: v for k, v in state_dict.items() if \"text_encoder.\" in k}\n\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1075,\
    \ in LoraLoaderMixin.lora_state_dict(cls, pretrained_model_name_or_path_or_dict,\
    \ **kwargs)\n   1063 if all(\n   1064     (\n   1065         k.startswith(\"lora_te_\"\
    )\n   (...)\n   1071 ):\n   1072     # Map SDXL blocks correctly.\n   1073   \
    \  if unet_config is not None:\n   1074         # use unet config to remap block\
    \ numbers\n-> 1075         state_dict = cls._map_sgm_blocks_to_diffusers(state_dict,\
    \ unet_config)\n   1076     state_dict, network_alphas = cls._convert_kohya_lora_to_diffusers(state_dict)\n\
    \   1078 return state_dict, network_alphas\n\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-151e0cf5-b984-4ece-8168-b955fdbb222d/lib/python3.10/site-packages/diffusers/loaders.py:1098,\
    \ in LoraLoaderMixin._map_sgm_blocks_to_diffusers(cls, state_dict, unet_config,\
    \ delimiter, block_slice_pos)\n   1096             output_block_ids.add(layer_id)\n\
    \   1097         else:\n-> 1098             raise ValueError(\"Checkpoint not\
    \ supported\")\n   1100 input_blocks = {\n   1101     layer_id: [key for key in\
    \ state_dict if f\"input_blocks{delimiter}{layer_id}\" in key]\n   1102     for\
    \ layer_id in input_block_ids\n   1103 }\n   1104 middle_blocks = {\n   1105 \
    \    layer_id: [key for key in state_dict if f\"middle_block{delimiter}{layer_id}\"\
    \ in key]\n   1106     for layer_id in middle_block_ids\n   1107 }\n\nValueError:\
    \ Checkpoint not supported"
  created_at: 2023-08-31 19:53:43+00:00
  edited: false
  hidden: false
  id: 64f0fdd7bba78f1f49af1ecb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/651cd78828950a077033e719/yi7TO5gF8P8SVe8ppPYeo.jpeg?w=200&h=200&f=face
      fullname: ichsanbaharuddin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ichsanbhrd
      type: user
    createdAt: '2023-10-15T15:12:59.000Z'
    data:
      edited: false
      editors:
      - ichsanbhrd
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8139832615852356
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/651cd78828950a077033e719/yi7TO5gF8P8SVe8ppPYeo.jpeg?w=200&h=200&f=face
          fullname: ichsanbaharuddin
          isHf: false
          isPro: false
          name: ichsanbhrd
          type: user
        html: '<blockquote>

          <p>Can you show me an example of how to load the weights?</p>

          <p>I am having error message of checkpoint not supported :(</p>

          </blockquote>

          <p>use "lora the explorer"  from huggingspace.co</p>

          '
        raw: "> Can you show me an example of how to load the weights?\n> \n> I am\
          \ having error message of checkpoint not supported :(\n\nuse \"lora the\
          \ explorer\"  from huggingspace.co\n"
        updatedAt: '2023-10-15T15:12:59.814Z'
      numEdits: 0
      reactions: []
    id: 652c017b5aec376f55284311
    type: comment
  author: ichsanbhrd
  content: "> Can you show me an example of how to load the weights?\n> \n> I am having\
    \ error message of checkpoint not supported :(\n\nuse \"lora the explorer\"  from\
    \ huggingspace.co\n"
  created_at: 2023-10-15 14:12:59+00:00
  edited: false
  hidden: false
  id: 652c017b5aec376f55284311
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/651cd78828950a077033e719/yi7TO5gF8P8SVe8ppPYeo.jpeg?w=200&h=200&f=face
      fullname: ichsanbaharuddin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ichsanbhrd
      type: user
    createdAt: '2023-10-15T15:15:08.000Z'
    data:
      edited: false
      editors:
      - ichsanbhrd
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7871242761611938
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/651cd78828950a077033e719/yi7TO5gF8P8SVe8ppPYeo.jpeg?w=200&h=200&f=face
          fullname: ichsanbaharuddin
          isHf: false
          isPro: false
          name: ichsanbhrd
          type: user
        html: '<blockquote>

          <p>Can you show me an example of how to load the weights?</p>

          <p>I am having error message of checkpoint not supported :(</p>

          </blockquote>

          <p>use lora the explorer(multi moda art-lora the explorer)</p>

          '
        raw: "> Can you show me an example of how to load the weights?\n> \n> I am\
          \ having error message of checkpoint not supported :(\n\nuse lora the explorer(multi\
          \ moda art-lora the explorer)"
        updatedAt: '2023-10-15T15:15:08.758Z'
      numEdits: 0
      reactions: []
    id: 652c01fcf12059832293caa4
    type: comment
  author: ichsanbhrd
  content: "> Can you show me an example of how to load the weights?\n> \n> I am having\
    \ error message of checkpoint not supported :(\n\nuse lora the explorer(multi\
    \ moda art-lora the explorer)"
  created_at: 2023-10-15 14:15:08+00:00
  edited: false
  hidden: false
  id: 652c01fcf12059832293caa4
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: ostris/photorealistic-slider-sdxl-lora
repo_type: model
status: open
target_branch: null
title: Sorry I was not able to load the weights to use with SDXL
