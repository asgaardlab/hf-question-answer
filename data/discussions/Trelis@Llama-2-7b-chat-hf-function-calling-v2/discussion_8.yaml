!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Nuclear6
conflicting_files: null
created_at: 2024-01-16 12:46:07+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/358503a958bacff790c5830f24946378.svg
      fullname: Xin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Nuclear6
      type: user
    createdAt: '2024-01-16T12:46:07.000Z'
    data:
      edited: true
      editors:
      - Nuclear6
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7489973902702332
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/358503a958bacff790c5830f24946378.svg
          fullname: Xin
          isHf: false
          isPro: false
          name: Nuclear6
          type: user
        html: '<p>This is a great model, but I have some issues understanding it.
          Can anyone help?</p>

          <p>The parameter types I saw in the demo are all simple string types. If
          I want to define complex types or other basic types, how should I define
          them?</p>

          <p> And, how should the mutual exclusivity between parameters be expressed?</p>

          '
        raw: "This is a great model, but I have some issues understanding it. Can\
          \ anyone help?\n\nThe parameter types I saw in the demo are all simple string\
          \ types. If I want to define complex types or other basic types, how should\
          \ I define them?\n\n And, how should the mutual exclusivity between parameters\
          \ be expressed?"
        updatedAt: '2024-01-16T13:33:17.459Z'
      numEdits: 1
      reactions: []
    id: 65a67a8f8cfc59e361e9011e
    type: comment
  author: Nuclear6
  content: "This is a great model, but I have some issues understanding it. Can anyone\
    \ help?\n\nThe parameter types I saw in the demo are all simple string types.\
    \ If I want to define complex types or other basic types, how should I define\
    \ them?\n\n And, how should the mutual exclusivity between parameters be expressed?"
  created_at: 2024-01-16 12:46:07+00:00
  edited: true
  hidden: false
  id: 65a67a8f8cfc59e361e9011e
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/-6Yq7oM_Ju6Zi2GEvobvb.jpeg?w=200&h=200&f=face
      fullname: Ronan McGovern
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: RonanMcGovern
      type: user
    createdAt: '2024-01-17T11:17:40.000Z'
    data:
      edited: false
      editors:
      - RonanMcGovern
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9118322134017944
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/-6Yq7oM_Ju6Zi2GEvobvb.jpeg?w=200&h=200&f=face
          fullname: Ronan McGovern
          isHf: false
          isPro: false
          name: RonanMcGovern
          type: user
        html: '<p>A few tips:</p>

          <ul>

          <li>You can just define arrays or objects in place of the strings and it
          generally works.</li>

          <li>Probably using <a href="https://huggingface.co/Trelis/Llama-2-7b-chat-hf-function-calling-v3">this
          v3 model</a> is a little easier.</li>

          <li>For mutual exclusivity, you could provide a list of options for the
          value. You could also just describe boolean relationships. There isn''t
          a fixed format, but something sensible should work fairly well (although
          Llama 2 isn''t as strong as the openchat function calling model).</li>

          </ul>

          '
        raw: 'A few tips:

          - You can just define arrays or objects in place of the strings and it generally
          works.

          - Probably using [this v3 model](https://huggingface.co/Trelis/Llama-2-7b-chat-hf-function-calling-v3)
          is a little easier.

          - For mutual exclusivity, you could provide a list of options for the value.
          You could also just describe boolean relationships. There isn''t a fixed
          format, but something sensible should work fairly well (although Llama 2
          isn''t as strong as the openchat function calling model).

          '
        updatedAt: '2024-01-17T11:17:40.013Z'
      numEdits: 0
      reactions: []
    id: 65a7b7543212568defaf0ff4
    type: comment
  author: RonanMcGovern
  content: 'A few tips:

    - You can just define arrays or objects in place of the strings and it generally
    works.

    - Probably using [this v3 model](https://huggingface.co/Trelis/Llama-2-7b-chat-hf-function-calling-v3)
    is a little easier.

    - For mutual exclusivity, you could provide a list of options for the value. You
    could also just describe boolean relationships. There isn''t a fixed format, but
    something sensible should work fairly well (although Llama 2 isn''t as strong
    as the openchat function calling model).

    '
  created_at: 2024-01-17 11:17:40+00:00
  edited: false
  hidden: false
  id: 65a7b7543212568defaf0ff4
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/358503a958bacff790c5830f24946378.svg
      fullname: Xin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Nuclear6
      type: user
    createdAt: '2024-01-17T12:19:26.000Z'
    data:
      edited: false
      editors:
      - Nuclear6
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9791155457496643
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/358503a958bacff790c5830f24946378.svg
          fullname: Xin
          isHf: false
          isPro: false
          name: Nuclear6
          type: user
        html: '<p>Thank you very much for your answer, I will try the v3 version.</p>

          '
        raw: Thank you very much for your answer, I will try the v3 version.
        updatedAt: '2024-01-17T12:19:26.581Z'
      numEdits: 0
      reactions: []
      relatedEventId: 65a7c5ce65e4f1a5eb014a41
    id: 65a7c5ce65e4f1a5eb014a40
    type: comment
  author: Nuclear6
  content: Thank you very much for your answer, I will try the v3 version.
  created_at: 2024-01-17 12:19:26+00:00
  edited: false
  hidden: false
  id: 65a7c5ce65e4f1a5eb014a40
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/358503a958bacff790c5830f24946378.svg
      fullname: Xin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Nuclear6
      type: user
    createdAt: '2024-01-17T12:19:26.000Z'
    data:
      status: closed
    id: 65a7c5ce65e4f1a5eb014a41
    type: status-change
  author: Nuclear6
  created_at: 2024-01-17 12:19:26+00:00
  id: 65a7c5ce65e4f1a5eb014a41
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 8
repo_id: Trelis/Llama-2-7b-chat-hf-function-calling-v2
repo_type: model
status: closed
target_branch: null
title: argument type
