!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Avatarglobal
conflicting_files: []
created_at: 2023-09-20 11:42:06+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/83b1fb845f466f4fb666a7c45fe38e66.svg
      fullname: avatar Globle service
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Avatarglobal
      type: user
    createdAt: '2023-09-20T12:42:06.000Z'
    data:
      edited: false
      editors:
      - Avatarglobal
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8237435221672058
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/83b1fb845f466f4fb666a7c45fe38e66.svg
          fullname: avatar Globle service
          isHf: false
          isPro: false
          name: Avatarglobal
          type: user
        html: '<h1 id="controlnet-qr-code-monster-v2-for-sd-15">Controlnet QR Code
          Monster v2 For SD-1.5</h1>

          <p><a rel="nofollow" href="images/monster.png"><img alt="QR code in shape
          of a blue monster, reading &quot;https://www.cuptime.in/&quot;" src="images/monster.png"></a></p>

          <h2 id="model-description">Model Description</h2>

          <p>This model is made to generate creative QR codes that still scan.<br>Keep
          in mind that not all generated codes might be readable, but you can try
          different parameters and prompts to get the desired results.</p>

          <p><strong>NEW VERSION</strong></p>

          <p>Introducing the upgraded version of our model - Controlnet QR code Monster
          v2.<br>V2 is a huge upgrade over v1, for scannability AND creativity.</p>

          <p>QR codes can now seamlessly blend the image by using a gray-colored background
          (#808080).</p>

          <p>As with the former version, the readability of some generated codes may
          vary, however playing around with parameters and prompts could yield better
          results.</p>

          <p>You can find in in the <code>v2/</code> subfolder.</p>

          <h2 id="how-to-use">How to Use</h2>

          <ul>

          <li><p><strong>Condition</strong>: QR codes are passed as condition images
          with a module size of 16px. Use a higher error correction level to make
          it easier to read (sometimes a lower level can be easier to read if smaller
          in size). Use a gray background for the rest of the image to make the code
          integrate better.</p>

          </li>

          <li><p><strong>Prompts</strong>: Use a prompt to guide the QR code generation.
          The output will highly depend on the given prompt. Some seem to be really
          easily accepted by the qr code process, some will require careful tweaking
          to get good results.</p>

          </li>

          <li><p><strong>Controlnet guidance scale</strong>: Set the controlnet guidance
          scale value:</p>

          <ul>

          <li>High values: The generated QR code will be more readable.</li>

          <li>Low values: The generated QR code will be more creative.</li>

          </ul>

          </li>

          </ul>

          <h3 id="tips">Tips</h3>

          <ul>

          <li><p>For an optimally readable output, try generating multiple QR codes
          with similar parameters, then choose the best ones.</p>

          </li>

          <li><p>Use the Image-to-Image feature to improve the readability of a generated
          QR code:</p>

          <ul>

          <li>Decrease the denoising strength to retain more of the original image.</li>

          <li>Increase the controlnet guidance scale value for better readability.<br>A
          typical workflow for "saving" a code would be :<br>Max out the guidance
          scale and minimize the denoising strength, then bump the strength until
          the code scans.</li>

          </ul>

          </li>

          </ul>

          <h2 id="example-outputs">Example Outputs</h2>

          <p>Here are some examples of creative, yet scannable QR codes produced by
          our model:</p>

          <p><a rel="nofollow" href="images/architecture.png"><img alt="City ruins
          with a building facade in shape of a QR code, reading &quot;https://qrcode.monster&quot;"
          src="images/architecture.png"></a><br><a rel="nofollow" href="images/tree.png"><img
          alt="QR code in shape of a tree, reading &quot;https://qrcode.monster&quot;"
          src="images/tree.png"></a><br><a rel="nofollow" href="images/skulls.png"><img
          alt="A gothic sculpture in shape of a QR code, reading &quot;https://qrcode.monster&quot;"
          src="images/skulls.png"></a></p>

          <p>Feel free to experiment with prompts, parameters, and the Image-to-Image
          feature to achieve the desired QR code output. Good luck and have fun!</p>

          '
        raw: "---\ntags:\n- stable-diffusion\n- controlnet\n- qrcode\nlanguage:\n\
          - en\n---\n# Controlnet QR Code Monster v2 For SD-1.5\n\n![QR code in shape\
          \ of a blue monster, reading \"https://www.cuptime.in/\"](images/monster.png)\n\
          \n##  Model Description\n\nThis model is made to generate creative QR codes\
          \ that still scan.\nKeep in mind that not all generated codes might be readable,\
          \ but you can try different parameters and prompts to get the desired results.\n\
          \n**NEW VERSION**\n\nIntroducing the upgraded version of our model - Controlnet\
          \ QR code Monster v2.\nV2 is a huge upgrade over v1, for scannability AND\
          \ creativity.\n\nQR codes can now seamlessly blend the image by using a\
          \ gray-colored background (#808080).\n\nAs with the former version, the\
          \ readability of some generated codes may vary, however playing around with\
          \ parameters and prompts could yield better results.\n\nYou can find in\
          \ in the `v2/` subfolder.\n\n## How to Use\n\n- **Condition**: QR codes\
          \ are passed as condition images with a module size of 16px. Use a higher\
          \ error correction level to make it easier to read (sometimes a lower level\
          \ can be easier to read if smaller in size). Use a gray background for the\
          \ rest of the image to make the code integrate better.\n\n- **Prompts**:\
          \ Use a prompt to guide the QR code generation. The output will highly depend\
          \ on the given prompt. Some seem to be really easily accepted by the qr\
          \ code process, some will require careful tweaking to get good results.\n\
          \n- **Controlnet guidance scale**: Set the controlnet guidance scale value:\n\
          \   - High values: The generated QR code will be more readable.\n   - Low\
          \ values: The generated QR code will be more creative.\n\n### Tips\n\n-\
          \ For an optimally readable output, try generating multiple QR codes with\
          \ similar parameters, then choose the best ones.\n\n- Use the Image-to-Image\
          \ feature to improve the readability of a generated QR code:\n  - Decrease\
          \ the denoising strength to retain more of the original image.\n  - Increase\
          \ the controlnet guidance scale value for better readability.\n  A typical\
          \ workflow for \"saving\" a code would be :\n  Max out the guidance scale\
          \ and minimize the denoising strength, then bump the strength until the\
          \ code scans.\n\n## Example Outputs\n\nHere are some examples of creative,\
          \ yet scannable QR codes produced by our model:\n\n![City ruins with a building\
          \ facade in shape of a QR code, reading \"https://qrcode.monster\"](images/architecture.png)\n\
          ![QR code in shape of a tree, reading \"https://qrcode.monster\"](images/tree.png)\n\
          ![A gothic sculpture in shape of a QR code, reading \"https://qrcode.monster\"\
          ](images/skulls.png)\n\nFeel free to experiment with prompts, parameters,\
          \ and the Image-to-Image feature to achieve the desired QR code output.\
          \ Good luck and have fun!"
        updatedAt: '2023-09-20T12:42:06.970Z'
      numEdits: 0
      reactions: []
    id: 650ae89e1ba30f09679f1e14
    type: comment
  author: Avatarglobal
  content: "---\ntags:\n- stable-diffusion\n- controlnet\n- qrcode\nlanguage:\n- en\n\
    ---\n# Controlnet QR Code Monster v2 For SD-1.5\n\n![QR code in shape of a blue\
    \ monster, reading \"https://www.cuptime.in/\"](images/monster.png)\n\n##  Model\
    \ Description\n\nThis model is made to generate creative QR codes that still scan.\n\
    Keep in mind that not all generated codes might be readable, but you can try different\
    \ parameters and prompts to get the desired results.\n\n**NEW VERSION**\n\nIntroducing\
    \ the upgraded version of our model - Controlnet QR code Monster v2.\nV2 is a\
    \ huge upgrade over v1, for scannability AND creativity.\n\nQR codes can now seamlessly\
    \ blend the image by using a gray-colored background (#808080).\n\nAs with the\
    \ former version, the readability of some generated codes may vary, however playing\
    \ around with parameters and prompts could yield better results.\n\nYou can find\
    \ in in the `v2/` subfolder.\n\n## How to Use\n\n- **Condition**: QR codes are\
    \ passed as condition images with a module size of 16px. Use a higher error correction\
    \ level to make it easier to read (sometimes a lower level can be easier to read\
    \ if smaller in size). Use a gray background for the rest of the image to make\
    \ the code integrate better.\n\n- **Prompts**: Use a prompt to guide the QR code\
    \ generation. The output will highly depend on the given prompt. Some seem to\
    \ be really easily accepted by the qr code process, some will require careful\
    \ tweaking to get good results.\n\n- **Controlnet guidance scale**: Set the controlnet\
    \ guidance scale value:\n   - High values: The generated QR code will be more\
    \ readable.\n   - Low values: The generated QR code will be more creative.\n\n\
    ### Tips\n\n- For an optimally readable output, try generating multiple QR codes\
    \ with similar parameters, then choose the best ones.\n\n- Use the Image-to-Image\
    \ feature to improve the readability of a generated QR code:\n  - Decrease the\
    \ denoising strength to retain more of the original image.\n  - Increase the controlnet\
    \ guidance scale value for better readability.\n  A typical workflow for \"saving\"\
    \ a code would be :\n  Max out the guidance scale and minimize the denoising strength,\
    \ then bump the strength until the code scans.\n\n## Example Outputs\n\nHere are\
    \ some examples of creative, yet scannable QR codes produced by our model:\n\n\
    ![City ruins with a building facade in shape of a QR code, reading \"https://qrcode.monster\"\
    ](images/architecture.png)\n![QR code in shape of a tree, reading \"https://qrcode.monster\"\
    ](images/tree.png)\n![A gothic sculpture in shape of a QR code, reading \"https://qrcode.monster\"\
    ](images/skulls.png)\n\nFeel free to experiment with prompts, parameters, and\
    \ the Image-to-Image feature to achieve the desired QR code output. Good luck\
    \ and have fun!"
  created_at: 2023-09-20 11:42:06+00:00
  edited: false
  hidden: false
  id: 650ae89e1ba30f09679f1e14
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    author:
      avatarUrl: /avatars/83b1fb845f466f4fb666a7c45fe38e66.svg
      fullname: avatar Globle service
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Avatarglobal
      type: user
    createdAt: '2023-09-20T12:42:07.000Z'
    data:
      oid: b259a55af8bf25f82f38738a0eb216c832da6169
      parents:
      - 560fb7b15d0badb409f8cd578a2bfe63bd4b8046
      subject: Update README.md
    id: 650ae89f0000000000000000
    type: commit
  author: Avatarglobal
  created_at: 2023-09-20 11:42:07+00:00
  id: 650ae89f0000000000000000
  oid: b259a55af8bf25f82f38738a0eb216c832da6169
  summary: Update README.md
  type: commit
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/752e536716cb8af27a5463bbf77e48ed.svg
      fullname: Louis Mouhat
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: achiru
      type: user
    createdAt: '2023-09-21T10:01:20.000Z'
    data:
      status: closed
    id: 650c1470215836282600a18d
    type: status-change
  author: achiru
  created_at: 2023-09-21 09:01:20+00:00
  id: 650c1470215836282600a18d
  new_status: closed
  type: status-change
is_pull_request: true
merge_commit_oid: null
num: 67
repo_id: monster-labs/control_v1p_sd15_qrcode_monster
repo_type: model
status: closed
target_branch: refs/heads/main
title: Update README.md
