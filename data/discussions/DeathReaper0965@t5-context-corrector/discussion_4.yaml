!!python/object:huggingface_hub.community.DiscussionWithDetails
author: YokaiKoibito
conflicting_files: null
created_at: 2023-08-11 06:49:23+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/657be320aac476bbb5353b0e725e8893.svg
      fullname: Yokai Koibito
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: YokaiKoibito
      type: user
    createdAt: '2023-08-11T07:49:23.000Z'
    data:
      edited: false
      editors:
      - YokaiKoibito
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9627488255500793
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/657be320aac476bbb5353b0e725e8893.svg
          fullname: Yokai Koibito
          isHf: false
          isPro: false
          name: YokaiKoibito
          type: user
        html: '<p>It would be nice to have a mode in which, for each correction span
          in the diff between the input and output, it gave a logit score for how
          much the correction decreases the perplexity. (I suspect this would mostly
          just be a more complex analysis of the results of the beam search.) Even
          nicer would be if it could output multiple, possibly overlapping candidate
          corrections, each with a score. So for example if the input is "My favourite
          colr is red" it would generate suggestions to correct ''colr'' to either
          ''color'' or ''colour'', each with a logit score.</p>

          '
        raw: It would be nice to have a mode in which, for each correction span in
          the diff between the input and output, it gave a logit score for how much
          the correction decreases the perplexity. (I suspect this would mostly just
          be a more complex analysis of the results of the beam search.) Even nicer
          would be if it could output multiple, possibly overlapping candidate corrections,
          each with a score. So for example if the input is "My favourite colr is
          red" it would generate suggestions to correct 'colr' to either 'color' or
          'colour', each with a logit score.
        updatedAt: '2023-08-11T07:49:23.527Z'
      numEdits: 0
      reactions: []
    id: 64d5e8033ca2924d6e61f690
    type: comment
  author: YokaiKoibito
  content: It would be nice to have a mode in which, for each correction span in the
    diff between the input and output, it gave a logit score for how much the correction
    decreases the perplexity. (I suspect this would mostly just be a more complex
    analysis of the results of the beam search.) Even nicer would be if it could output
    multiple, possibly overlapping candidate corrections, each with a score. So for
    example if the input is "My favourite colr is red" it would generate suggestions
    to correct 'colr' to either 'color' or 'colour', each with a logit score.
  created_at: 2023-08-11 06:49:23+00:00
  edited: false
  hidden: false
  id: 64d5e8033ca2924d6e61f690
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1678756856820-63b2d9ce922f26a27e7538ef.jpeg?w=200&h=200&f=face
      fullname: Praneet Pabolu
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: DeathReaper0965
      type: user
    createdAt: '2023-08-18T00:50:34.000Z'
    data:
      edited: false
      editors:
      - DeathReaper0965
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9527145028114319
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1678756856820-63b2d9ce922f26a27e7538ef.jpeg?w=200&h=200&f=face
          fullname: Praneet Pabolu
          isHf: false
          isPro: false
          name: DeathReaper0965
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;YokaiKoibito&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/YokaiKoibito\"\
          >@<span class=\"underline\">YokaiKoibito</span></a></span>\n\n\t</span></span>\
          \ yes that makes sense. However i suspect it to be a separate project rather\
          \ than the model's ability directly, as HuggingFace platform is meant to\
          \ be the hub for model sharing.<br>This feature involves calculations based\
          \ on model outputs so I'm thinking it would be better to create a GitHub\
          \ repo for this request. Will share with you once done. </p>\n"
        raw: '@YokaiKoibito yes that makes sense. However i suspect it to be a separate
          project rather than the model''s ability directly, as HuggingFace platform
          is meant to be the hub for model sharing.

          This feature involves calculations based on model outputs so I''m thinking
          it would be better to create a GitHub repo for this request. Will share
          with you once done. '
        updatedAt: '2023-08-18T00:50:34.686Z'
      numEdits: 0
      reactions: []
    id: 64dec05a9bc64767a633b61d
    type: comment
  author: DeathReaper0965
  content: '@YokaiKoibito yes that makes sense. However i suspect it to be a separate
    project rather than the model''s ability directly, as HuggingFace platform is
    meant to be the hub for model sharing.

    This feature involves calculations based on model outputs so I''m thinking it
    would be better to create a GitHub repo for this request. Will share with you
    once done. '
  created_at: 2023-08-17 23:50:34+00:00
  edited: false
  hidden: false
  id: 64dec05a9bc64767a633b61d
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: DeathReaper0965/t5-context-corrector
repo_type: model
status: open
target_branch: null
title: 'Feature request: correction scoring.'
