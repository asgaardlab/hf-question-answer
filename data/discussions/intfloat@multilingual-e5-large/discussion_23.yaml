!!python/object:huggingface_hub.community.DiscussionWithDetails
author: dnovak232
conflicting_files: null
created_at: 2024-01-02 21:36:48+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/92dafa71e2e1be5c2296df0e3e8945fa.svg
      fullname: Dino Novak
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dnovak232
      type: user
    createdAt: '2024-01-02T21:36:48.000Z'
    data:
      edited: false
      editors:
      - dnovak232
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9179925322532654
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/92dafa71e2e1be5c2296df0e3e8945fa.svg
          fullname: Dino Novak
          isHf: false
          isPro: false
          name: dnovak232
          type: user
        html: '<p>Hi,<br>this model should fit in free Google cola instance.<br>Any
          sample on how to use it, especially combined with vector store for RAG use?</p>

          '
        raw: "Hi,\r\nthis model should fit in free Google cola instance.\r\nAny sample\
          \ on how to use it, especially combined with vector store for RAG use?"
        updatedAt: '2024-01-02T21:36:48.484Z'
      numEdits: 0
      reactions: []
    id: 659481f0a41c3cbad5335fc3
    type: comment
  author: dnovak232
  content: "Hi,\r\nthis model should fit in free Google cola instance.\r\nAny sample\
    \ on how to use it, especially combined with vector store for RAG use?"
  created_at: 2024-01-02 21:36:48+00:00
  edited: false
  hidden: false
  id: 659481f0a41c3cbad5335fc3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/92dafa71e2e1be5c2296df0e3e8945fa.svg
      fullname: Dino Novak
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dnovak232
      type: user
    createdAt: '2024-01-03T20:15:35.000Z'
    data:
      edited: false
      editors:
      - dnovak232
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5624867677688599
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/92dafa71e2e1be5c2296df0e3e8945fa.svg
          fullname: Dino Novak
          isHf: false
          isPro: false
          name: dnovak232
          type: user
        html: '<p>Hi,<br>managed to create sample with chromadb, here are most important
          parts:</p>

          <h1 id="fix-for-huggingface-embeddings-and-chromadb-latest-version">Fix
          for huggingface embeddings and chromadb latest version</h1>

          <p>from chromadb.utils import embedding_functions<br>class MyEmbeddingFunction(EmbeddingFunction[Documents]):<br>    def
          <strong>call</strong>(self, input: Documents) -&gt; Embeddings:<br>        sentence_transformer_ef
          = embedding_functions.SentenceTransformerEmbeddingFunction(model_name="intfloat/multilingual-e5-large")<br>        embeddings
          = sentence_transformer_ef(input)<br>        return embeddings<br>custom
          = MyEmbeddingFunction()</p>

          <h1 id="initialize-the-chromadb-directory-and-client">Initialize the chromadb
          directory, and client.</h1>

          <p>chroma_client = chromadb.PersistentClient(path="./chroma/RAG_DB")<br>chroma_collection  =
          chroma_client.get_or_create_collection(name=f"ProductsRag", embedding_function=custom)</p>

          <p>I can add products to DB and as it lasts some time it looks like it is
          using correct sentence transformer:<br>chroma_collection.add(<br>    documents=products_list,<br>    ids=ids<br>)</p>

          <p>and then I can successfully query the cromadb:<br>queryStr = "Some question
          to ask"<br>results = chroma_collection.query(<br>    query_texts=queryStr,<br>    n_results=10,<br>    include=[''documents'',
          ''distances'']<br>)<br>print(len(results["documents"][0]))<br>i = 0<br>for
          value in results["documents"][0]:<br>    i = i + 1<br>    print(f"DOC {i}:")<br>    print(value)</p>

          '
        raw: "Hi,\nmanaged to create sample with chromadb, here are most important\
          \ parts:\n\n# Fix for huggingface embeddings and chromadb latest version\n\
          from chromadb.utils import embedding_functions\nclass MyEmbeddingFunction(EmbeddingFunction[Documents]):\n\
          \    def __call__(self, input: Documents) -> Embeddings:\n        sentence_transformer_ef\
          \ = embedding_functions.SentenceTransformerEmbeddingFunction(model_name=\"\
          intfloat/multilingual-e5-large\")\n        embeddings = sentence_transformer_ef(input)\n\
          \        return embeddings\ncustom = MyEmbeddingFunction()\n# Initialize\
          \ the chromadb directory, and client.\nchroma_client = chromadb.PersistentClient(path=\"\
          ./chroma/RAG_DB\")\nchroma_collection  = chroma_client.get_or_create_collection(name=f\"\
          ProductsRag\", embedding_function=custom)\n\nI can add products to DB and\
          \ as it lasts some time it looks like it is using correct sentence transformer:\n\
          chroma_collection.add(\n    documents=products_list,\n    ids=ids\n)\n\n\
          and then I can successfully query the cromadb:\nqueryStr = \"Some question\
          \ to ask\"\nresults = chroma_collection.query(\n    query_texts=queryStr,\n\
          \    n_results=10,\n    include=['documents', 'distances']\n)\nprint(len(results[\"\
          documents\"][0]))\ni = 0\nfor value in results[\"documents\"][0]:\n    i\
          \ = i + 1\n    print(f\"DOC {i}:\")\n    print(value)\n\n"
        updatedAt: '2024-01-03T20:15:35.824Z'
      numEdits: 0
      reactions: []
      relatedEventId: 6595c067379d7baa5ad5383a
    id: 6595c067379d7baa5ad53837
    type: comment
  author: dnovak232
  content: "Hi,\nmanaged to create sample with chromadb, here are most important parts:\n\
    \n# Fix for huggingface embeddings and chromadb latest version\nfrom chromadb.utils\
    \ import embedding_functions\nclass MyEmbeddingFunction(EmbeddingFunction[Documents]):\n\
    \    def __call__(self, input: Documents) -> Embeddings:\n        sentence_transformer_ef\
    \ = embedding_functions.SentenceTransformerEmbeddingFunction(model_name=\"intfloat/multilingual-e5-large\"\
    )\n        embeddings = sentence_transformer_ef(input)\n        return embeddings\n\
    custom = MyEmbeddingFunction()\n# Initialize the chromadb directory, and client.\n\
    chroma_client = chromadb.PersistentClient(path=\"./chroma/RAG_DB\")\nchroma_collection\
    \  = chroma_client.get_or_create_collection(name=f\"ProductsRag\", embedding_function=custom)\n\
    \nI can add products to DB and as it lasts some time it looks like it is using\
    \ correct sentence transformer:\nchroma_collection.add(\n    documents=products_list,\n\
    \    ids=ids\n)\n\nand then I can successfully query the cromadb:\nqueryStr =\
    \ \"Some question to ask\"\nresults = chroma_collection.query(\n    query_texts=queryStr,\n\
    \    n_results=10,\n    include=['documents', 'distances']\n)\nprint(len(results[\"\
    documents\"][0]))\ni = 0\nfor value in results[\"documents\"][0]:\n    i = i +\
    \ 1\n    print(f\"DOC {i}:\")\n    print(value)\n\n"
  created_at: 2024-01-03 20:15:35+00:00
  edited: false
  hidden: false
  id: 6595c067379d7baa5ad53837
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/92dafa71e2e1be5c2296df0e3e8945fa.svg
      fullname: Dino Novak
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dnovak232
      type: user
    createdAt: '2024-01-03T20:15:35.000Z'
    data:
      status: closed
    id: 6595c067379d7baa5ad5383a
    type: status-change
  author: dnovak232
  created_at: 2024-01-03 20:15:35+00:00
  id: 6595c067379d7baa5ad5383a
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 23
repo_id: intfloat/multilingual-e5-large
repo_type: model
status: closed
target_branch: null
title: Google collaborated sample - RAG use
