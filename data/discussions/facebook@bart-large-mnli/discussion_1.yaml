!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Rogerx98
conflicting_files: null
created_at: 2022-06-24 09:31:01+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/e29804f4123a3852f641d56583326754.svg
      fullname: Roger
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Rogerx98
      type: user
    createdAt: '2022-06-24T10:31:01.000Z'
    data:
      edited: true
      editors:
      - julien-c
      - Rogerx98
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5dd96eb166059660ed1ee413/NQtzmrDdbG0H8qkZvRyGk.jpeg?w=200&h=200&f=face
          fullname: Julien Chaumond
          isHf: true
          isPro: true
          name: julien-c
          type: user
        html: "<p>Hi!</p>\n<p>I'm trying to classify the sentences of a specific column\
          \ into three labels with Bart Large MNLI. The problem is that the output\
          \ of the model is \"sentence + the three labels + the scores for each label.\
          \ Example:</p>\n<pre><code class=\"language-json\"><span class=\"hljs-punctuation\"\
          >{</span>'sequence'<span class=\"hljs-punctuation\">:</span> 'Growing special\
          \ event set production/fabrication company is seeking a full-time accountant\
          \ with experience in entertainment accounting. This position is located\
          \ in a fast-paced production office located near downtown Los Angeles.Responsibilities<span\
          \ class=\"hljs-punctuation\">:</span>\xE2\u20AC\xA2 Payroll management for\
          \ <span class=\"hljs-number\">12</span>+ employees<span class=\"hljs-punctuation\"\
          >,</span> including processing new employee paperwork.'<span class=\"hljs-punctuation\"\
          >,</span> 'labels'<span class=\"hljs-punctuation\">:</span> <span class=\"\
          hljs-punctuation\">[</span>'senior'<span class=\"hljs-punctuation\">,</span>\
          \ 'middle'<span class=\"hljs-punctuation\">,</span> 'junior'<span class=\"\
          hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span> 'scores'<span\
          \ class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span\
          \ class=\"hljs-number\">0.5461998581886292</span><span class=\"hljs-punctuation\"\
          >,</span> <span class=\"hljs-number\">0.327671617269516</span><span class=\"\
          hljs-punctuation\">,</span> <span class=\"hljs-number\">0.12612852454185486</span><span\
          \ class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">}</span>\n\
          </code></pre>\n<p>What I need is to get a single column with only the label\
          \ with the highest score, in this case \"senior\".</p>\n<p>Any feedback\
          \ which can help me to do it? Right now my code looks like:</p>\n<pre><code\
          \ class=\"language-python\">df_test = df.sample(frac = <span class=\"hljs-number\"\
          >0.0025</span>)\n<span class=\"hljs-comment\">#print(df_test)</span>\n\n\
          classifier = pipeline(<span class=\"hljs-string\">\"zero-shot-classification\"\
          </span>,\n                      model=<span class=\"hljs-string\">\"facebook/bart-large-mnli\"\
          </span>)\n\nsequence_to_classify = df_test[<span class=\"hljs-string\">\"\
          full_description\"</span>]\ncandidate_labels = [<span class=\"hljs-string\"\
          >'senior'</span>, <span class=\"hljs-string\">'middle'</span>, <span class=\"\
          hljs-string\">'junior'</span>]\n<span class=\"hljs-comment\">#result = classifier(sequence_to_classify,\
          \ candidate_labels)</span>\n\n\ndf_test[<span class=\"hljs-string\">\"seniority_label\"\
          </span>] = df_test.apply(<span class=\"hljs-keyword\">lambda</span> x: classifier(x.full_description,\
          \ candidate_labels, multi_label=<span class=\"hljs-literal\">True</span>,),\
          \ axis=<span class=\"hljs-number\">1</span>)\n<span class=\"hljs-built_in\"\
          >print</span>(df_test)\n\ndf_test.to_csv(<span class=\"hljs-string\">\"\
          Seniority_Classified_SampleTest.csv\"</span>)\n</code></pre>\n<p>And the\
          \ code I've followed comes from this web, where they do receive a column\
          \ with labels as an output idk how: <a rel=\"nofollow\" href=\"https://practicaldatascience.co.uk/machine-learning/how-to-classify-customer-service-emails-with-bart-mnli\"\
          >https://practicaldatascience.co.uk/machine-learning/how-to-classify-customer-service-emails-with-bart-mnli</a></p>\n"
        raw: "Hi!\n\nI'm trying to classify the sentences of a specific column into\
          \ three labels with Bart Large MNLI. The problem is that the output of the\
          \ model is \"sentence + the three labels + the scores for each label. Example:\n\
          \n```json\n{'sequence': 'Growing special event set production/fabrication\
          \ company is seeking a full-time accountant with experience in entertainment\
          \ accounting. This position is located in a fast-paced production office\
          \ located near downtown Los Angeles.Responsibilities:\xE2\u20AC\xA2 Payroll\
          \ management for 12+ employees, including processing new employee paperwork.',\
          \ 'labels': ['senior', 'middle', 'junior'], 'scores': [0.5461998581886292,\
          \ 0.327671617269516, 0.12612852454185486]}\n```\nWhat I need is to get a\
          \ single column with only the label with the highest score, in this case\
          \ \"senior\".\n\nAny feedback which can help me to do it? Right now my code\
          \ looks like:\n\n\n```python\ndf_test = df.sample(frac = 0.0025)\n#print(df_test)\n\
          \nclassifier = pipeline(\"zero-shot-classification\",\n                \
          \      model=\"facebook/bart-large-mnli\")\n\nsequence_to_classify = df_test[\"\
          full_description\"]\ncandidate_labels = ['senior', 'middle', 'junior']\n\
          #result = classifier(sequence_to_classify, candidate_labels)\n\n\ndf_test[\"\
          seniority_label\"] = df_test.apply(lambda x: classifier(x.full_description,\
          \ candidate_labels, multi_label=True,), axis=1)\nprint(df_test)\n\ndf_test.to_csv(\"\
          Seniority_Classified_SampleTest.csv\")\n```\n\n\n\nAnd the code I've followed\
          \ comes from this web, where they do receive a column with labels as an\
          \ output idk how: https://practicaldatascience.co.uk/machine-learning/how-to-classify-customer-service-emails-with-bart-mnli"
        updatedAt: '2022-06-24T18:20:28.926Z'
      numEdits: 1
      reactions: []
    id: 62b592656b29cfa1de347c56
    type: comment
  author: Rogerx98
  content: "Hi!\n\nI'm trying to classify the sentences of a specific column into\
    \ three labels with Bart Large MNLI. The problem is that the output of the model\
    \ is \"sentence + the three labels + the scores for each label. Example:\n\n```json\n\
    {'sequence': 'Growing special event set production/fabrication company is seeking\
    \ a full-time accountant with experience in entertainment accounting. This position\
    \ is located in a fast-paced production office located near downtown Los Angeles.Responsibilities:\xE2\
    \u20AC\xA2 Payroll management for 12+ employees, including processing new employee\
    \ paperwork.', 'labels': ['senior', 'middle', 'junior'], 'scores': [0.5461998581886292,\
    \ 0.327671617269516, 0.12612852454185486]}\n```\nWhat I need is to get a single\
    \ column with only the label with the highest score, in this case \"senior\".\n\
    \nAny feedback which can help me to do it? Right now my code looks like:\n\n\n\
    ```python\ndf_test = df.sample(frac = 0.0025)\n#print(df_test)\n\nclassifier =\
    \ pipeline(\"zero-shot-classification\",\n                      model=\"facebook/bart-large-mnli\"\
    )\n\nsequence_to_classify = df_test[\"full_description\"]\ncandidate_labels =\
    \ ['senior', 'middle', 'junior']\n#result = classifier(sequence_to_classify, candidate_labels)\n\
    \n\ndf_test[\"seniority_label\"] = df_test.apply(lambda x: classifier(x.full_description,\
    \ candidate_labels, multi_label=True,), axis=1)\nprint(df_test)\n\ndf_test.to_csv(\"\
    Seniority_Classified_SampleTest.csv\")\n```\n\n\n\nAnd the code I've followed\
    \ comes from this web, where they do receive a column with labels as an output\
    \ idk how: https://practicaldatascience.co.uk/machine-learning/how-to-classify-customer-service-emails-with-bart-mnli"
  created_at: 2022-06-24 09:31:01+00:00
  edited: true
  hidden: false
  id: 62b592656b29cfa1de347c56
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5dd96eb166059660ed1ee413/NQtzmrDdbG0H8qkZvRyGk.jpeg?w=200&h=200&f=face
      fullname: Julien Chaumond
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: true
      name: julien-c
      type: user
    createdAt: '2022-06-24T18:21:04.000Z'
    data:
      edited: false
      editors:
      - julien-c
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/5dd96eb166059660ed1ee413/NQtzmrDdbG0H8qkZvRyGk.jpeg?w=200&h=200&f=face
          fullname: Julien Chaumond
          isHf: true
          isPro: true
          name: julien-c
          type: user
        html: "<p>(<span data-props=\"{&quot;user&quot;:&quot;Rogerx98&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Rogerx98\">@<span class=\"\
          underline\">Rogerx98</span></a></span>\n\n\t</span></span> took the liberty\
          \ of formatting your code blocks)</p>\n"
        raw: (@Rogerx98 took the liberty of formatting your code blocks)
        updatedAt: '2022-06-24T18:21:04.253Z'
      numEdits: 0
      reactions: []
    id: 62b60090d25e06ad3e8c67f0
    type: comment
  author: julien-c
  content: (@Rogerx98 took the liberty of formatting your code blocks)
  created_at: 2022-06-24 17:21:04+00:00
  edited: false
  hidden: false
  id: 62b60090d25e06ad3e8c67f0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/e29804f4123a3852f641d56583326754.svg
      fullname: Roger
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Rogerx98
      type: user
    createdAt: '2022-06-24T18:23:12.000Z'
    data:
      edited: false
      editors:
      - Rogerx98
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/e29804f4123a3852f641d56583326754.svg
          fullname: Roger
          isHf: false
          isPro: false
          name: Rogerx98
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;julien-c&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/julien-c\">@<span class=\"\
          underline\">julien-c</span></a></span>\n\n\t</span></span> Thanks!</p>\n"
        raw: '@julien-c Thanks!'
        updatedAt: '2022-06-24T18:23:12.207Z'
      numEdits: 0
      reactions: []
    id: 62b60110df4ad42a8a013f05
    type: comment
  author: Rogerx98
  content: '@julien-c Thanks!'
  created_at: 2022-06-24 17:23:12+00:00
  edited: false
  hidden: false
  id: 62b60110df4ad42a8a013f05
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
      fullname: Patrick von Platen
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: patrickvonplaten
      type: user
    createdAt: '2022-06-25T17:05:37.000Z'
    data:
      edited: false
      editors:
      - patrickvonplaten
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
          fullname: Patrick von Platen
          isHf: true
          isPro: false
          name: patrickvonplaten
          type: user
        html: "<p>Sorry I don't fully understand here <span data-props=\"{&quot;user&quot;:&quot;Rogerx98&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/Rogerx98\"\
          >@<span class=\"underline\">Rogerx98</span></a></span>\n\n\t</span></span>\
          \ - If the output is in the format as you described above can't you just\
          \ always just take the label corresponding of the highest probability? </p>\n\
          <pre><code class=\"language-python\">index = torch.argmax(classifier_output[<span\
          \ class=\"hljs-string\">\"scores\"</span>])\nlabel = classifier_output[<span\
          \ class=\"hljs-string\">\"labels\"</span>][index]\n</code></pre>\n<p>I assume\
          \ I'm missing something here?</p>\n"
        raw: "Sorry I don't fully understand here @Rogerx98 - If the output is in\
          \ the format as you described above can't you just always just take the\
          \ label corresponding of the highest probability? \n\n```python\nindex =\
          \ torch.argmax(classifier_output[\"scores\"])\nlabel = classifier_output[\"\
          labels\"][index]\n```\n\nI assume I'm missing something here?"
        updatedAt: '2022-06-25T17:05:37.365Z'
      numEdits: 0
      reactions: []
    id: 62b74061a0860136ce1b906f
    type: comment
  author: patrickvonplaten
  content: "Sorry I don't fully understand here @Rogerx98 - If the output is in the\
    \ format as you described above can't you just always just take the label corresponding\
    \ of the highest probability? \n\n```python\nindex = torch.argmax(classifier_output[\"\
    scores\"])\nlabel = classifier_output[\"labels\"][index]\n```\n\nI assume I'm\
    \ missing something here?"
  created_at: 2022-06-25 16:05:37+00:00
  edited: false
  hidden: false
  id: 62b74061a0860136ce1b906f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/e29804f4123a3852f641d56583326754.svg
      fullname: Roger
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Rogerx98
      type: user
    createdAt: '2022-07-03T13:58:46.000Z'
    data:
      edited: false
      editors:
      - Rogerx98
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/e29804f4123a3852f641d56583326754.svg
          fullname: Roger
          isHf: false
          isPro: false
          name: Rogerx98
          type: user
        html: "<p>Thanks <span data-props=\"{&quot;user&quot;:&quot;patrickvonplaten&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/patrickvonplaten\"\
          >@<span class=\"underline\">patrickvonplaten</span></a></span>\n\n\t</span></span>\
          \ , that worked, with a for loop I could extract the labels and add them\
          \ into a new column!</p>\n"
        raw: Thanks @patrickvonplaten , that worked, with a for loop I could extract
          the labels and add them into a new column!
        updatedAt: '2022-07-03T13:58:46.659Z'
      numEdits: 0
      reactions: []
    id: 62c1a096033f0c241279cc3b
    type: comment
  author: Rogerx98
  content: Thanks @patrickvonplaten , that worked, with a for loop I could extract
    the labels and add them into a new column!
  created_at: 2022-07-03 12:58:46+00:00
  edited: false
  hidden: false
  id: 62c1a096033f0c241279cc3b
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: facebook/bart-large-mnli
repo_type: model
status: open
target_branch: null
title: Extracting Label
