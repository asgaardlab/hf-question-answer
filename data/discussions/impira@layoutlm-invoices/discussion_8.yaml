!!python/object:huggingface_hub.community.DiscussionWithDetails
author: PriyamGoyal
conflicting_files: null
created_at: 2024-01-11 08:49:49+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/bb7a3790aa6024b4169aee418484c1c6.svg
      fullname: Priyam Goyal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: PriyamGoyal
      type: user
    createdAt: '2024-01-11T08:49:49.000Z'
    data:
      edited: true
      editors:
      - PriyamGoyal
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8156698346138
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/bb7a3790aa6024b4169aee418484c1c6.svg
          fullname: Priyam Goyal
          isHf: false
          isPro: false
          name: PriyamGoyal
          type: user
        html: '<p>I am using this model to make a pdf parser that detects the Org
          name, date and the invoice number. Overall the program is working as per
          expectations. There are pdf''s where the detected field is correct but not
          what i want {for eg: asking for date returns the delivery date mentioned
          in the invoice instead of the invoice date}. Is it possible to configure
          the model in a way for it to output the top n number of found items with
          their scores instead of just one.</p>

          <p>current output: What is the date [{''score'': 0.9999912977218628, ''answer'':
          ''06-01-2021'', ''word_ids'': [52], ''page'': 0}]</p>

          <p>required output: What is the date [{''score'': 0.9999912977218628, ''answer'':
          ''06-01-2021'', ''word_ids'': [52], ''page'': 0},{''score'': 0.98xxx, ''answer'':
          ''09-02-2021'', ''word_ids'': [xx], ''page'': x}, item 3,item 4 etc.]</p>

          <p>code:<br>import os<br>from docquery import document, pipeline<br>p =
          pipeline("document-question-answering", model="impira/layoutlm-invoices",
          revision=''fdf56765f8bdf236b2bd45d23347066475aa730a'')<br>def doc_parse(file_path):<br>    #
          Load document and process questions<br>    doc = document.load_document(file_path)<br>    file_name
          = os.path.basename(file_path).split(''/'')[-1]<br>    questions = [<br>        "What
          is the organization or company name",<br>        "What is the date",<br>        "What
          is the product order [po] number or ref number?",<br>        "What is the
          total?"<br>    ]<br>    print(f"Processing document: {file_name}")<br>    for
          question in questions:<br>        print(question, p(question=question, **doc.context))<br>    print("\n")  #
          Add a newline for better readability between documents</p>

          <p>folder_path = r""  # Update with the path to your folder<br>file_names
          = [file for file in os.listdir(folder_path) if file.endswith(".pdf")]</p>

          <p>for file_name in file_names:<br>    file_path = os.path.join(folder_path,
          file_name)<br>doc_parse(file_path)</p>

          '
        raw: "I am using this model to make a pdf parser that detects the Org name,\
          \ date and the invoice number. Overall the program is working as per expectations.\
          \ There are pdf's where the detected field is correct but not what i want\
          \ {for eg: asking for date returns the delivery date mentioned in the invoice\
          \ instead of the invoice date}. Is it possible to configure the model in\
          \ a way for it to output the top n number of found items with their scores\
          \ instead of just one.\n\ncurrent output: What is the date [{'score': 0.9999912977218628,\
          \ 'answer': '06-01-2021', 'word_ids': [52], 'page': 0}]\n\nrequired output:\
          \ What is the date [{'score': 0.9999912977218628, 'answer': '06-01-2021',\
          \ 'word_ids': [52], 'page': 0},{'score': 0.98xxx, 'answer': '09-02-2021',\
          \ 'word_ids': [xx], 'page': x}, item 3,item 4 etc.]\n\ncode: \nimport os\n\
          from docquery import document, pipeline\np = pipeline(\"document-question-answering\"\
          , model=\"impira/layoutlm-invoices\", revision='fdf56765f8bdf236b2bd45d23347066475aa730a')\n\
          def doc_parse(file_path):\n    # Load document and process questions\n \
          \   doc = document.load_document(file_path)\n    file_name = os.path.basename(file_path).split('/')[-1]\n\
          \    questions = [\n        \"What is the organization or company name\"\
          ,\n        \"What is the date\",\n        \"What is the product order [po]\
          \ number or ref number?\",\n        \"What is the total?\"\n    ]\n    print(f\"\
          Processing document: {file_name}\")\n    for question in questions:\n  \
          \      print(question, p(question=question, **doc.context))\n    print(\"\
          \\n\")  # Add a newline for better readability between documents\n\nfolder_path\
          \ = r\"<File Path>\"  # Update with the path to your folder\nfile_names\
          \ = [file for file in os.listdir(folder_path) if file.endswith(\".pdf\"\
          )]\n\nfor file_name in file_names:\n    file_path = os.path.join(folder_path,\
          \ file_name)\ndoc_parse(file_path)\n"
        updatedAt: '2024-01-11T08:51:56.710Z'
      numEdits: 4
      reactions: []
    id: 659fabadd729f54013eb46d6
    type: comment
  author: PriyamGoyal
  content: "I am using this model to make a pdf parser that detects the Org name,\
    \ date and the invoice number. Overall the program is working as per expectations.\
    \ There are pdf's where the detected field is correct but not what i want {for\
    \ eg: asking for date returns the delivery date mentioned in the invoice instead\
    \ of the invoice date}. Is it possible to configure the model in a way for it\
    \ to output the top n number of found items with their scores instead of just\
    \ one.\n\ncurrent output: What is the date [{'score': 0.9999912977218628, 'answer':\
    \ '06-01-2021', 'word_ids': [52], 'page': 0}]\n\nrequired output: What is the\
    \ date [{'score': 0.9999912977218628, 'answer': '06-01-2021', 'word_ids': [52],\
    \ 'page': 0},{'score': 0.98xxx, 'answer': '09-02-2021', 'word_ids': [xx], 'page':\
    \ x}, item 3,item 4 etc.]\n\ncode: \nimport os\nfrom docquery import document,\
    \ pipeline\np = pipeline(\"document-question-answering\", model=\"impira/layoutlm-invoices\"\
    , revision='fdf56765f8bdf236b2bd45d23347066475aa730a')\ndef doc_parse(file_path):\n\
    \    # Load document and process questions\n    doc = document.load_document(file_path)\n\
    \    file_name = os.path.basename(file_path).split('/')[-1]\n    questions = [\n\
    \        \"What is the organization or company name\",\n        \"What is the\
    \ date\",\n        \"What is the product order [po] number or ref number?\",\n\
    \        \"What is the total?\"\n    ]\n    print(f\"Processing document: {file_name}\"\
    )\n    for question in questions:\n        print(question, p(question=question,\
    \ **doc.context))\n    print(\"\\n\")  # Add a newline for better readability\
    \ between documents\n\nfolder_path = r\"<File Path>\"  # Update with the path\
    \ to your folder\nfile_names = [file for file in os.listdir(folder_path) if file.endswith(\"\
    .pdf\")]\n\nfor file_name in file_names:\n    file_path = os.path.join(folder_path,\
    \ file_name)\ndoc_parse(file_path)\n"
  created_at: 2024-01-11 08:49:49+00:00
  edited: true
  hidden: false
  id: 659fabadd729f54013eb46d6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/bb7a3790aa6024b4169aee418484c1c6.svg
      fullname: Priyam Goyal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: PriyamGoyal
      type: user
    createdAt: '2024-01-11T11:34:25.000Z'
    data:
      edited: true
      editors:
      - PriyamGoyal
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6786812543869019
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/bb7a3790aa6024b4169aee418484c1c6.svg
          fullname: Priyam Goyal
          isHf: false
          isPro: false
          name: PriyamGoyal
          type: user
        html: '<p>I found it myself guys, Leaving this code here for other users who
          might have the same doubt</p>

          <p>import os<br>from docquery import document, pipeline<br>import fontstyle
          #Only for styling, no functionality<br>p = pipeline("document-question-answering",
          model="impira/layoutlm-invoices", revision=''fdf56765f8bdf236b2bd45d23347066475aa730a'')<br>def
          doc_parse(file_path):<br>    # Load document and process questions<br>    doc
          = document.load_document(file_path)<br>    file_name = os.path.basename(file_path).split(''/'')[-1]<br>    questions
          = [<br>        "What is the organization or company name",<br>        "What
          is the date",<br>        "What is the product order [po] number or ref number?",<br>        "What
          is the total?"<br>    ]<br>    print(f"Processing document: {file_name}")<br>    for
          question in questions:<br>        answers = p(question=question, **doc.context,
          top_k=5)  # Get top 5 answers<br>        top_answers = [{"score": ans["score"],
          "answer": ans["answer"]} for ans in answers]<br>        print(fontstyle.apply(question,
          ''bold/Underline''), top_answers)<br>    print("\n")</p>

          <p>folder_path = r""  # Update with the path to your folder</p>

          <p>file_names = [file for file in os.listdir(folder_path) if file.endswith(".pdf")]</p>

          <p>for file_name in file_names:<br>    file_path = os.path.join(folder_path,
          file_name)<br>    doc_parse(file_path)</p>

          <p>Output: What is the date [{''score'': 0.9111425280570984, ''answer'':
          ''23-May-23''}, {''score'': 0.7162927389144897, ''answer'': ''23-May-23''},
          {''score'': 0.15985803306102753, ''answer'': ''2-May-23''}, {''score'':
          0.004842275753617287, ''answer'': ''23-May-23''}, {''score'': 0.003029912244528532,
          ''answer'': ''80''}]</p>

          '
        raw: "I found it myself guys, Leaving this code here for other users who might\
          \ have the same doubt\n\nimport os\nfrom docquery import document, pipeline\n\
          import fontstyle #Only for styling, no functionality\np = pipeline(\"document-question-answering\"\
          , model=\"impira/layoutlm-invoices\", revision='fdf56765f8bdf236b2bd45d23347066475aa730a')\n\
          def doc_parse(file_path):\n    # Load document and process questions\n \
          \   doc = document.load_document(file_path)\n    file_name = os.path.basename(file_path).split('/')[-1]\n\
          \    questions = [\n        \"What is the organization or company name\"\
          ,\n        \"What is the date\",\n        \"What is the product order [po]\
          \ number or ref number?\",\n        \"What is the total?\"\n    ]\n    print(f\"\
          Processing document: {file_name}\")\n    for question in questions:\n  \
          \      answers = p(question=question, **doc.context, top_k=5)  # Get top\
          \ 5 answers\n        top_answers = [{\"score\": ans[\"score\"], \"answer\"\
          : ans[\"answer\"]} for ans in answers]\n        print(fontstyle.apply(question,\
          \ 'bold/Underline'), top_answers)\n    print(\"\\n\")\n\nfolder_path = r\"\
          \"  # Update with the path to your folder\n\nfile_names = [file for file\
          \ in os.listdir(folder_path) if file.endswith(\".pdf\")]\n\nfor file_name\
          \ in file_names:\n    file_path = os.path.join(folder_path, file_name)\n\
          \    doc_parse(file_path)\n\n\nOutput: What is the date [{'score': 0.9111425280570984,\
          \ 'answer': '23-May-23'}, {'score': 0.7162927389144897, 'answer': '23-May-23'},\
          \ {'score': 0.15985803306102753, 'answer': '2-May-23'}, {'score': 0.004842275753617287,\
          \ 'answer': '23-May-23'}, {'score': 0.003029912244528532, 'answer': '80'}]\n"
        updatedAt: '2024-01-11T11:34:47.506Z'
      numEdits: 1
      reactions: []
    id: 659fd241697a41751bbfd187
    type: comment
  author: PriyamGoyal
  content: "I found it myself guys, Leaving this code here for other users who might\
    \ have the same doubt\n\nimport os\nfrom docquery import document, pipeline\n\
    import fontstyle #Only for styling, no functionality\np = pipeline(\"document-question-answering\"\
    , model=\"impira/layoutlm-invoices\", revision='fdf56765f8bdf236b2bd45d23347066475aa730a')\n\
    def doc_parse(file_path):\n    # Load document and process questions\n    doc\
    \ = document.load_document(file_path)\n    file_name = os.path.basename(file_path).split('/')[-1]\n\
    \    questions = [\n        \"What is the organization or company name\",\n  \
    \      \"What is the date\",\n        \"What is the product order [po] number\
    \ or ref number?\",\n        \"What is the total?\"\n    ]\n    print(f\"Processing\
    \ document: {file_name}\")\n    for question in questions:\n        answers =\
    \ p(question=question, **doc.context, top_k=5)  # Get top 5 answers\n        top_answers\
    \ = [{\"score\": ans[\"score\"], \"answer\": ans[\"answer\"]} for ans in answers]\n\
    \        print(fontstyle.apply(question, 'bold/Underline'), top_answers)\n   \
    \ print(\"\\n\")\n\nfolder_path = r\"\"  # Update with the path to your folder\n\
    \nfile_names = [file for file in os.listdir(folder_path) if file.endswith(\".pdf\"\
    )]\n\nfor file_name in file_names:\n    file_path = os.path.join(folder_path,\
    \ file_name)\n    doc_parse(file_path)\n\n\nOutput: What is the date [{'score':\
    \ 0.9111425280570984, 'answer': '23-May-23'}, {'score': 0.7162927389144897, 'answer':\
    \ '23-May-23'}, {'score': 0.15985803306102753, 'answer': '2-May-23'}, {'score':\
    \ 0.004842275753617287, 'answer': '23-May-23'}, {'score': 0.003029912244528532,\
    \ 'answer': '80'}]\n"
  created_at: 2024-01-11 11:34:25+00:00
  edited: true
  hidden: false
  id: 659fd241697a41751bbfd187
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/bb7a3790aa6024b4169aee418484c1c6.svg
      fullname: Priyam Goyal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: PriyamGoyal
      type: user
    createdAt: '2024-01-11T11:34:48.000Z'
    data:
      status: closed
    id: 659fd258d2e705b3fb7b1615
    type: status-change
  author: PriyamGoyal
  created_at: 2024-01-11 11:34:48+00:00
  id: 659fd258d2e705b3fb7b1615
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 8
repo_id: impira/layoutlm-invoices
repo_type: model
status: closed
target_branch: null
title: Get multiple answers
