!!python/object:huggingface_hub.community.DiscussionWithDetails
author: yogesh882
conflicting_files: null
created_at: 2022-10-19 16:50:55+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/11aaa022fab90ef5b1779db52e014fa2.svg
      fullname: yogesh
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: yogesh882
      type: user
    createdAt: '2022-10-19T17:50:55.000Z'
    data:
      edited: false
      editors:
      - yogesh882
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/11aaa022fab90ef5b1779db52e014fa2.svg
          fullname: yogesh
          isHf: false
          isPro: false
          name: yogesh882
          type: user
        html: '<p>This is a really great fine tuned model , I would like to know how
          to separate out only the extractive keywords from the abstractive ones ?
          thanks</p>

          '
        raw: This is a really great fine tuned model , I would like to know how to
          separate out only the extractive keywords from the abstractive ones ? thanks
        updatedAt: '2022-10-19T17:50:55.970Z'
      numEdits: 0
      reactions: []
    id: 635038ff1d81beb8e246c5b6
    type: comment
  author: yogesh882
  content: This is a really great fine tuned model , I would like to know how to separate
    out only the extractive keywords from the abstractive ones ? thanks
  created_at: 2022-10-19 16:50:55+00:00
  edited: false
  hidden: false
  id: 635038ff1d81beb8e246c5b6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1640511710953-noauth.jpeg?w=200&h=200&f=face
      fullname: Thomas De Decker
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: DeDeckerThomas
      type: user
    createdAt: '2022-10-19T18:13:55.000Z'
    data:
      edited: true
      editors:
      - DeDeckerThomas
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1640511710953-noauth.jpeg?w=200&h=200&f=face
          fullname: Thomas De Decker
          isHf: false
          isPro: false
          name: DeDeckerThomas
          type: user
        html: '<p>Hi!</p>

          <p>That''s easy to do. I recommend that you split the text into a word list
          and remove all punctuation marks.<br>Then use the Python in operator to
          see if the keyphrase is in that list. If the key phrase is in the list,
          it is extractive, otherwise it is abstractive.</p>

          <p>I hope this helps!</p>

          '
        raw: 'Hi!


          That''s easy to do. I recommend that you split the text into a word list
          and remove all punctuation marks.

          Then use the Python in operator to see if the keyphrase is in that list.
          If the key phrase is in the list, it is extractive, otherwise it is abstractive.


          I hope this helps!'
        updatedAt: '2022-10-19T18:25:12.545Z'
      numEdits: 3
      reactions: []
    id: 63503e63a1e94729363eb9aa
    type: comment
  author: DeDeckerThomas
  content: 'Hi!


    That''s easy to do. I recommend that you split the text into a word list and remove
    all punctuation marks.

    Then use the Python in operator to see if the keyphrase is in that list. If the
    key phrase is in the list, it is extractive, otherwise it is abstractive.


    I hope this helps!'
  created_at: 2022-10-19 17:13:55+00:00
  edited: true
  hidden: false
  id: 63503e63a1e94729363eb9aa
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/11aaa022fab90ef5b1779db52e014fa2.svg
      fullname: yogesh
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: yogesh882
      type: user
    createdAt: '2022-10-19T18:45:37.000Z'
    data:
      edited: false
      editors:
      - yogesh882
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/11aaa022fab90ef5b1779db52e014fa2.svg
          fullname: yogesh
          isHf: false
          isPro: false
          name: yogesh882
          type: user
        html: '<p>Hi!,<br>Thanks for the reply , I was curious about if there is a
          way i can tweak the pipeline maybe by giving an argument or so to extract
          only the extractive/abstractive key phrases , sometimes splitting the words
          and checking we might miss out certain -ngrams keyphrases ..<br>Thanks!</p>

          '
        raw: 'Hi!,

          Thanks for the reply , I was curious about if there is a way i can tweak
          the pipeline maybe by giving an argument or so to extract only the extractive/abstractive
          key phrases , sometimes splitting the words and checking we might miss out
          certain -ngrams keyphrases ..

          Thanks!'
        updatedAt: '2022-10-19T18:45:37.395Z'
      numEdits: 0
      reactions: []
    id: 635045d1c5acdbefb8ece7f7
    type: comment
  author: yogesh882
  content: 'Hi!,

    Thanks for the reply , I was curious about if there is a way i can tweak the pipeline
    maybe by giving an argument or so to extract only the extractive/abstractive key
    phrases , sometimes splitting the words and checking we might miss out certain
    -ngrams keyphrases ..

    Thanks!'
  created_at: 2022-10-19 17:45:37+00:00
  edited: false
  hidden: false
  id: 635045d1c5acdbefb8ece7f7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1640511710953-noauth.jpeg?w=200&h=200&f=face
      fullname: Thomas De Decker
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: DeDeckerThomas
      type: user
    createdAt: '2022-10-24T16:39:21.000Z'
    data:
      edited: true
      editors:
      - DeDeckerThomas
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1640511710953-noauth.jpeg?w=200&h=200&f=face
          fullname: Thomas De Decker
          isHf: false
          isPro: false
          name: DeDeckerThomas
          type: user
        html: '<p>Hi!</p>

          <p>This is indeed a fascinating question! I forgot to mention that you can
          generate a list of n-grams so you don''t miss any n-gram keyphrases. More
          information here: <a rel="nofollow" href="https://thinkingneuron.com/how-to-generate-n-grams-in-python/">https://thinkingneuron.com/how-to-generate-n-grams-in-python/</a>.</p>

          <p>What I also want to add is that this is a keyphrase generation model.
          The purpose of these types of models is to generate keyphrases that (not)
          appear in the text. So you can discuss about this feature. If your focus
          is on extractive keyphrases, you should use an extractive keyphrase model
          instead.  Keyphrase extraction models perform a lot better than keyphrase
          generation models.</p>

          <p>I''m very intrigued by your question, so I''ll try to come up with something.
          If you have anything to add let me know :)</p>

          <p>I hope this helps!</p>

          '
        raw: 'Hi!


          This is indeed a fascinating question! I forgot to mention that you can
          generate a list of n-grams so you don''t miss any n-gram keyphrases. More
          information here: https://thinkingneuron.com/how-to-generate-n-grams-in-python/.


          What I also want to add is that this is a keyphrase generation model. The
          purpose of these types of models is to generate keyphrases that (not) appear
          in the text. So you can discuss about this feature. If your focus is on
          extractive keyphrases, you should use an extractive keyphrase model instead.  Keyphrase
          extraction models perform a lot better than keyphrase generation models.


          I''m very intrigued by your question, so I''ll try to come up with something.
          If you have anything to add let me know :)


          I hope this helps!'
        updatedAt: '2022-10-24T16:40:28.997Z'
      numEdits: 2
      reactions: []
    id: 6356bfb9c479039d7a5541eb
    type: comment
  author: DeDeckerThomas
  content: 'Hi!


    This is indeed a fascinating question! I forgot to mention that you can generate
    a list of n-grams so you don''t miss any n-gram keyphrases. More information here:
    https://thinkingneuron.com/how-to-generate-n-grams-in-python/.


    What I also want to add is that this is a keyphrase generation model. The purpose
    of these types of models is to generate keyphrases that (not) appear in the text.
    So you can discuss about this feature. If your focus is on extractive keyphrases,
    you should use an extractive keyphrase model instead.  Keyphrase extraction models
    perform a lot better than keyphrase generation models.


    I''m very intrigued by your question, so I''ll try to come up with something.
    If you have anything to add let me know :)


    I hope this helps!'
  created_at: 2022-10-24 15:39:21+00:00
  edited: true
  hidden: false
  id: 6356bfb9c479039d7a5541eb
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: ml6team/keyphrase-generation-keybart-inspec
repo_type: model
status: open
target_branch: null
title: How do I output only extractive Key phrases
