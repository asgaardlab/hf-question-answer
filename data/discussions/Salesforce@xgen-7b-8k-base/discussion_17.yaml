!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Zangs3011
conflicting_files: null
created_at: 2023-07-06 19:14:21+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/12d3e3057efa4c47c89ee2cafa2d523c.svg
      fullname: Shas
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Zangs3011
      type: user
    createdAt: '2023-07-06T20:14:21.000Z'
    data:
      edited: true
      editors:
      - Zangs3011
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.3955391049385071
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/12d3e3057efa4c47c89ee2cafa2d523c.svg
          fullname: Shas
          isHf: false
          isPro: false
          name: Zangs3011
          type: user
        html: '<p>Hi team , </p>

          <p>There is an major issue with the tokenizer.get_vocab() method, as get_vocab()
          is a very important method that is used by a lot of codebases and libraries..for
          example ctranslate2</p>

          <p>Having an issue over here renders the model useless for many usecases</p>

          <p>Below are my logs and a possible fix </p>

          <p>Thanks,</p>

          <p>How to reproduce?<br>tokenizer = AutoTokenizer.from_pretrained("Salesforce/xgen-7b-8k-base",trust_remote_code=True)<br>tokenizer.get_vocab()</p>

          <p>Possible Fix?<br>def _convert_id_to_token(self, index):<br>        """Converts
          an index (integer) in a token (str) using the vocab."""</p>

          <ul>

          <li><pre><code>   return self.encoder.decode_single_token_bytes(index).decode("utf-8")

          </code></pre>

          </li>

          </ul>

          <ul>

          <li><pre><code>  return self.encoder.decode_single_token_bytes(index).decode("latin1")

          </code></pre>

          </li>

          </ul>

          <p>Use latin1 encoding over here instead of "utf-8"</p>

          <h2 id="error-thrown">Error thrown?</h2>

          <p>UnicodeDecodeError                        Traceback (most recent call
          last)<br>Cell In[39], line 1<br>----&gt; 1 tokenizer.get_vocab()["&lt;|tiktoken|&gt;"]</p>

          <p>File ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,
          in XgenTokenizer.get_vocab(self)<br>    140 def get_vocab(self):<br>    141     """Returns
          vocab as a dict"""<br>--&gt; 142     vocab = {self._convert_id_to_token(i):
          i for i in range(self.vocab_size)}<br>    143     return vocab</p>

          <p>File ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,
          in (.0)<br>    140 def get_vocab(self):<br>    141     """Returns vocab
          as a dict"""<br>--&gt; 142     vocab = {self._convert_id_to_token(i): i
          for i in range(self.vocab_size)}<br>    143     return vocab</p>

          <p>File ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:158,
          in XgenTokenizer._convert_id_to_token(self, index)<br>    156 def _convert_id_to_token(self,
          index):<br>    157     """Converts an index (integer) in a token (str) using
          the vocab."""<br>--&gt; 158     return self.encoder.decode_single_token_bytes(index).decode("utf-8")</p>

          <p>UnicodeDecodeError: ''utf-8'' codec can''t decode byte 0xa1 in position
          0: invalid start byte</p>

          '
        raw: "Hi team , \n\nThere is an major issue with the tokenizer.get_vocab()\
          \ method, as get_vocab() is a very important method that is used by a lot\
          \ of codebases and libraries..for example ctranslate2\n\nHaving an issue\
          \ over here renders the model useless for many usecases\n\nBelow are my\
          \ logs and a possible fix \n\nThanks,\n\n\nHow to reproduce?\ntokenizer\
          \ = AutoTokenizer.from_pretrained(\"Salesforce/xgen-7b-8k-base\",trust_remote_code=True)\n\
          tokenizer.get_vocab()\n\nPossible Fix?\ndef _convert_id_to_token(self, index):\n\
          \        \"\"\"Converts an index (integer) in a token (str) using the vocab.\"\
          \"\"\n-        return self.encoder.decode_single_token_bytes(index).decode(\"\
          utf-8\")\n+       return self.encoder.decode_single_token_bytes(index).decode(\"\
          latin1\")\n\nUse latin1 encoding over here instead of \"utf-8\"\n\nError\
          \ thrown?\n ---------------------------------------------------------------------------\n\
          UnicodeDecodeError                        Traceback (most recent call last)\n\
          Cell In[39], line 1\n----> 1 tokenizer.get_vocab()[\"<|tiktoken|>\"]\n\n\
          File ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,\
          \ in XgenTokenizer.get_vocab(self)\n    140 def get_vocab(self):\n    141\
          \     \"\"\"Returns vocab as a dict\"\"\"\n--> 142     vocab = {self._convert_id_to_token(i):\
          \ i for i in range(self.vocab_size)}\n    143     return vocab\n\nFile ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,\
          \ in (.0)\n    140 def get_vocab(self):\n    141     \"\"\"Returns vocab\
          \ as a dict\"\"\"\n--> 142     vocab = {self._convert_id_to_token(i): i\
          \ for i in range(self.vocab_size)}\n    143     return vocab\n\nFile ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:158,\
          \ in XgenTokenizer._convert_id_to_token(self, index)\n    156 def _convert_id_to_token(self,\
          \ index):\n    157     \"\"\"Converts an index (integer) in a token (str)\
          \ using the vocab.\"\"\"\n--> 158     return self.encoder.decode_single_token_bytes(index).decode(\"\
          utf-8\")\n\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xa1 in\
          \ position 0: invalid start byte\n\n\n\n\n"
        updatedAt: '2023-07-06T20:14:54.961Z'
      numEdits: 1
      reactions: []
    id: 64a7209daa636af8597f023f
    type: comment
  author: Zangs3011
  content: "Hi team , \n\nThere is an major issue with the tokenizer.get_vocab() method,\
    \ as get_vocab() is a very important method that is used by a lot of codebases\
    \ and libraries..for example ctranslate2\n\nHaving an issue over here renders\
    \ the model useless for many usecases\n\nBelow are my logs and a possible fix\
    \ \n\nThanks,\n\n\nHow to reproduce?\ntokenizer = AutoTokenizer.from_pretrained(\"\
    Salesforce/xgen-7b-8k-base\",trust_remote_code=True)\ntokenizer.get_vocab()\n\n\
    Possible Fix?\ndef _convert_id_to_token(self, index):\n        \"\"\"Converts\
    \ an index (integer) in a token (str) using the vocab.\"\"\"\n-        return\
    \ self.encoder.decode_single_token_bytes(index).decode(\"utf-8\")\n+       return\
    \ self.encoder.decode_single_token_bytes(index).decode(\"latin1\")\n\nUse latin1\
    \ encoding over here instead of \"utf-8\"\n\nError thrown?\n ---------------------------------------------------------------------------\n\
    UnicodeDecodeError                        Traceback (most recent call last)\n\
    Cell In[39], line 1\n----> 1 tokenizer.get_vocab()[\"<|tiktoken|>\"]\n\nFile ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,\
    \ in XgenTokenizer.get_vocab(self)\n    140 def get_vocab(self):\n    141    \
    \ \"\"\"Returns vocab as a dict\"\"\"\n--> 142     vocab = {self._convert_id_to_token(i):\
    \ i for i in range(self.vocab_size)}\n    143     return vocab\n\nFile ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:142,\
    \ in (.0)\n    140 def get_vocab(self):\n    141     \"\"\"Returns vocab as a\
    \ dict\"\"\"\n--> 142     vocab = {self._convert_id_to_token(i): i for i in range(self.vocab_size)}\n\
    \    143     return vocab\n\nFile ~/.cache/huggingface/modules/transformers_modules/Salesforce/xgen-7b-8k-base/3987e094377fae577bba039af1b300ee8086f9e1/tokenization_xgen.py:158,\
    \ in XgenTokenizer._convert_id_to_token(self, index)\n    156 def _convert_id_to_token(self,\
    \ index):\n    157     \"\"\"Converts an index (integer) in a token (str) using\
    \ the vocab.\"\"\"\n--> 158     return self.encoder.decode_single_token_bytes(index).decode(\"\
    utf-8\")\n\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xa1 in position\
    \ 0: invalid start byte\n\n\n\n\n"
  created_at: 2023-07-06 19:14:21+00:00
  edited: true
  hidden: false
  id: 64a7209daa636af8597f023f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/24574113bfe000250196e935e4f7cde2.svg
      fullname: Tian Xie
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: tianxie-sf
      type: user
    createdAt: '2023-07-07T21:31:11.000Z'
    data:
      edited: false
      editors:
      - tianxie-sf
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9509324431419373
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/24574113bfe000250196e935e4f7cde2.svg
          fullname: Tian Xie
          isHf: false
          isPro: false
          name: tianxie-sf
          type: user
        html: '<p>Fixed, you can try again!</p>

          '
        raw: Fixed, you can try again!
        updatedAt: '2023-07-07T21:31:11.106Z'
      numEdits: 0
      reactions: []
    id: 64a8841f9915c3930899a4b6
    type: comment
  author: tianxie-sf
  content: Fixed, you can try again!
  created_at: 2023-07-07 20:31:11+00:00
  edited: false
  hidden: false
  id: 64a8841f9915c3930899a4b6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/12d3e3057efa4c47c89ee2cafa2d523c.svg
      fullname: Shas
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Zangs3011
      type: user
    createdAt: '2023-07-12T16:13:54.000Z'
    data:
      edited: false
      editors:
      - Zangs3011
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.892661452293396
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/12d3e3057efa4c47c89ee2cafa2d523c.svg
          fullname: Shas
          isHf: false
          isPro: false
          name: Zangs3011
          type: user
        html: '<p>Thanks, the get vocab is working now</p>

          <p>But still when trying to convert via ctranslate2 I''m getting the error
          that the model vocab size and the tokenizer vocab size does not match.</p>

          <p>Can you check once</p>

          '
        raw: 'Thanks, the get vocab is working now


          But still when trying to convert via ctranslate2 I''m getting the error
          that the model vocab size and the tokenizer vocab size does not match.


          Can you check once'
        updatedAt: '2023-07-12T16:13:54.459Z'
      numEdits: 0
      reactions: []
    id: 64aed1429135f79b09139d16
    type: comment
  author: Zangs3011
  content: 'Thanks, the get vocab is working now


    But still when trying to convert via ctranslate2 I''m getting the error that the
    model vocab size and the tokenizer vocab size does not match.


    Can you check once'
  created_at: 2023-07-12 15:13:54+00:00
  edited: false
  hidden: false
  id: 64aed1429135f79b09139d16
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 17
repo_id: Salesforce/xgen-7b-8k-base
repo_type: model
status: open
target_branch: null
title: 'tokenizer.get_vocab() method is not working '
