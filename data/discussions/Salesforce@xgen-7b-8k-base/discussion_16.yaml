!!python/object:huggingface_hub.community.DiscussionWithDetails
author: viktor-ferenczi
conflicting_files: null
created_at: 2023-07-04 22:55:37+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/xV4Xlk01BsqfRqxAWsO8Z.png?w=200&h=200&f=face
      fullname: Viktor Ferenczi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: viktor-ferenczi
      type: user
    createdAt: '2023-07-04T23:55:37.000Z'
    data:
      edited: true
      editors:
      - viktor-ferenczi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.884871780872345
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/xV4Xlk01BsqfRqxAWsO8Z.png?w=200&h=200&f=face
          fullname: Viktor Ferenczi
          isHf: false
          isPro: false
          name: viktor-ferenczi
          type: user
        html: '<p>Loaded this model in 8-bit mode (quantized) into ooba. It runs ~4.5
          tokens/second on a 3080Ti, not that bad.</p>

          <p>Left the context window length at 2048 (default), so not using the 8k
          capability.</p>

          <p>Attempted to test the model with the following context and prompt:</p>

          <pre><code>As an expert Python developer I am writing a Python 3 function
          to find all duplicate files in a folder.


          Requirements:

          - At any depth in the subdirectory structure.

          - The path to the folder must be the parameter of the function.

          - Two files are duplicates if they have the same size and contents.

          - Files of unique size cannot be duplicates (optimization).

          - File contents can be checked based on their SHA256 hashes (checksums).

          - Do not read whole files into memory, calculate the hash in 32kB chunks.

          - The risk of a hash collision is acceptable in this use case.

          - Must find all duplicate files.

          - Must NOT delete any files.

          - The return value of the function must be a dictionary where keys are the
          file size and checksum in a tuple, values are the list of paths. Return
          only duplicate files.

          - Must work on both Windows and UNIX (Linux, MAC).

          - No need to repeat this documentation in source code comments / docstrings.


          The Python 3 code is the following:

          </code></pre>

          <p>It started to write the code, but goes astray at every single detail
          and gets it just wrong.</p>

          <p>Tested the above prompt (with slight modifications to match the expected
          way of prompting) on these models:</p>

          <ul>

          <li><code>WizardLM/WizardCoder-15B-V1.0</code></li>

          <li><code>Salesforce/codegen2-16B</code></li>

          </ul>

          <p>Both of them worked reasonably well, both at 16bit (bfloat16) and 8-bit
          quantized. Interestingly they seemed to produce better code at 8-bit quantization,
          less prone to over-complicate it. I don''t know why.</p>

          <p>So the task is not impossible, even for small open-source models.</p>

          <p>Am I doing something wrong with the prompt above? Maybe the quantization
          hurts the model? Any insights?</p>

          '
        raw: 'Loaded this model in 8-bit mode (quantized) into ooba. It runs ~4.5
          tokens/second on a 3080Ti, not that bad.


          Left the context window length at 2048 (default), so not using the 8k capability.


          Attempted to test the model with the following context and prompt:

          ```

          As an expert Python developer I am writing a Python 3 function to find all
          duplicate files in a folder.


          Requirements:

          - At any depth in the subdirectory structure.

          - The path to the folder must be the parameter of the function.

          - Two files are duplicates if they have the same size and contents.

          - Files of unique size cannot be duplicates (optimization).

          - File contents can be checked based on their SHA256 hashes (checksums).

          - Do not read whole files into memory, calculate the hash in 32kB chunks.

          - The risk of a hash collision is acceptable in this use case.

          - Must find all duplicate files.

          - Must NOT delete any files.

          - The return value of the function must be a dictionary where keys are the
          file size and checksum in a tuple, values are the list of paths. Return
          only duplicate files.

          - Must work on both Windows and UNIX (Linux, MAC).

          - No need to repeat this documentation in source code comments / docstrings.


          The Python 3 code is the following:

          ```


          It started to write the code, but goes astray at every single detail and
          gets it just wrong.


          Tested the above prompt (with slight modifications to match the expected
          way of prompting) on these models:

          - `WizardLM/WizardCoder-15B-V1.0`

          - `Salesforce/codegen2-16B`


          Both of them worked reasonably well, both at 16bit (bfloat16) and 8-bit
          quantized. Interestingly they seemed to produce better code at 8-bit quantization,
          less prone to over-complicate it. I don''t know why.


          So the task is not impossible, even for small open-source models.


          Am I doing something wrong with the prompt above? Maybe the quantization
          hurts the model? Any insights?'
        updatedAt: '2023-07-04T23:57:56.361Z'
      numEdits: 1
      reactions: []
    id: 64a4b179b27aa75f4bd0ac4e
    type: comment
  author: viktor-ferenczi
  content: 'Loaded this model in 8-bit mode (quantized) into ooba. It runs ~4.5 tokens/second
    on a 3080Ti, not that bad.


    Left the context window length at 2048 (default), so not using the 8k capability.


    Attempted to test the model with the following context and prompt:

    ```

    As an expert Python developer I am writing a Python 3 function to find all duplicate
    files in a folder.


    Requirements:

    - At any depth in the subdirectory structure.

    - The path to the folder must be the parameter of the function.

    - Two files are duplicates if they have the same size and contents.

    - Files of unique size cannot be duplicates (optimization).

    - File contents can be checked based on their SHA256 hashes (checksums).

    - Do not read whole files into memory, calculate the hash in 32kB chunks.

    - The risk of a hash collision is acceptable in this use case.

    - Must find all duplicate files.

    - Must NOT delete any files.

    - The return value of the function must be a dictionary where keys are the file
    size and checksum in a tuple, values are the list of paths. Return only duplicate
    files.

    - Must work on both Windows and UNIX (Linux, MAC).

    - No need to repeat this documentation in source code comments / docstrings.


    The Python 3 code is the following:

    ```


    It started to write the code, but goes astray at every single detail and gets
    it just wrong.


    Tested the above prompt (with slight modifications to match the expected way of
    prompting) on these models:

    - `WizardLM/WizardCoder-15B-V1.0`

    - `Salesforce/codegen2-16B`


    Both of them worked reasonably well, both at 16bit (bfloat16) and 8-bit quantized.
    Interestingly they seemed to produce better code at 8-bit quantization, less prone
    to over-complicate it. I don''t know why.


    So the task is not impossible, even for small open-source models.


    Am I doing something wrong with the prompt above? Maybe the quantization hurts
    the model? Any insights?'
  created_at: 2023-07-04 22:55:37+00:00
  edited: true
  hidden: false
  id: 64a4b179b27aa75f4bd0ac4e
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 16
repo_id: Salesforce/xgen-7b-8k-base
repo_type: model
status: open
target_branch: null
title: How to prompt the model properly?
