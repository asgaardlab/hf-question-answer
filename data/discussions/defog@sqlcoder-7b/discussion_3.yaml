!!python/object:huggingface_hub.community.DiscussionWithDetails
author: zabadugu
conflicting_files: null
created_at: 2023-10-14 04:08:02+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/9d3adc5c6a1b3bdc9e06fef143b8e856.svg
      fullname: Amogh Badugu
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: zabadugu
      type: user
    createdAt: '2023-10-14T05:08:02.000Z'
    data:
      edited: false
      editors:
      - zabadugu
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9383405447006226
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/9d3adc5c6a1b3bdc9e06fef143b8e856.svg
          fullname: Amogh Badugu
          isHf: false
          isPro: false
          name: zabadugu
          type: user
        html: '<p>Congratulations on great work! It really produces comparable (and
          superior) results to much larger models. However, I wasn''t able to force
          it to generate queries in MS SQL syntax. I am using the same prompt style
          as mentioned in the colab notebook (just changed the schema and mentioned
          MS SQL database on the top), but it was still generating parts in Postgres
          syntax (for ex. using CURRENT_DATE). Are there any other ways to force the
          model</p>

          '
        raw: Congratulations on great work! It really produces comparable (and superior)
          results to much larger models. However, I wasn't able to force it to generate
          queries in MS SQL syntax. I am using the same prompt style as mentioned
          in the colab notebook (just changed the schema and mentioned MS SQL database
          on the top), but it was still generating parts in Postgres syntax (for ex.
          using CURRENT_DATE). Are there any other ways to force the model
        updatedAt: '2023-10-14T05:08:02.176Z'
      numEdits: 0
      reactions: []
    id: 652a22326cdea40585d6814d
    type: comment
  author: zabadugu
  content: Congratulations on great work! It really produces comparable (and superior)
    results to much larger models. However, I wasn't able to force it to generate
    queries in MS SQL syntax. I am using the same prompt style as mentioned in the
    colab notebook (just changed the schema and mentioned MS SQL database on the top),
    but it was still generating parts in Postgres syntax (for ex. using CURRENT_DATE).
    Are there any other ways to force the model
  created_at: 2023-10-14 04:08:02+00:00
  edited: false
  hidden: false
  id: 652a22326cdea40585d6814d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/fb44d0a95cd946b17a6a45e8a97142fc.svg
      fullname: Wong
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: jp-defog
      type: user
    createdAt: '2023-10-14T05:34:55.000Z'
    data:
      edited: false
      editors:
      - jp-defog
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9701056480407715
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/fb44d0a95cd946b17a6a45e8a97142fc.svg
          fullname: Wong
          isHf: false
          isPro: false
          name: jp-defog
          type: user
        html: "<p>Thanks <span data-props=\"{&quot;user&quot;:&quot;zabadugu&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/zabadugu\"\
          >@<span class=\"underline\">zabadugu</span></a></span>\n\n\t</span></span>!\
          \ This is a known issue for now as we've primarily optimized for Postgres\
          \ only. We're looking to address some of these issues through an instruction-finetuned\
          \ model in future releases, but in the meantime, please feel free to finetune\
          \ the model for your needs.</p>\n"
        raw: Thanks @zabadugu! This is a known issue for now as we've primarily optimized
          for Postgres only. We're looking to address some of these issues through
          an instruction-finetuned model in future releases, but in the meantime,
          please feel free to finetune the model for your needs.
        updatedAt: '2023-10-14T05:34:55.769Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - zabadugu
    id: 652a287f72280df42616303e
    type: comment
  author: jp-defog
  content: Thanks @zabadugu! This is a known issue for now as we've primarily optimized
    for Postgres only. We're looking to address some of these issues through an instruction-finetuned
    model in future releases, but in the meantime, please feel free to finetune the
    model for your needs.
  created_at: 2023-10-14 04:34:55+00:00
  edited: false
  hidden: false
  id: 652a287f72280df42616303e
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: defog/sqlcoder-7b
repo_type: model
status: open
target_branch: null
title: Great model but difficulty in generating MS SQL queries.
