!!python/object:huggingface_hub.community.DiscussionWithDetails
author: borisgorelik
conflicting_files: null
created_at: 2023-10-22 13:00:15+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/KlKKNBSeNH4tjt71IJcm9.jpeg?w=200&h=200&f=face
      fullname: Boris Gorelik
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: borisgorelik
      type: user
    createdAt: '2023-10-22T14:00:15.000Z'
    data:
      edited: false
      editors:
      - borisgorelik
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5681694149971008
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/KlKKNBSeNH4tjt71IJcm9.jpeg?w=200&h=200&f=face
          fullname: Boris Gorelik
          isHf: false
          isPro: false
          name: borisgorelik
          type: user
        html: '<p>Below is a short snippet that uses <code>detr-resnet-50</code>.
          The code works ok on my Mac, but when I run it in a docker image (Ubuntu)
          I get a segmentation fault. Any ideas what''s wrong?</p>

          <pre><code>##

          import requests

          from PIL import Image

          from transformers import DetrImageProcessor, DetrForObjectDetection

          import torch


          model_name: str = "facebook/detr-resnet-50"

          processor = DetrImageProcessor.from_pretrained(model_name)

          model = DetrForObjectDetection.from_pretrained(model_name)


          img_url = ''https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg/640px-Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg''

          image = Image.open(requests.get(img_url, stream=True).raw)

          inputs = processor(images=image, return_tensors="pt")


          outputs = model(**inputs) # &lt;===== fails with segmentation fault

          ##

          # target_sizes = torch.tensor([image.size[::-1]])

          # results = processor.post_process_object_detection(

          #     outputs, target_sizes=target_sizes, threshold=0.8

          # )[0]

          # results = {k: v.tolist() for k, v in results.items()}

          # results["labels_str"] = [model.config.id2label[l] for l in results["labels"]]

          # print(results)

          </code></pre>

          '
        raw: "Below is a short snippet that uses `detr-resnet-50`. The code works\
          \ ok on my Mac, but when I run it in a docker image (Ubuntu) I get a segmentation\
          \ fault. Any ideas what's wrong?\r\n\r\n```\r\n##\r\nimport requests\r\n\
          from PIL import Image\r\nfrom transformers import DetrImageProcessor, DetrForObjectDetection\r\
          \nimport torch\r\n\r\nmodel_name: str = \"facebook/detr-resnet-50\"\r\n\
          processor = DetrImageProcessor.from_pretrained(model_name)\r\nmodel = DetrForObjectDetection.from_pretrained(model_name)\r\
          \n\r\nimg_url = 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg/640px-Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg'\r\
          \nimage = Image.open(requests.get(img_url, stream=True).raw)\r\ninputs =\
          \ processor(images=image, return_tensors=\"pt\")\r\n\r\noutputs = model(**inputs)\
          \ # <===== fails with segmentation fault\r\n##\r\n# target_sizes = torch.tensor([image.size[::-1]])\r\
          \n# results = processor.post_process_object_detection(\r\n#     outputs,\
          \ target_sizes=target_sizes, threshold=0.8\r\n# )[0]\r\n# results = {k:\
          \ v.tolist() for k, v in results.items()}\r\n# results[\"labels_str\"] =\
          \ [model.config.id2label[l] for l in results[\"labels\"]]\r\n# print(results)\r\
          \n```"
        updatedAt: '2023-10-22T14:00:15.548Z'
      numEdits: 0
      reactions: []
    id: 65352aef7139c5dd8d9a8bdb
    type: comment
  author: borisgorelik
  content: "Below is a short snippet that uses `detr-resnet-50`. The code works ok\
    \ on my Mac, but when I run it in a docker image (Ubuntu) I get a segmentation\
    \ fault. Any ideas what's wrong?\r\n\r\n```\r\n##\r\nimport requests\r\nfrom PIL\
    \ import Image\r\nfrom transformers import DetrImageProcessor, DetrForObjectDetection\r\
    \nimport torch\r\n\r\nmodel_name: str = \"facebook/detr-resnet-50\"\r\nprocessor\
    \ = DetrImageProcessor.from_pretrained(model_name)\r\nmodel = DetrForObjectDetection.from_pretrained(model_name)\r\
    \n\r\nimg_url = 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg/640px-Celebrating_Raas_lila_festival_in_Bangladesh_11.jpg'\r\
    \nimage = Image.open(requests.get(img_url, stream=True).raw)\r\ninputs = processor(images=image,\
    \ return_tensors=\"pt\")\r\n\r\noutputs = model(**inputs) # <===== fails with\
    \ segmentation fault\r\n##\r\n# target_sizes = torch.tensor([image.size[::-1]])\r\
    \n# results = processor.post_process_object_detection(\r\n#     outputs, target_sizes=target_sizes,\
    \ threshold=0.8\r\n# )[0]\r\n# results = {k: v.tolist() for k, v in results.items()}\r\
    \n# results[\"labels_str\"] = [model.config.id2label[l] for l in results[\"labels\"\
    ]]\r\n# print(results)\r\n```"
  created_at: 2023-10-22 13:00:15+00:00
  edited: false
  hidden: false
  id: 65352aef7139c5dd8d9a8bdb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/TDJSUjnj4HLD1V3PmZAro.png?w=200&h=200&f=face
      fullname: Ryan James
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ryanjames
      type: user
    createdAt: '2023-10-26T10:23:38.000Z'
    data:
      edited: false
      editors:
      - ryanjames
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8392344117164612
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/TDJSUjnj4HLD1V3PmZAro.png?w=200&h=200&f=face
          fullname: Ryan James
          isHf: false
          isPro: false
          name: ryanjames
          type: user
        html: '<p>Examine Logs: Review the container''s logs for specific error messages
          and clues about what''s causing the segmentation fault.</p>

          <p>Update Dependencies: Make sure that your base image and application dependencies
          are up to date.</p>

          <p>Memory Limits: Adjust memory limits for your Docker container using the
          -m or --memory flags to ensure your application has sufficient memory.</p>

          <p>Check Hardware: In some cases, hardware issues might be the root cause.
          Ensure your underlying hardware is functioning correctly.</p>

          <p>Test on Different Hosts: If possible, test your Docker container on different
          host machines to rule out host-specific issues.</p>

          <p>Debugging Tools: Utilize debugging tools like GDB to help identify the
          exact location of the segfault in your application code.</p>

          <p>Rebuild Container: Sometimes, rebuilding your Docker container from scratch
          can resolve segmentation faults, especially if the issue is related to corrupted
          files or settings.</p>

          <p><a rel="nofollow" href="https://juicerhunter.com/">https://juicerhunter.com/</a></p>

          '
        raw: 'Examine Logs: Review the container''s logs for specific error messages
          and clues about what''s causing the segmentation fault.


          Update Dependencies: Make sure that your base image and application dependencies
          are up to date.


          Memory Limits: Adjust memory limits for your Docker container using the
          -m or --memory flags to ensure your application has sufficient memory.


          Check Hardware: In some cases, hardware issues might be the root cause.
          Ensure your underlying hardware is functioning correctly.


          Test on Different Hosts: If possible, test your Docker container on different
          host machines to rule out host-specific issues.


          Debugging Tools: Utilize debugging tools like GDB to help identify the exact
          location of the segfault in your application code.


          Rebuild Container: Sometimes, rebuilding your Docker container from scratch
          can resolve segmentation faults, especially if the issue is related to corrupted
          files or settings.


          https://juicerhunter.com/'
        updatedAt: '2023-10-26T10:23:38.490Z'
      numEdits: 0
      reactions: []
    id: 653a3e2a53dcf597ba7e916d
    type: comment
  author: ryanjames
  content: 'Examine Logs: Review the container''s logs for specific error messages
    and clues about what''s causing the segmentation fault.


    Update Dependencies: Make sure that your base image and application dependencies
    are up to date.


    Memory Limits: Adjust memory limits for your Docker container using the -m or
    --memory flags to ensure your application has sufficient memory.


    Check Hardware: In some cases, hardware issues might be the root cause. Ensure
    your underlying hardware is functioning correctly.


    Test on Different Hosts: If possible, test your Docker container on different
    host machines to rule out host-specific issues.


    Debugging Tools: Utilize debugging tools like GDB to help identify the exact location
    of the segfault in your application code.


    Rebuild Container: Sometimes, rebuilding your Docker container from scratch can
    resolve segmentation faults, especially if the issue is related to corrupted files
    or settings.


    https://juicerhunter.com/'
  created_at: 2023-10-26 09:23:38+00:00
  edited: false
  hidden: false
  id: 653a3e2a53dcf597ba7e916d
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 10
repo_id: facebook/detr-resnet-50
repo_type: model
status: open
target_branch: null
title: Segmentation fault in docker
