!!python/object:huggingface_hub.community.DiscussionWithDetails
author: mhyatt000
conflicting_files: null
created_at: 2022-08-18 15:41:14+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658862186149-62b09fe1a14cbd64386c042d.jpeg?w=200&h=200&f=face
      fullname: Matt Hyatt
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mhyatt000
      type: user
    createdAt: '2022-08-18T16:41:14.000Z'
    data:
      edited: false
      editors:
      - mhyatt000
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658862186149-62b09fe1a14cbd64386c042d.jpeg?w=200&h=200&f=face
          fullname: Matt Hyatt
          isHf: false
          isPro: false
          name: mhyatt000
          type: user
        html: "<p>I tried to reproduce the results mentioned on this model card. The\
          \ received mAP does not match the claimed mAP in the model card.</p>\n<ul>\n\
          <li>Claimed mAP: 42.0</li>\n<li>Recieved mAP: 39.7</li>\n</ul>\n<p>Here\
          \ are the details for my validation:</p>\n<ul>\n<li>I instantiate pre-trained\
          \ model with <code>transformers.pipeline()</code> and use COCO API to calculate\
          \ AP from detection bboxes. </li>\n<li>Evaluation was performed on macOS\
          \ CPU.</li>\n<li>Dataset was downloaded from cocodataset.org</li>\n</ul>\n\
          <hr>\n<pre><code> Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all\
          \ | maxDets=100 ] = 0.397\n Average Precision  (AP) @[ IoU=0.50      | area=\
          \   all | maxDets=100 ] = 0.590\n Average Precision  (AP) @[ IoU=0.75  \
          \    | area=   all | maxDets=100 ] = 0.420\n Average Precision  (AP) @[\
          \ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.185\n Average Precision\
          \  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.431\n Average\
          \ Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.586\n\
          \ Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ]\
          \ = 0.316\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=\
          \ 10 ] = 0.470\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all\
          \ | maxDets=100 ] = 0.483\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=\
          \ small | maxDets=100 ] = 0.238\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area=medium | maxDets=100 ] = 0.525\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area= large | maxDets=100 ] = 0.691\n</code></pre>\n"
        raw: "I tried to reproduce the results mentioned on this model card. The received\
          \ mAP does not match the claimed mAP in the model card.\r\n\r\n- Claimed\
          \ mAP: 42.0\r\n- Recieved mAP: 39.7\r\n\r\nHere are the details for my validation:\r\
          \n\r\n- I instantiate pre-trained model with `transformers.pipeline()` and\
          \ use COCO API to calculate AP from detection bboxes. \r\n- Evaluation was\
          \ performed on macOS CPU.\r\n- Dataset was downloaded from cocodataset.org\r\
          \n---\r\n\r\n```\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=  \
          \ all | maxDets=100 ] = 0.397\r\n Average Precision  (AP) @[ IoU=0.50  \
          \    | area=   all | maxDets=100 ] = 0.590\r\n Average Precision  (AP) @[\
          \ IoU=0.75      | area=   all | maxDets=100 ] = 0.420\r\n Average Precision\
          \  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.185\r\n Average\
          \ Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.431\r\
          \n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100\
          \ ] = 0.586\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all |\
          \ maxDets=  1 ] = 0.316\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=\
          \   all | maxDets= 10 ] = 0.470\r\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area=   all | maxDets=100 ] = 0.483\r\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area= small | maxDets=100 ] = 0.238\r\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area=medium | maxDets=100 ] = 0.525\r\n Average Recall     (AR) @[ IoU=0.50:0.95\
          \ | area= large | maxDets=100 ] = 0.691\r\n```"
        updatedAt: '2022-08-18T16:41:14.302Z'
      numEdits: 0
      reactions: []
    id: 62fe6baa578749fe22afcec8
    type: comment
  author: mhyatt000
  content: "I tried to reproduce the results mentioned on this model card. The received\
    \ mAP does not match the claimed mAP in the model card.\r\n\r\n- Claimed mAP:\
    \ 42.0\r\n- Recieved mAP: 39.7\r\n\r\nHere are the details for my validation:\r\
    \n\r\n- I instantiate pre-trained model with `transformers.pipeline()` and use\
    \ COCO API to calculate AP from detection bboxes. \r\n- Evaluation was performed\
    \ on macOS CPU.\r\n- Dataset was downloaded from cocodataset.org\r\n---\r\n\r\n\
    ```\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ]\
    \ = 0.397\r\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100\
    \ ] = 0.590\r\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100\
    \ ] = 0.420\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100\
    \ ] = 0.185\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100\
    \ ] = 0.431\r\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100\
    \ ] = 0.586\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=\
    \  1 ] = 0.316\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=\
    \ 10 ] = 0.470\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100\
    \ ] = 0.483\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100\
    \ ] = 0.238\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100\
    \ ] = 0.525\r\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100\
    \ ] = 0.691\r\n```"
  created_at: 2022-08-18 15:41:14+00:00
  edited: false
  hidden: false
  id: 62fe6baa578749fe22afcec8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2022-09-16T07:19:24.000Z'
    data:
      edited: true
      editors:
      - nielsr
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: '<p>Hi,</p>

          <p>Thanks for validating. When porting the model to HuggingFace format,
          I made sure the <code>logits</code> and <code>pred_boxes</code> match exactly
          on the same input data as seen <a rel="nofollow" href="https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/convert_detr_original_pytorch_checkpoint_to_pytorch.py#L256-L257">here</a>.</p>

          <p>Additionally, the image transformations used during validation can be
          found <a rel="nofollow" href="https://github.com/facebookresearch/detr/blob/8a144f83a287f4d3fece4acdf073f387c5af387d/datasets/coco.py#L138">here</a>.
          Images are 1) resized with a minimum size of 800 and a maximum size of 1333.
          The pipeline is using <code>DetrFeatureExtractor</code> behind the scenes
          to prepare images + targets for the model, and this one performs the same
          transformations as seen <a rel="nofollow" href="https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/feature_extraction_detr.py#L559">here</a>.</p>

          <p>Did you evaluate on COCO 2017?</p>

          '
        raw: 'Hi,


          Thanks for validating. When porting the model to HuggingFace format, I made
          sure the `logits` and `pred_boxes` match exactly on the same input data
          as seen [here](https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/convert_detr_original_pytorch_checkpoint_to_pytorch.py#L256-L257).


          Additionally, the image transformations used during validation can be found
          [here](https://github.com/facebookresearch/detr/blob/8a144f83a287f4d3fece4acdf073f387c5af387d/datasets/coco.py#L138).
          Images are 1) resized with a minimum size of 800 and a maximum size of 1333.
          The pipeline is using `DetrFeatureExtractor` behind the scenes to prepare
          images + targets for the model, and this one performs the same transformations
          as seen [here](https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/feature_extraction_detr.py#L559).


          Did you evaluate on COCO 2017?'
        updatedAt: '2022-09-16T07:19:39.043Z'
      numEdits: 1
      reactions:
      - count: 2
        reaction: "\u2764\uFE0F"
        users:
        - jiang784
        - mhyatt000
    id: 6324237cb7cf07219a976705
    type: comment
  author: nielsr
  content: 'Hi,


    Thanks for validating. When porting the model to HuggingFace format, I made sure
    the `logits` and `pred_boxes` match exactly on the same input data as seen [here](https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/convert_detr_original_pytorch_checkpoint_to_pytorch.py#L256-L257).


    Additionally, the image transformations used during validation can be found [here](https://github.com/facebookresearch/detr/blob/8a144f83a287f4d3fece4acdf073f387c5af387d/datasets/coco.py#L138).
    Images are 1) resized with a minimum size of 800 and a maximum size of 1333. The
    pipeline is using `DetrFeatureExtractor` behind the scenes to prepare images +
    targets for the model, and this one performs the same transformations as seen
    [here](https://github.com/huggingface/transformers/blob/c8e40d6fa152a710418c9d5cfad7a1b54a98459c/src/transformers/models/detr/feature_extraction_detr.py#L559).


    Did you evaluate on COCO 2017?'
  created_at: 2022-09-16 06:19:24+00:00
  edited: true
  hidden: false
  id: 6324237cb7cf07219a976705
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658862186149-62b09fe1a14cbd64386c042d.jpeg?w=200&h=200&f=face
      fullname: Matt Hyatt
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mhyatt000
      type: user
    createdAt: '2022-09-27T16:01:19.000Z'
    data:
      edited: false
      editors:
      - mhyatt000
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658862186149-62b09fe1a14cbd64386c042d.jpeg?w=200&h=200&f=face
          fullname: Matt Hyatt
          isHf: false
          isPro: false
          name: mhyatt000
          type: user
        html: '<p>Thanks for your help.  Yes, I evaluated on COCO 2017.</p>

          <p>Why does the validated model use a different preprocessing transform
          than the one provided in the <code>DetrFeatureExtractor</code>?  Does this
          explain all the discrepancies between my 39.7 mAP and the reported 42.0
          mAP?</p>

          '
        raw: 'Thanks for your help.  Yes, I evaluated on COCO 2017.


          Why does the validated model use a different preprocessing transform than
          the one provided in the `DetrFeatureExtractor`?  Does this explain all the
          discrepancies between my 39.7 mAP and the reported 42.0 mAP?'
        updatedAt: '2022-09-27T16:01:19.910Z'
      numEdits: 0
      reactions: []
    id: 63331e4ffea127b775bf13ce
    type: comment
  author: mhyatt000
  content: 'Thanks for your help.  Yes, I evaluated on COCO 2017.


    Why does the validated model use a different preprocessing transform than the
    one provided in the `DetrFeatureExtractor`?  Does this explain all the discrepancies
    between my 39.7 mAP and the reported 42.0 mAP?'
  created_at: 2022-09-27 15:01:19+00:00
  edited: false
  hidden: false
  id: 63331e4ffea127b775bf13ce
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2022-12-14T08:48:22.000Z'
    data:
      edited: true
      editors:
      - nielsr
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: '<p>Could you clarify the difference? They should be equivalent.</p>

          <p>We can test this by preparing an image using DetrImageProcessor (previously
          called feature extractor) and the original pipeline, like so (after pip
          installing transformers and git cloning the <a rel="nofollow" href="https://github.com/facebookresearch/detr">original
          DETR repo</a>):</p>

          <pre><code>from transformers import DetrImageProcessor

          import requests

          from PIL import Image

          import torch


          from datasets.coco import make_coco_transforms


          # load image

          url = "http://images.cocodataset.org/val2017/000000039769.jpg"

          image = Image.open(requests.get(url, stream=True).raw)


          # prepare using image processor

          processor = DetrImageProcessor.from_pretrained("facebook/detr-resnet-50")

          pixel_values = processor(image, return_tensors="pt").pixel_values


          # prepare using original code

          original_transforms = make_coco_transforms("val")

          original_pixel_values = original_transforms(image, None)[0].unsqueeze(0)


          assert torch.allclose(pixel_values, original_pixel_values, atol=1e-4)

          </code></pre>

          <p>This passes locally for me.</p>

          '
        raw: 'Could you clarify the difference? They should be equivalent.


          We can test this by preparing an image using DetrImageProcessor (previously
          called feature extractor) and the original pipeline, like so (after pip
          installing transformers and git cloning the [original DETR repo](https://github.com/facebookresearch/detr)):


          ```

          from transformers import DetrImageProcessor

          import requests

          from PIL import Image

          import torch


          from datasets.coco import make_coco_transforms


          # load image

          url = "http://images.cocodataset.org/val2017/000000039769.jpg"

          image = Image.open(requests.get(url, stream=True).raw)


          # prepare using image processor

          processor = DetrImageProcessor.from_pretrained("facebook/detr-resnet-50")

          pixel_values = processor(image, return_tensors="pt").pixel_values


          # prepare using original code

          original_transforms = make_coco_transforms("val")

          original_pixel_values = original_transforms(image, None)[0].unsqueeze(0)


          assert torch.allclose(pixel_values, original_pixel_values, atol=1e-4)

          ```

          This passes locally for me.'
        updatedAt: '2022-12-14T08:53:10.538Z'
      numEdits: 5
      reactions: []
    id: 63998dd671c94da27433156a
    type: comment
  author: nielsr
  content: 'Could you clarify the difference? They should be equivalent.


    We can test this by preparing an image using DetrImageProcessor (previously called
    feature extractor) and the original pipeline, like so (after pip installing transformers
    and git cloning the [original DETR repo](https://github.com/facebookresearch/detr)):


    ```

    from transformers import DetrImageProcessor

    import requests

    from PIL import Image

    import torch


    from datasets.coco import make_coco_transforms


    # load image

    url = "http://images.cocodataset.org/val2017/000000039769.jpg"

    image = Image.open(requests.get(url, stream=True).raw)


    # prepare using image processor

    processor = DetrImageProcessor.from_pretrained("facebook/detr-resnet-50")

    pixel_values = processor(image, return_tensors="pt").pixel_values


    # prepare using original code

    original_transforms = make_coco_transforms("val")

    original_pixel_values = original_transforms(image, None)[0].unsqueeze(0)


    assert torch.allclose(pixel_values, original_pixel_values, atol=1e-4)

    ```

    This passes locally for me.'
  created_at: 2022-12-14 08:48:22+00:00
  edited: true
  hidden: false
  id: 63998dd671c94da27433156a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2022-12-14T08:58:10.000Z'
    data:
      edited: false
      editors:
      - nielsr
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: '<p>I''d recommend taking a look at this notebook to evaluate the performance:
          <a rel="nofollow" href="https://github.com/NielsRogge/Transformers-Tutorials/blob/master/DETR/Evaluating_DETR_on_COCO_validation_2017.ipynb">https://github.com/NielsRogge/Transformers-Tutorials/blob/master/DETR/Evaluating_DETR_on_COCO_validation_2017.ipynb</a>.</p>

          <p>I wouldn''t use the pipeline to evaluate the model, as that one uses
          a default threshold.</p>

          '
        raw: 'I''d recommend taking a look at this notebook to evaluate the performance:
          https://github.com/NielsRogge/Transformers-Tutorials/blob/master/DETR/Evaluating_DETR_on_COCO_validation_2017.ipynb.


          I wouldn''t use the pipeline to evaluate the model, as that one uses a default
          threshold.'
        updatedAt: '2022-12-14T08:58:10.153Z'
      numEdits: 0
      reactions: []
    id: 639990224b713c401d531ed3
    type: comment
  author: nielsr
  content: 'I''d recommend taking a look at this notebook to evaluate the performance:
    https://github.com/NielsRogge/Transformers-Tutorials/blob/master/DETR/Evaluating_DETR_on_COCO_validation_2017.ipynb.


    I wouldn''t use the pipeline to evaluate the model, as that one uses a default
    threshold.'
  created_at: 2022-12-14 08:58:10+00:00
  edited: false
  hidden: false
  id: 639990224b713c401d531ed3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a1daba2aabe065946670c900ee0e74e3.svg
      fullname: fas taxaa
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: drfe33
      type: user
    createdAt: '2023-09-15T07:20:54.000Z'
    data:
      edited: true
      editors: []
      hidden: true
      hiddenBy: ''
      latest:
        author:
          avatarUrl: /avatars/a1daba2aabe065946670c900ee0e74e3.svg
          fullname: fas taxaa
          isHf: false
          isPro: false
          name: drfe33
          type: user
        html: This comment has been hidden
        raw: This comment has been hidden
        updatedAt: '2023-09-15T16:41:03.088Z'
      numEdits: 0
      reactions: []
    id: 650405d613d750b4604d96d6
    type: comment
  author: drfe33
  content: This comment has been hidden
  created_at: 2023-09-15 06:20:54+00:00
  edited: true
  hidden: true
  id: 650405d613d750b4604d96d6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2023-09-15T08:40:28.000Z'
    data:
      edited: false
      editors:
      - nielsr
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.796329915523529
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;mhyatt000&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/mhyatt000\">@<span class=\"\
          underline\">mhyatt000</span></a></span>\n\n\t</span></span> we have reproduced\
          \ the DETR results on our open detection leaderboard: <a href=\"https://huggingface.co/spaces/rafaelpadilla/object_detection_leaderboard\"\
          >https://huggingface.co/spaces/rafaelpadilla/object_detection_leaderboard</a>.</p>\n"
        raw: '@mhyatt000 we have reproduced the DETR results on our open detection
          leaderboard: https://huggingface.co/spaces/rafaelpadilla/object_detection_leaderboard.'
        updatedAt: '2023-09-15T08:40:28.798Z'
      numEdits: 0
      reactions: []
      relatedEventId: 6504187c694f6b620fdde582
    id: 6504187c694f6b620fdde580
    type: comment
  author: nielsr
  content: '@mhyatt000 we have reproduced the DETR results on our open detection leaderboard:
    https://huggingface.co/spaces/rafaelpadilla/object_detection_leaderboard.'
  created_at: 2023-09-15 07:40:28+00:00
  edited: false
  hidden: false
  id: 6504187c694f6b620fdde580
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2023-09-15T08:40:28.000Z'
    data:
      status: closed
    id: 6504187c694f6b620fdde582
    type: status-change
  author: nielsr
  created_at: 2023-09-15 07:40:28+00:00
  id: 6504187c694f6b620fdde582
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: facebook/detr-resnet-50
repo_type: model
status: closed
target_branch: null
title: mAP drop
