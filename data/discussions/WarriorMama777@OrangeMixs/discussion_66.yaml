!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Veil
conflicting_files: null
created_at: 2023-02-27 03:31:19+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
      fullname: Craig Empson
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Veil
      type: user
    createdAt: '2023-02-27T03:31:19.000Z'
    data:
      edited: false
      editors:
      - Veil
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
          fullname: Craig Empson
          isHf: false
          isPro: false
          name: Veil
          type: user
        html: '<p>The Supermerger add-on for the Automatic1111 Web UI looks very interesting,
          but I can''t understand how to make use of it from the usage instructions.  Is
          there anywhere that explains how to properly use this tool?</p>

          '
        raw: The Supermerger add-on for the Automatic1111 Web UI looks very interesting,
          but I can't understand how to make use of it from the usage instructions.  Is
          there anywhere that explains how to properly use this tool?
        updatedAt: '2023-02-27T03:31:19.604Z'
      numEdits: 0
      reactions: []
    id: 63fc24070aa18292d5c727cb
    type: comment
  author: Veil
  content: The Supermerger add-on for the Automatic1111 Web UI looks very interesting,
    but I can't understand how to make use of it from the usage instructions.  Is
    there anywhere that explains how to properly use this tool?
  created_at: 2023-02-27 03:31:19+00:00
  edited: false
  hidden: false
  id: 63fc24070aa18292d5c727cb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-05T10:08:44.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>You can use this instead <a rel="nofollow" href="https://github.com/bbc-mc/sdweb-merge-block-weighted-gui">https://github.com/bbc-mc/sdweb-merge-block-weighted-gui</a>
          it does the same thing and it have better ui.</p>

          '
        raw: You can use this instead https://github.com/bbc-mc/sdweb-merge-block-weighted-gui
          it does the same thing and it have better ui.
        updatedAt: '2023-03-05T10:08:44.465Z'
      numEdits: 0
      reactions: []
    id: 64046a2cad24e26b44126e86
    type: comment
  author: JosefJilek
  content: You can use this instead https://github.com/bbc-mc/sdweb-merge-block-weighted-gui
    it does the same thing and it have better ui.
  created_at: 2023-03-05 10:08:44+00:00
  edited: false
  hidden: false
  id: 64046a2cad24e26b44126e86
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
      fullname: Craig Empson
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Veil
      type: user
    createdAt: '2023-03-05T14:09:48.000Z'
    data:
      edited: false
      editors:
      - Veil
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
          fullname: Craig Empson
          isHf: false
          isPro: false
          name: Veil
          type: user
        html: '<p>The usage instructions for that tool aren''t really any better.  How
          is one to determine what values to use in order to achieve a good or desired
          result?</p>

          '
        raw: The usage instructions for that tool aren't really any better.  How is
          one to determine what values to use in order to achieve a good or desired
          result?
        updatedAt: '2023-03-05T14:09:48.143Z'
      numEdits: 0
      reactions: []
    id: 6404a2acad24e26b44381f30
    type: comment
  author: Veil
  content: The usage instructions for that tool aren't really any better.  How is
    one to determine what values to use in order to achieve a good or desired result?
  created_at: 2023-03-05 14:09:48+00:00
  edited: false
  hidden: false
  id: 6404a2acad24e26b44381f30
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-05T15:16:59.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>There is no universal guide for it, you need to do own testing.
          First step is understanding how unet works. Some stuff, that should generally
          work for any model is that first and last layers will have large impact
          on style and that middle layer will have impact on composition.</p>

          '
        raw: There is no universal guide for it, you need to do own testing. First
          step is understanding how unet works. Some stuff, that should generally
          work for any model is that first and last layers will have large impact
          on style and that middle layer will have impact on composition.
        updatedAt: '2023-03-05T15:16:59.792Z'
      numEdits: 0
      reactions: []
    id: 6404b26b9abef9e393b1c778
    type: comment
  author: JosefJilek
  content: There is no universal guide for it, you need to do own testing. First step
    is understanding how unet works. Some stuff, that should generally work for any
    model is that first and last layers will have large impact on style and that middle
    layer will have impact on composition.
  created_at: 2023-03-05 15:16:59+00:00
  edited: false
  hidden: false
  id: 6404b26b9abef9e393b1c778
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
      fullname: Craig Empson
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Veil
      type: user
    createdAt: '2023-03-05T21:18:43.000Z'
    data:
      edited: false
      editors:
      - Veil
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
          fullname: Craig Empson
          isHf: false
          isPro: false
          name: Veil
          type: user
        html: '<p>Not sure why I wouldn''t just use the standard model merger in that
          case.  What''s the point of entering a bunch of random numbers into this
          more complicated system and hoping for some miracle to occur?</p>

          '
        raw: Not sure why I wouldn't just use the standard model merger in that case.  What's
          the point of entering a bunch of random numbers into this more complicated
          system and hoping for some miracle to occur?
        updatedAt: '2023-03-05T21:18:43.657Z'
      numEdits: 0
      reactions: []
    id: 640507339abef9e393ee5ddc
    type: comment
  author: Veil
  content: Not sure why I wouldn't just use the standard model merger in that case.  What's
    the point of entering a bunch of random numbers into this more complicated system
    and hoping for some miracle to occur?
  created_at: 2023-03-05 21:18:43+00:00
  edited: false
  hidden: false
  id: 640507339abef9e393ee5ddc
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-06T08:53:54.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Like it can help you if you are expecting something specific to
          happen. Examples: keep style of one model, mixing sfw and nsfw models, fixing
          color/vae issues.</p>

          '
        raw: 'Like it can help you if you are expecting something specific to happen.
          Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
          issues.'
        updatedAt: '2023-03-06T08:53:54.689Z'
      numEdits: 0
      reactions: []
    id: 6405aa2274c2ddcd64f7f1c1
    type: comment
  author: JosefJilek
  content: 'Like it can help you if you are expecting something specific to happen.
    Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
    issues.'
  created_at: 2023-03-06 08:53:54+00:00
  edited: false
  hidden: false
  id: 6405aa2274c2ddcd64f7f1c1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-06T08:54:44.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Like it can help you if you are expecting something specific to
          happen. Examples: keep style of one model, mixing sfw and nsfw models, fixing
          color/vae issues.</p>

          '
        raw: 'Like it can help you if you are expecting something specific to happen.
          Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
          issues.'
        updatedAt: '2023-03-06T08:54:44.761Z'
      numEdits: 0
      reactions: []
    id: 6405aa54e2fa73e3aee0957f
    type: comment
  author: JosefJilek
  content: 'Like it can help you if you are expecting something specific to happen.
    Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
    issues.'
  created_at: 2023-03-06 08:54:44+00:00
  edited: false
  hidden: false
  id: 6405aa54e2fa73e3aee0957f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-06T08:55:53.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Like it can help you if you are expecting something specific to
          happen. Examples: keep style of one model, mixing sfw and nsfw models, fixing
          color/vae issues.</p>

          '
        raw: 'Like it can help you if you are expecting something specific to happen.
          Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
          issues.'
        updatedAt: '2023-03-06T08:55:53.570Z'
      numEdits: 0
      reactions: []
    id: 6405aa99e2fa73e3aee0c350
    type: comment
  author: JosefJilek
  content: 'Like it can help you if you are expecting something specific to happen.
    Examples: keep style of one model, mixing sfw and nsfw models, fixing color/vae
    issues.'
  created_at: 2023-03-06 08:55:53+00:00
  edited: false
  hidden: false
  id: 6405aa99e2fa73e3aee0c350
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
      fullname: Craig Empson
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Veil
      type: user
    createdAt: '2023-03-07T21:10:56.000Z'
    data:
      edited: false
      editors:
      - Veil
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6210c1cfb6fecb2a5c366e86359a9bad.svg
          fullname: Craig Empson
          isHf: false
          isPro: false
          name: Veil
          type: user
        html: '<p>I''ll give this one last try.  Let''s say that I want to use this
          tool to keep the style of a model while changing some other aspect of it.  How
          would I go about that, i.e., how would I determine what values to use to
          accomplish that goal?</p>

          '
        raw: I'll give this one last try.  Let's say that I want to use this tool
          to keep the style of a model while changing some other aspect of it.  How
          would I go about that, i.e., how would I determine what values to use to
          accomplish that goal?
        updatedAt: '2023-03-07T21:10:56.479Z'
      numEdits: 0
      reactions: []
    id: 6407a860cf5e3e7bd5069550
    type: comment
  author: Veil
  content: I'll give this one last try.  Let's say that I want to use this tool to
    keep the style of a model while changing some other aspect of it.  How would I
    go about that, i.e., how would I determine what values to use to accomplish that
    goal?
  created_at: 2023-03-07 21:10:56+00:00
  edited: false
  hidden: false
  id: 6407a860cf5e3e7bd5069550
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-07T21:21:47.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: "<p>For example this will pretty much keep the style of modelA and modelB\
          \ will have like 40% influence on generated content<br><a rel=\"nofollow\"\
          \ href=\"https://cdn-uploads.huggingface.co/production/uploads/1678223870758-63cab0d6145e6c9716fdacb1.png\"\
          ><img alt=\"Sn\xEDmek obrazovky 2023-03-07 221735.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/1678223870758-63cab0d6145e6c9716fdacb1.png\"\
          ></a></p>\n"
        raw: "For example this will pretty much keep the style of modelA and modelB\
          \ will have like 40% influence on generated content\n![Sn\xEDmek obrazovky\
          \ 2023-03-07 221735.png](https://cdn-uploads.huggingface.co/production/uploads/1678223870758-63cab0d6145e6c9716fdacb1.png)"
        updatedAt: '2023-03-07T21:21:47.329Z'
      numEdits: 0
      reactions: []
    id: 6407aaeb65a03fbecba139cc
    type: comment
  author: JosefJilek
  content: "For example this will pretty much keep the style of modelA and modelB\
    \ will have like 40% influence on generated content\n![Sn\xEDmek obrazovky 2023-03-07\
    \ 221735.png](https://cdn-uploads.huggingface.co/production/uploads/1678223870758-63cab0d6145e6c9716fdacb1.png)"
  created_at: 2023-03-07 21:21:47+00:00
  edited: false
  hidden: false
  id: 6407aaeb65a03fbecba139cc
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-07T21:42:15.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Basically, IN00-04 and OUT11-08 works a lot with style, and the
          more you go to the bottom of the U the more the layers affect composition.
          Because the upper layers of the U works with higher resolutions thus can''t
          change composition but can change style and the bottom layers of the U works
          with low resolutions thus can change composition but can''t change style.</p>

          '
        raw: Basically, IN00-04 and OUT11-08 works a lot with style, and the more
          you go to the bottom of the U the more the layers affect composition. Because
          the upper layers of the U works with higher resolutions thus can't change
          composition but can change style and the bottom layers of the U works with
          low resolutions thus can change composition but can't change style.
        updatedAt: '2023-03-07T21:42:15.776Z'
      numEdits: 0
      reactions: []
    id: 6407afb7102b92e60558cf81
    type: comment
  author: JosefJilek
  content: Basically, IN00-04 and OUT11-08 works a lot with style, and the more you
    go to the bottom of the U the more the layers affect composition. Because the
    upper layers of the U works with higher resolutions thus can't change composition
    but can change style and the bottom layers of the U works with low resolutions
    thus can change composition but can't change style.
  created_at: 2023-03-07 21:42:15+00:00
  edited: false
  hidden: false
  id: 6407afb7102b92e60558cf81
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-03-07T21:49:11.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Here is the visualization<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/1678225699086-63cab0d6145e6c9716fdacb1.png"><img
          alt="remotesensing-12-02001-g003.png" src="https://cdn-uploads.huggingface.co/production/uploads/1678225699086-63cab0d6145e6c9716fdacb1.png"></a></p>

          '
        raw: "Here is the visualization \n![remotesensing-12-02001-g003.png](https://cdn-uploads.huggingface.co/production/uploads/1678225699086-63cab0d6145e6c9716fdacb1.png)"
        updatedAt: '2023-03-07T21:49:11.407Z'
      numEdits: 0
      reactions: []
    id: 6407b157f76886dec0271074
    type: comment
  author: JosefJilek
  content: "Here is the visualization \n![remotesensing-12-02001-g003.png](https://cdn-uploads.huggingface.co/production/uploads/1678225699086-63cab0d6145e6c9716fdacb1.png)"
  created_at: 2023-03-07 21:49:11+00:00
  edited: false
  hidden: false
  id: 6407b157f76886dec0271074
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    createdAt: '2023-04-23T12:53:55.000Z'
    data:
      edited: true
      editors:
      - deleted
      hidden: false
      isReport: false
      latest:
        html: '<p>Is that means the IN and OUT value is good for playing around with
          the style and/or the composition from the primary model and the output?</p>

          <p>According to the visualization that you give, IN00-04 is the best for
          playing around with the style of the primary model and how much it contribute
          with the secondary model to the output . Am I correct?</p>

          <p>My mind simply get it as the advanced version of the regular checkpoint
          merger.</p>

          '
        raw: 'Is that means the IN and OUT value is good for playing around with the
          style and/or the composition from the primary model and the output?


          According to the visualization that you give, IN00-04 is the best for playing
          around with the style of the primary model and how much it contribute with
          the secondary model to the output . Am I correct?


          My mind simply get it as the advanced version of the regular checkpoint
          merger.'
        updatedAt: '2023-04-23T12:57:19.451Z'
      numEdits: 1
      reactions: []
    id: 64452a6353ecc52f50ecfd7c
    type: comment
  author: deleted
  content: 'Is that means the IN and OUT value is good for playing around with the
    style and/or the composition from the primary model and the output?


    According to the visualization that you give, IN00-04 is the best for playing
    around with the style of the primary model and how much it contribute with the
    secondary model to the output . Am I correct?


    My mind simply get it as the advanced version of the regular checkpoint merger.'
  created_at: 2023-04-23 11:53:55+00:00
  edited: true
  hidden: false
  id: 64452a6353ecc52f50ecfd7c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-04-24T17:23:35.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Yeah, you are right pretty much.</p>

          '
        raw: Yeah, you are right pretty much.
        updatedAt: '2023-04-24T17:23:35.955Z'
      numEdits: 0
      reactions: []
    id: 6446bb17f9dc06bea2a5fe8c
    type: comment
  author: JosefJilek
  content: Yeah, you are right pretty much.
  created_at: 2023-04-24 16:23:35+00:00
  edited: false
  hidden: false
  id: 6446bb17f9dc06bea2a5fe8c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    createdAt: '2023-05-08T11:34:32.000Z'
    data:
      edited: false
      editors:
      - deleted
      hidden: false
      isReport: false
      latest:
        html: "<p>I'm sorry. But how can we understand to set the value in each layers?\
          \ \U0001F914</p>\n"
        raw: "I'm sorry. But how can we understand to set the value in each layers?\
          \ \U0001F914"
        updatedAt: '2023-05-08T11:34:32.217Z'
      numEdits: 0
      reactions: []
    id: 6458de48c5d0d57ba41c8c94
    type: comment
  author: deleted
  content: "I'm sorry. But how can we understand to set the value in each layers?\
    \ \U0001F914"
  created_at: 2023-05-08 10:34:32+00:00
  edited: false
  hidden: false
  id: 6458de48c5d0d57ba41c8c94
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
      fullname: "Josef J\xEDlek"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: JosefJilek
      type: user
    createdAt: '2023-05-08T12:52:15.000Z'
    data:
      edited: false
      editors:
      - JosefJilek
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/91306552fe5a1ef55a9928df3dfa2627.svg
          fullname: "Josef J\xEDlek"
          isHf: false
          isPro: false
          name: JosefJilek
          type: user
        html: '<p>Well aside from what I already said there are no rules. You can
          only experiment with stuff, create XYZ plots and compare them</p>

          '
        raw: Well aside from what I already said there are no rules. You can only
          experiment with stuff, create XYZ plots and compare them
        updatedAt: '2023-05-08T12:52:15.289Z'
      numEdits: 0
      reactions: []
    id: 6458f07ff92601affa2f2e1b
    type: comment
  author: JosefJilek
  content: Well aside from what I already said there are no rules. You can only experiment
    with stuff, create XYZ plots and compare them
  created_at: 2023-05-08 11:52:15+00:00
  edited: false
  hidden: false
  id: 6458f07ff92601affa2f2e1b
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239b8370edc53f51cd5d42/88od0k-AAkxAIV-5ULwDs.png?w=200&h=200&f=face
      fullname: Yn Tec
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Yntec
      type: user
    createdAt: '2023-11-09T21:54:15.000Z'
    data:
      edited: true
      editors:
      - Yntec
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9529287815093994
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239b8370edc53f51cd5d42/88od0k-AAkxAIV-5ULwDs.png?w=200&h=200&f=face
          fullname: Yn Tec
          isHf: false
          isPro: false
          name: Yntec
          type: user
        html: '<p>Old discussion, I don''t know what''s the etiquette about bumping,
          but this was linked from civitai. As someone that has been doing stuff like
          this for a while:</p>

          <p><a href="https://huggingface.co/Yntec/lamettaRemix">https://huggingface.co/Yntec/lamettaRemix</a><br>(Grabbing
          two models I like, and using Merging Block Weights  until it produces my
          favorite things from both, in this case, the best version of lametta for
          compositions with the best for eyes)</p>

          <p>This is my advice:</p>

          <p>1.- Don''t bother with intermediate values, just try 0s and 1s, what
          you have in mind is on there, intermediate values chicken out and don''t
          give the full weights.</p>

          <p>2.- Use Weight Sum Train Difference, it''ll automatically subtract Model
          A from the merge and train the difference between the models as if the missing
          training data was added. This produces the best results, and it''s even
          an improvement over LoRA merging (you bake a LoRA into a model, then you
          use Weight Sum Train Difference to train the difference of the LoRA into
          the original model.) Sometimes you get really close to what you wanted but
          the eyes are messed up, Weight Sum Train Difference at alpha 1 doesn''t
          have this problem.</p>

          <p>3.- Think of the most important part of the UNET as A,B,C,D. The very
          first thing I do is doing a merge of the models with the value 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1</p>

          <p>Think of it as follows:</p>

          <p>A=0 (base)<br>B=0,0,0,0,0,0,0,0,0,0,0,0 (12 IN blocks)<br>C=1 (M00 -
          the middle block)<br>D=1,1,1,1,1,1,1,1,1,1,1,1 (12 OUT blocks)</p>

          <p>What you have in mind has a composition or a style, does this have it?
          If so, you''re going to save half of the tests you were going to make, because
          you got it already. Otherwise, try this same thing again, but with Model
          A and Model B swapped out.</p>

          <p>4.- The base should always be the opposite of the M00 block, so, if the
          model doesn''t already look the way you imagined, you need to try these
          values:</p>

          <p>0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0<br>1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1<br>1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0</p>

          <p>And now, try them with the models swapped. By now you have 8 merges,
          it should suffice to know which one is the closest to your wanted output,
          you can now leave A and C the way they are, and Model A and Model B in the
          order that they are, and continue from there.</p>

          <p>5.- I don''t know which ones of the 8 ones you''ll be working with, so
          now I''ll substitute A and C for X that means whatever you''re using, so
          now these are the magic numbers to try:</p>

          <p>X,1,1,1,1,1,1,0,0,0,0,0,0,X,0,0,0,0,0,0,1,1,1,1,1,1<br>X,0,0,0,0,0,0,1,1,1,1,1,1,X,1,1,1,1,1,1,0,0,0,0,0,0</p>

          <p>If you wanted one of the models'' compositions with the other''s style,
          you should already have it. Now that you have it, try swapping the order
          of the models  and inverting all the 0s for 1s and all the 1s for 0s and
          try it, it may give something even better.</p>

          <p>6.- If it still doesn''t do what you want, try these ones:</p>

          <p>X,1,1,1,1,1,1,0,0,0,0,0,0,X,1,1,1,1,1,1,0,0,0,0,0,0<br>X,0,0,0,0,0,0,1,1,1,1,1,1,X,0,0,0,0,0,0,1,1,1,1,1,1</p>

          <p>If at any point you''re now getting outputs with the wrong model''s composition,
          swap the order of the models, or swap the A and C blocks, otherwise, you''re
          still saving time because you don''t need to do the versions with the models
          swapped or with the A and C blocks swapped, or both, so you''re only needing
          to test 1/4 of the possibilities!</p>

          <p>7- If you''re trying to bring something specific that you want, you should
          have by now about 16 merges, one of them should have it with the wrong composition
          or another problem, so now, you start tweaking the numbers that were the
          closest, again the order of the models and the base and M00 should be set
          in stone by now. Suppose this one was the closest:</p>

          <p>1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model
          2 and Model B as Model 1)</p>

          <p>You can try adding a 1 to B and adding a 0 to C, like this:</p>

          <p>1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0</p>

          <p>Or the opposite:</p>

          <p>1,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0</p>

          <p>See what they do, what gets you closer, at some point it may be obvious
          what numbers have to remain as they are or you get worse results.</p>

          <p>Suppose this one was the closest one:</p>

          <p>0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model
          1 and Model B as Model 2)</p>

          <p>Now just on B swap a 0 and a 1, and make D copy what you changed, like
          this:</p>

          <p>0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,0,0,0</p>

          <p>And then you''d just keep trying different strings like these until you
          hit the jackpot. By reading this text you may not know what are valid strings
          to try, but after actually doing the merges you develop intuition, and after
          comparing your best merges with the previous merges it should be clear what
          bits to change for the next attempt.</p>

          <p>8- And now you could ask "why don''t you just tell me what is going to
          change?", and the thing is, I don''t know, it depends, and most importantly,
          a change you make may cause the output to be the complete opposite of what
          you intended. Somehow. When that happens I realize I have no idea what I''m
          doing, but usually swapping Model 1 and 2''s spots, or blocks A and C, or
          both, gets me back on track and produces something better than all previous
          attempts. What you need to know is that a string of 0s and 1s exist that
          produce what you want, and this is a method to the madness, all we''re doing
          is abusing binary search to minimize the space you need to explore, so instead
          of making 128 merges and building a grid, you just do it in 32 cuts, because
          from the first 8 ones we already know the ones you don''t need to make as
          3/4 of the merges will have the wrong style or composition.</p>

          <p>9- And now you could ask "why do you always keep the same numbers of
          1s and 0s?", and that''s because this is a 50% merge of both models, it
          gives them both a fair chance to deliver what you wanted. Once you have
          one you''re happy with, you could just swap a single 0 to a 1 so it''s closer
          to one of the models, and see what happens, set both base and M00 as 0s
          or 1s, maybe even start using 0.5 to see what in between places look like,
          go bonkers about it! But first you need to find the half-way point you''re
          happy with.</p>

          <p>I''ve never gotten this far, because at some point in the tweaking you
          find a surprise... a style better than the one you were going for, a new
          composition that improves the one of the best model, a grand slam out of
          nowhere! And you''re done. You didn''t get what you wanted but you can point
          at your merge and say "yes, this is better than both models", and you share
          it.</p>

          '
        raw: 'Old discussion, I don''t know what''s the etiquette about bumping, but
          this was linked from civitai. As someone that has been doing stuff like
          this for a while:


          https://huggingface.co/Yntec/lamettaRemix

          (Grabbing two models I like, and using Merging Block Weights  until it produces
          my favorite things from both, in this case, the best version of lametta
          for compositions with the best for eyes)


          This is my advice:


          1.- Don''t bother with intermediate values, just try 0s and 1s, what you
          have in mind is on there, intermediate values chicken out and don''t give
          the full weights.


          2.- Use Weight Sum Train Difference, it''ll automatically subtract Model
          A from the merge and train the difference between the models as if the missing
          training data was added. This produces the best results, and it''s even
          an improvement over LoRA merging (you bake a LoRA into a model, then you
          use Weight Sum Train Difference to train the difference of the LoRA into
          the original model.) Sometimes you get really close to what you wanted but
          the eyes are messed up, Weight Sum Train Difference at alpha 1 doesn''t
          have this problem.


          3.- Think of the most important part of the UNET as A,B,C,D. The very first
          thing I do is doing a merge of the models with the value 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1


          Think of it as follows:


          A=0 (base)

          B=0,0,0,0,0,0,0,0,0,0,0,0 (12 IN blocks)

          C=1 (M00 - the middle block)

          D=1,1,1,1,1,1,1,1,1,1,1,1 (12 OUT blocks)


          What you have in mind has a composition or a style, does this have it? If
          so, you''re going to save half of the tests you were going to make, because
          you got it already. Otherwise, try this same thing again, but with Model
          A and Model B swapped out.


          4.- The base should always be the opposite of the M00 block, so, if the
          model doesn''t already look the way you imagined, you need to try these
          values:


          0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0

          1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1

          1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0


          And now, try them with the models swapped. By now you have 8 merges, it
          should suffice to know which one is the closest to your wanted output, you
          can now leave A and C the way they are, and Model A and Model B in the order
          that they are, and continue from there.


          5.- I don''t know which ones of the 8 ones you''ll be working with, so now
          I''ll substitute A and C for X that means whatever you''re using, so now
          these are the magic numbers to try:


          X,1,1,1,1,1,1,0,0,0,0,0,0,X,0,0,0,0,0,0,1,1,1,1,1,1

          X,0,0,0,0,0,0,1,1,1,1,1,1,X,1,1,1,1,1,1,0,0,0,0,0,0


          If you wanted one of the models'' compositions with the other''s style,
          you should already have it. Now that you have it, try swapping the order
          of the models  and inverting all the 0s for 1s and all the 1s for 0s and
          try it, it may give something even better.


          6.- If it still doesn''t do what you want, try these ones:


          X,1,1,1,1,1,1,0,0,0,0,0,0,X,1,1,1,1,1,1,0,0,0,0,0,0

          X,0,0,0,0,0,0,1,1,1,1,1,1,X,0,0,0,0,0,0,1,1,1,1,1,1


          If at any point you''re now getting outputs with the wrong model''s composition,
          swap the order of the models, or swap the A and C blocks, otherwise, you''re
          still saving time because you don''t need to do the versions with the models
          swapped or with the A and C blocks swapped, or both, so you''re only needing
          to test 1/4 of the possibilities!


          7- If you''re trying to bring something specific that you want, you should
          have by now about 16 merges, one of them should have it with the wrong composition
          or another problem, so now, you start tweaking the numbers that were the
          closest, again the order of the models and the base and M00 should be set
          in stone by now. Suppose this one was the closest:


          1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model 2
          and Model B as Model 1)


          You can try adding a 1 to B and adding a 0 to C, like this:


          1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0


          Or the opposite:


          1,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0


          See what they do, what gets you closer, at some point it may be obvious
          what numbers have to remain as they are or you get worse results.


          Suppose this one was the closest one:


          0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model 1
          and Model B as Model 2)


          Now just on B swap a 0 and a 1, and make D copy what you changed, like this:


          0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,0,0,0


          And then you''d just keep trying different strings like these until you
          hit the jackpot. By reading this text you may not know what are valid strings
          to try, but after actually doing the merges you develop intuition, and after
          comparing your best merges with the previous merges it should be clear what
          bits to change for the next attempt.


          8- And now you could ask "why don''t you just tell me what is going to change?",
          and the thing is, I don''t know, it depends, and most importantly, a change
          you make may cause the output to be the complete opposite of what you intended.
          Somehow. When that happens I realize I have no idea what I''m doing, but
          usually swapping Model 1 and 2''s spots, or blocks A and C, or both, gets
          me back on track and produces something better than all previous attempts.
          What you need to know is that a string of 0s and 1s exist that produce what
          you want, and this is a method to the madness, all we''re doing is abusing
          binary search to minimize the space you need to explore, so instead of making
          128 merges and building a grid, you just do it in 32 cuts, because from
          the first 8 ones we already know the ones you don''t need to make as 3/4
          of the merges will have the wrong style or composition.


          9- And now you could ask "why do you always keep the same numbers of 1s
          and 0s?", and that''s because this is a 50% merge of both models, it gives
          them both a fair chance to deliver what you wanted. Once you have one you''re
          happy with, you could just swap a single 0 to a 1 so it''s closer to one
          of the models, and see what happens, set both base and M00 as 0s or 1s,
          maybe even start using 0.5 to see what in between places look like, go bonkers
          about it! But first you need to find the half-way point you''re happy with.


          I''ve never gotten this far, because at some point in the tweaking you find
          a surprise... a style better than the one you were going for, a new composition
          that improves the one of the best model, a grand slam out of nowhere! And
          you''re done. You didn''t get what you wanted but you can point at your
          merge and say "yes, this is better than both models", and you share it.'
        updatedAt: '2023-11-09T22:33:26.483Z'
      numEdits: 9
      reactions: []
    id: 654d55070154da835a0dbe5f
    type: comment
  author: Yntec
  content: 'Old discussion, I don''t know what''s the etiquette about bumping, but
    this was linked from civitai. As someone that has been doing stuff like this for
    a while:


    https://huggingface.co/Yntec/lamettaRemix

    (Grabbing two models I like, and using Merging Block Weights  until it produces
    my favorite things from both, in this case, the best version of lametta for compositions
    with the best for eyes)


    This is my advice:


    1.- Don''t bother with intermediate values, just try 0s and 1s, what you have
    in mind is on there, intermediate values chicken out and don''t give the full
    weights.


    2.- Use Weight Sum Train Difference, it''ll automatically subtract Model A from
    the merge and train the difference between the models as if the missing training
    data was added. This produces the best results, and it''s even an improvement
    over LoRA merging (you bake a LoRA into a model, then you use Weight Sum Train
    Difference to train the difference of the LoRA into the original model.) Sometimes
    you get really close to what you wanted but the eyes are messed up, Weight Sum
    Train Difference at alpha 1 doesn''t have this problem.


    3.- Think of the most important part of the UNET as A,B,C,D. The very first thing
    I do is doing a merge of the models with the value 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1


    Think of it as follows:


    A=0 (base)

    B=0,0,0,0,0,0,0,0,0,0,0,0 (12 IN blocks)

    C=1 (M00 - the middle block)

    D=1,1,1,1,1,1,1,1,1,1,1,1 (12 OUT blocks)


    What you have in mind has a composition or a style, does this have it? If so,
    you''re going to save half of the tests you were going to make, because you got
    it already. Otherwise, try this same thing again, but with Model A and Model B
    swapped out.


    4.- The base should always be the opposite of the M00 block, so, if the model
    doesn''t already look the way you imagined, you need to try these values:


    0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0

    1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1

    1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0


    And now, try them with the models swapped. By now you have 8 merges, it should
    suffice to know which one is the closest to your wanted output, you can now leave
    A and C the way they are, and Model A and Model B in the order that they are,
    and continue from there.


    5.- I don''t know which ones of the 8 ones you''ll be working with, so now I''ll
    substitute A and C for X that means whatever you''re using, so now these are the
    magic numbers to try:


    X,1,1,1,1,1,1,0,0,0,0,0,0,X,0,0,0,0,0,0,1,1,1,1,1,1

    X,0,0,0,0,0,0,1,1,1,1,1,1,X,1,1,1,1,1,1,0,0,0,0,0,0


    If you wanted one of the models'' compositions with the other''s style, you should
    already have it. Now that you have it, try swapping the order of the models  and
    inverting all the 0s for 1s and all the 1s for 0s and try it, it may give something
    even better.


    6.- If it still doesn''t do what you want, try these ones:


    X,1,1,1,1,1,1,0,0,0,0,0,0,X,1,1,1,1,1,1,0,0,0,0,0,0

    X,0,0,0,0,0,0,1,1,1,1,1,1,X,0,0,0,0,0,0,1,1,1,1,1,1


    If at any point you''re now getting outputs with the wrong model''s composition,
    swap the order of the models, or swap the A and C blocks, otherwise, you''re still
    saving time because you don''t need to do the versions with the models swapped
    or with the A and C blocks swapped, or both, so you''re only needing to test 1/4
    of the possibilities!


    7- If you''re trying to bring something specific that you want, you should have
    by now about 16 merges, one of them should have it with the wrong composition
    or another problem, so now, you start tweaking the numbers that were the closest,
    again the order of the models and the base and M00 should be set in stone by now.
    Suppose this one was the closest:


    1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model 2 and Model
    B as Model 1)


    You can try adding a 1 to B and adding a 0 to C, like this:


    1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0


    Or the opposite:


    1,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0


    See what they do, what gets you closer, at some point it may be obvious what numbers
    have to remain as they are or you get worse results.


    Suppose this one was the closest one:


    0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0 (Model A as Model 1 and Model
    B as Model 2)


    Now just on B swap a 0 and a 1, and make D copy what you changed, like this:


    0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,0,0,0


    And then you''d just keep trying different strings like these until you hit the
    jackpot. By reading this text you may not know what are valid strings to try,
    but after actually doing the merges you develop intuition, and after comparing
    your best merges with the previous merges it should be clear what bits to change
    for the next attempt.


    8- And now you could ask "why don''t you just tell me what is going to change?",
    and the thing is, I don''t know, it depends, and most importantly, a change you
    make may cause the output to be the complete opposite of what you intended. Somehow.
    When that happens I realize I have no idea what I''m doing, but usually swapping
    Model 1 and 2''s spots, or blocks A and C, or both, gets me back on track and
    produces something better than all previous attempts. What you need to know is
    that a string of 0s and 1s exist that produce what you want, and this is a method
    to the madness, all we''re doing is abusing binary search to minimize the space
    you need to explore, so instead of making 128 merges and building a grid, you
    just do it in 32 cuts, because from the first 8 ones we already know the ones
    you don''t need to make as 3/4 of the merges will have the wrong style or composition.


    9- And now you could ask "why do you always keep the same numbers of 1s and 0s?",
    and that''s because this is a 50% merge of both models, it gives them both a fair
    chance to deliver what you wanted. Once you have one you''re happy with, you could
    just swap a single 0 to a 1 so it''s closer to one of the models, and see what
    happens, set both base and M00 as 0s or 1s, maybe even start using 0.5 to see
    what in between places look like, go bonkers about it! But first you need to find
    the half-way point you''re happy with.


    I''ve never gotten this far, because at some point in the tweaking you find a
    surprise... a style better than the one you were going for, a new composition
    that improves the one of the best model, a grand slam out of nowhere! And you''re
    done. You didn''t get what you wanted but you can point at your merge and say
    "yes, this is better than both models", and you share it.'
  created_at: 2023-11-09 21:54:15+00:00
  edited: true
  hidden: false
  id: 654d55070154da835a0dbe5f
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 66
repo_id: WarriorMama777/OrangeMixs
repo_type: model
status: open
target_branch: null
title: How to Use Supermerger
