!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Gyeongmo
conflicting_files: null
created_at: 2023-04-22 12:05:32+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/64a103355167a4dbb7a9b580d32bdff0.svg
      fullname: Min
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Gyeongmo
      type: user
    createdAt: '2023-04-22T13:05:32.000Z'
    data:
      edited: true
      editors:
      - Gyeongmo
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/64a103355167a4dbb7a9b580d32bdff0.svg
          fullname: Min
          isHf: false
          isPro: false
          name: Gyeongmo
          type: user
        html: "<p>\uC548\uB155\uD558\uC138\uC694?<br>\uC774 \uBAA8\uB378\uC744 \uD55C\
          \ \uB2EC\uC5D0\uB3C4 \uBA87 \uBC88\uC529 \uB0B4\uB824 \uBC1B\uC544 \uC544\
          \uC8FC \uC798 \uC4F0\uACE0 \uC788\uB294 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4\
          . \uC88B\uC740 \uBAA8\uB378 \uB9CC\uB4E4\uC5B4 \uC8FC\uC154\uC11C \uC815\
          \uB9D0\uC815\uB9D0 \uAC10\uC0AC\uD569\uB2C8\uB2E4.<br>\uB355\uBD84\uC5D0\
          \ \uD559\uC0DD\uB4E4\uC5D0\uAC8C \uACFC\uD559 \uC9C8\uBB38-\uB2F5\uBCC0\
          \ \uC11C\uBE44\uC2A4\uB97C \uC81C\uACF5\uD558\uC5EC \uC720\uC6A9\uD558\uAC8C\
          \ \uC798 \uC4F0\uACE0 \uC788\uC2B5\uB2C8\uB2E4. (\uC8FC\uC18C\uB294 <a rel=\"\
          nofollow\" href=\"https://acer2.snu.ac.kr\">https://acer2.snu.ac.kr</a>\
          \ \uC785\uB2C8\uB2E4.)<br>\uD55C \uAC00\uC9C0 \uC9C8\uBB38\uC774 \uC788\uB294\
          \uB370\uC694, \uB2E8\uC5B4\uC7A5\uC5D0 \uD654\uD559\uACB0\uD569\uC5D0\uC11C\
          \ \uC4F0\uB294 '\uC625\uD15F' \uADDC\uCE59\uC774\uB780 \uB2E8\uC5B4\uAC00\
          \ \uB4E4\uC5B4\uAC00\uBA74 '\uC625\uD15F'\uC774\uB780 \uB2E8\uC5B4\uAC00\
          \ \uC5C6\uC5B4\uC11C \uADF8\uB7F0\uC9C0 \uC5C9\uB6B1\uD55C \uBB38\uC7A5\uC744\
          \ \uAC00\uC7A5 \uC720\uC0AC\uD558\uB2E4\uACE0 \uD310\uBCC4\uD569\uB2C8\uB2E4\
          .  \uB2E8\uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uB123\
          \uACE0 \uC801\uC6A9\uD558\uC5EC \uBAA8\uB378\uC744 \uB9CC\uB4E4\uACE0, \uC774\
          \ \uBAA8\uB378\uC744 \uBD88\uB7EC\uC640\uC11C \uC801\uC6A9\uD558\uC5EC \uC0AC\
          \uC6A9\uD558\uB824\uBA74 \uC5B4\uB5BB\uAC8C \uD574\uC57C \uD558\uB294\uC9C0\
          \ \uC54C \uC218 \uC788\uC744\uAE4C\uC694?<br>\uAC10\uC0AC\uD569\uB2C8\uB2E4\
          .</p>\n"
        raw: "\uC548\uB155\uD558\uC138\uC694?\n\uC774 \uBAA8\uB378\uC744 \uD55C \uB2EC\
          \uC5D0\uB3C4 \uBA87 \uBC88\uC529 \uB0B4\uB824 \uBC1B\uC544 \uC544\uC8FC\
          \ \uC798 \uC4F0\uACE0 \uC788\uB294 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4\
          . \uC88B\uC740 \uBAA8\uB378 \uB9CC\uB4E4\uC5B4 \uC8FC\uC154\uC11C \uC815\
          \uB9D0\uC815\uB9D0 \uAC10\uC0AC\uD569\uB2C8\uB2E4.\n\uB355\uBD84\uC5D0 \uD559\
          \uC0DD\uB4E4\uC5D0\uAC8C \uACFC\uD559 \uC9C8\uBB38-\uB2F5\uBCC0 \uC11C\uBE44\
          \uC2A4\uB97C \uC81C\uACF5\uD558\uC5EC \uC720\uC6A9\uD558\uAC8C \uC798 \uC4F0\
          \uACE0 \uC788\uC2B5\uB2C8\uB2E4. (\uC8FC\uC18C\uB294 https://acer2.snu.ac.kr\
          \ \uC785\uB2C8\uB2E4.)\n\uD55C \uAC00\uC9C0 \uC9C8\uBB38\uC774 \uC788\uB294\
          \uB370\uC694, \uB2E8\uC5B4\uC7A5\uC5D0 \uD654\uD559\uACB0\uD569\uC5D0\uC11C\
          \ \uC4F0\uB294 '\uC625\uD15F' \uADDC\uCE59\uC774\uB780 \uB2E8\uC5B4\uAC00\
          \ \uB4E4\uC5B4\uAC00\uBA74 '\uC625\uD15F'\uC774\uB780 \uB2E8\uC5B4\uAC00\
          \ \uC5C6\uC5B4\uC11C \uADF8\uB7F0\uC9C0 \uC5C9\uB6B1\uD55C \uBB38\uC7A5\uC744\
          \ \uAC00\uC7A5 \uC720\uC0AC\uD558\uB2E4\uACE0 \uD310\uBCC4\uD569\uB2C8\uB2E4\
          .  \uB2E8\uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uB123\
          \uACE0 \uC801\uC6A9\uD558\uC5EC \uBAA8\uB378\uC744 \uB9CC\uB4E4\uACE0, \uC774\
          \ \uBAA8\uB378\uC744 \uBD88\uB7EC\uC640\uC11C \uC801\uC6A9\uD558\uC5EC \uC0AC\
          \uC6A9\uD558\uB824\uBA74 \uC5B4\uB5BB\uAC8C \uD574\uC57C \uD558\uB294\uC9C0\
          \ \uC54C \uC218 \uC788\uC744\uAE4C\uC694?\n\uAC10\uC0AC\uD569\uB2C8\uB2E4\
          ."
        updatedAt: '2023-04-22T13:06:52.458Z'
      numEdits: 1
      reactions: []
    id: 6443db9c2c6c12d0bb4e8aa7
    type: comment
  author: Gyeongmo
  content: "\uC548\uB155\uD558\uC138\uC694?\n\uC774 \uBAA8\uB378\uC744 \uD55C \uB2EC\
    \uC5D0\uB3C4 \uBA87 \uBC88\uC529 \uB0B4\uB824 \uBC1B\uC544 \uC544\uC8FC \uC798\
    \ \uC4F0\uACE0 \uC788\uB294 \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4. \uC88B\uC740\
    \ \uBAA8\uB378 \uB9CC\uB4E4\uC5B4 \uC8FC\uC154\uC11C \uC815\uB9D0\uC815\uB9D0\
    \ \uAC10\uC0AC\uD569\uB2C8\uB2E4.\n\uB355\uBD84\uC5D0 \uD559\uC0DD\uB4E4\uC5D0\
    \uAC8C \uACFC\uD559 \uC9C8\uBB38-\uB2F5\uBCC0 \uC11C\uBE44\uC2A4\uB97C \uC81C\uACF5\
    \uD558\uC5EC \uC720\uC6A9\uD558\uAC8C \uC798 \uC4F0\uACE0 \uC788\uC2B5\uB2C8\uB2E4\
    . (\uC8FC\uC18C\uB294 https://acer2.snu.ac.kr \uC785\uB2C8\uB2E4.)\n\uD55C \uAC00\
    \uC9C0 \uC9C8\uBB38\uC774 \uC788\uB294\uB370\uC694, \uB2E8\uC5B4\uC7A5\uC5D0 \uD654\
    \uD559\uACB0\uD569\uC5D0\uC11C \uC4F0\uB294 '\uC625\uD15F' \uADDC\uCE59\uC774\uB780\
    \ \uB2E8\uC5B4\uAC00 \uB4E4\uC5B4\uAC00\uBA74 '\uC625\uD15F'\uC774\uB780 \uB2E8\
    \uC5B4\uAC00 \uC5C6\uC5B4\uC11C \uADF8\uB7F0\uC9C0 \uC5C9\uB6B1\uD55C \uBB38\uC7A5\
    \uC744 \uAC00\uC7A5 \uC720\uC0AC\uD558\uB2E4\uACE0 \uD310\uBCC4\uD569\uB2C8\uB2E4\
    .  \uB2E8\uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uB123\uACE0\
    \ \uC801\uC6A9\uD558\uC5EC \uBAA8\uB378\uC744 \uB9CC\uB4E4\uACE0, \uC774 \uBAA8\
    \uB378\uC744 \uBD88\uB7EC\uC640\uC11C \uC801\uC6A9\uD558\uC5EC \uC0AC\uC6A9\uD558\
    \uB824\uBA74 \uC5B4\uB5BB\uAC8C \uD574\uC57C \uD558\uB294\uC9C0 \uC54C \uC218\
    \ \uC788\uC744\uAE4C\uC694?\n\uAC10\uC0AC\uD569\uB2C8\uB2E4."
  created_at: 2023-04-22 12:05:32+00:00
  edited: true
  hidden: false
  id: 6443db9c2c6c12d0bb4e8aa7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1cf08cb4f3db389863c46f3813be6659.svg
      fullname: Junghyun Gan
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: jhgan
      type: user
    createdAt: '2023-04-22T15:23:57.000Z'
    data:
      edited: true
      editors:
      - jhgan
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1cf08cb4f3db389863c46f3813be6659.svg
          fullname: Junghyun Gan
          isHf: false
          isPro: false
          name: jhgan
          type: user
        html: "<p>\uC548\uB155\uD558\uC138\uC694! \uBA3C\uC800 \uBD80\uC871\uD55C\
          \ \uACB0\uACFC\uBB3C\uC5D0 \uAD00\uC2EC\uC744 \uAC00\uC838\uC8FC\uC154\uC11C\
          \ \uAC10\uC0AC\uB4DC\uB9BD\uB2C8\uB2E4.</p>\n<p>\uB9D0\uC500\uC8FC\uC2E0\
          \ \uAC83\uCC98\uB7FC \uD604\uC7AC \uD559\uC2B5\uB41C \uBAA8\uB378\uC758\
          \ \uB2E8\uC5B4\uC7A5\uC5D0\uB294 '\uC625\uD15F'\uC774\uB77C\uB294 \uB2E8\
          \uC5B4\uAC00 \uC5C6\uB294 \uAC83\uC73C\uB85C \uD655\uC778\uB418\uC5C8\uC2B5\
          \uB2C8\uB2E4. (<code>[UNK]</code> \uD1A0\uD070\uC740 unknown \uC744 \uC758\
          \uBBF8\uD569\uB2C8\uB2E4)</p>\n<pre><code class=\"language-python\"><span\
          \ class=\"hljs-keyword\">from</span> transformers <span class=\"hljs-keyword\"\
          >import</span> AutoTokenizer, AutoModel\n<span class=\"hljs-keyword\">import</span>\
          \ torch\n\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\
          \ function_\">mean_pooling</span>(<span class=\"hljs-params\">model_output,\
          \ attention_mask</span>):\n        token_embeddings = model_output[<span\
          \ class=\"hljs-number\">0</span>] <span class=\"hljs-comment\">#First element\
          \ of model_output contains all token embeddings</span>\n        input_mask_expanded\
          \ = attention_mask.unsqueeze(-<span class=\"hljs-number\">1</span>).expand(token_embeddings.size()).<span\
          \ class=\"hljs-built_in\">float</span>()\n        <span class=\"hljs-keyword\"\
          >return</span> torch.<span class=\"hljs-built_in\">sum</span>(token_embeddings\
          \ * input_mask_expanded, <span class=\"hljs-number\">1</span>) / torch.clamp(input_mask_expanded.<span\
          \ class=\"hljs-built_in\">sum</span>(<span class=\"hljs-number\">1</span>),\
          \ <span class=\"hljs-built_in\">min</span>=<span class=\"hljs-number\">1e-9</span>)\n\
          \n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\"\
          >\"__main__\"</span>:\n\n        tokenizer = AutoTokenizer.from_pretrained(<span\
          \ class=\"hljs-string\">'jhgan/ko-sroberta-multitask'</span>)\n        sentence\
          \ = <span class=\"hljs-string\">\"\uC625\uD15F \uADDC\uCE59\uC5D0 \uB300\
          \uD574\uC11C \uC124\uBA85\uD574\uC8FC\uC138\uC694\"</span>\n\n        input_ids\
          \ = tokenizer(sentence).get(<span class=\"hljs-string\">\"input_ids\"</span>)\n\
          \        decoded_tokens = tokenizer.convert_ids_to_tokens(input_ids)\n \
          \       <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\"\
          >\"\uD1A0\uD070 \uCD94\uAC00 \uC804\"</span>)\n        <span class=\"hljs-built_in\"\
          >print</span>(<span class=\"hljs-string\">\"encoded tokens:\"</span>, input_ids)\n\
          \        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\"\
          >\"decoded tokens:\"</span>, decoded_tokens, end=<span class=\"hljs-string\"\
          >\"\\n\\n\"</span>)\n\n        <span class=\"hljs-comment\"># \uD1A0\uD070\
          \ \uCD94\uAC00</span>\n        tokenizer.add_tokens(<span class=\"hljs-string\"\
          >\"\uC625\uD15F\"</span>)\n        input_ids = tokenizer(sentence).get(<span\
          \ class=\"hljs-string\">\"input_ids\"</span>)\n        decoded_tokens =\
          \ tokenizer.convert_ids_to_tokens(input_ids)\n        <span class=\"hljs-built_in\"\
          >print</span>(<span class=\"hljs-string\">\"\uD1A0\uD070 \uCD94\uAC00 \uD6C4\
          \"</span>)\n        <span class=\"hljs-built_in\">print</span>(<span class=\"\
          hljs-string\">\"encoded tokens:\"</span>, input_ids)\n        <span class=\"\
          hljs-built_in\">print</span>(<span class=\"hljs-string\">\"decoded tokens:\"\
          </span>, decoded_tokens)\n\n        model = AutoModel.from_pretrained(<span\
          \ class=\"hljs-string\">'jhgan/ko-sroberta-multitask'</span>)\n        model.resize_token_embeddings(<span\
          \ class=\"hljs-built_in\">len</span>(tokenizer))\n        encoded_input\
          \ = tokenizer(sentence, return_tensors=<span class=\"hljs-string\">'pt'</span>)\n\
          \        <span class=\"hljs-keyword\">with</span> torch.no_grad():\n   \
          \             model_output = model(**encoded_input)\n                sentence_embeddings\
          \ = mean_pooling(model_output, encoded_input[<span class=\"hljs-string\"\
          >'attention_mask'</span>])\n\n<span class=\"hljs-comment\">#output</span>\n\
          <span class=\"hljs-comment\">#\uD1A0\uD070 \uCD94\uAC00 \uC804</span>\n\
          <span class=\"hljs-comment\">#encoded tokens: [0, 3, 6094, 2170, 3958, 3788,\
          \ 2097, 2223, 5971, 2]</span>\n<span class=\"hljs-comment\">#decoded tokens:\
          \ ['[CLS]', '[UNK]', '\uADDC\uCE59', '##\uC5D0', '\uB300\uD574\uC11C', '\uC124\
          \uBA85', '##\uD574', '##\uC8FC', '##\uC138\uC694', '[SEP]']</span>\n\n<span\
          \ class=\"hljs-comment\">#\uD1A0\uD070 \uCD94\uAC00 \uD6C4</span>\n<span\
          \ class=\"hljs-comment\">#encoded tokens: [0, 32000, 6094, 2170, 3958, 3788,\
          \ 2097, 2223, 5971, 2]</span>\n<span class=\"hljs-comment\">#decoded tokens:\
          \ ['[CLS]', '\uC625\uD15F', '\uADDC\uCE59', '##\uC5D0', '\uB300\uD574\uC11C\
          ', '\uC124\uBA85', '##\uD574', '##\uC8FC', '##\uC138\uC694', '[SEP]']</span>\n\
          </code></pre>\n<p>\uBCF4\uC2DC\uB294 \uCF54\uB4DC\uCC98\uB7FC \uB2E8\uC5B4\
          \uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uCD94\uAC00\uD558\uB294\
          \ \uAC83\uC774 \uAC00\uB2A5\uD558\uC9C0\uB9CC, <strong>\uCD94\uAC00\uB41C\
          \ \uB2E8\uC5B4\uC758 \uC758\uBBF8\uAC00 \uBAA8\uB378\uC5D0 \uCDA9\uBD84\uD788\
          \ \uBC18\uC601\uB418\uB3C4\uB85D \uD559\uC2B5\uC2DC\uCF1C \uD65C\uC6A9\uD558\
          \uC2DC\uAE30\uB294 \uC27D\uC9C0 \uC54A\uC744 \uAC83\uC73C\uB85C \uC608\uC0C1\
          \uB429\uB2C8\uB2E4</strong>. \uC774\uC720\uB294 \uB2E4\uC74C\uACFC \uAC19\
          \uC2B5\uB2C8\uB2E4.</p>\n<ol>\n<li><p>'\uC625\uD15F'\uC774\uB77C\uB294 \uB2E8\
          \uC5B4\uB97C \uCD94\uAC00\uD574 \uBAA8\uB378\uC744 \uB2E4\uC2DC \uD559\uC2B5\
          \uC2DC\uD0A4\uAE30 \uC704\uD574\uC11C\uB294 \uADF8 <strong>\uB2E8\uC5B4\uB97C\
          \ \uD3EC\uD568\uD558\uB294 \uD14D\uC2A4\uD2B8 \uB370\uC774\uD130\uAC00 \uCDA9\
          \uBD84\uD788 \uB9CE\uC544\uC57C \uD558\uACE0, \uC801\uC808\uD55C \uD615\uD0DC\
          \uC758 \uB808\uC774\uBE14\uB9C1\uAE4C\uC9C0 \uB418\uC5B4\uC788\uC5B4\uC57C\
          \ \uD569\uB2C8\uB2E4.</strong> \uBCF8 \uBAA8\uB378\uC5D0 \uC0AC\uC6A9\uB41C\
          \ \uB808\uC774\uBE14\uC758 \uD615\uC2DD\uC5D0 \uB300\uD574\uC11C\uB294 \uCE74\
          \uCE74\uC624\uBE0C\uB808\uC778\uC758 KorNLU \uB370\uC774\uD130\uC14B\uC744\
          \ \uAC80\uC0C9\uD574\uBCF4\uC2DC\uBA74 \uC774\uD574\uAC00 \uC26C\uC6B8 \uAC83\
          \ \uAC19\uC2B5\uB2C8\uB2E4. \uB9CC\uC57D <strong>\uB808\uC774\uBE14\uB9C1\
          \uC740 \uB418\uC5B4\uC788\uC9C0 \uC54A\uC9C0\uB9CC \uCDA9\uBD84\uD788 \uB9CE\
          \uC740 \uC218\uC758 \uB370\uC774\uD130\uB97C \uD655\uBCF4\uD558\uACE0 \uACC4\
          \uC2DC\uB2E4\uBA74 SimCSE \uC640 \uAC19\uC740 \uBC29\uBC95\uB860\uC73C\uB85C\
          \ \uBAA8\uB378\uC744 \uC9C1\uC811 \uD559\uC2B5\uD0A4\uB294 \uBC29\uBC95\uC774\
          \ \uC788\uC744 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4.</strong></p>\n</li>\n<li><p>\uBCF8\
          \ \uBAA8\uB378\uC740 \uB300\uADDC\uBAA8 \uD14D\uC2A4\uD2B8 \uB370\uC774\uD130\
          \uB97C \uC0AC\uC804\uD559\uC2B5\uD55C \uC5B8\uC5B4\uBAA8\uB378\uC5D0 \uCD94\
          \uAC00\uC801\uC778 \uD559\uC2B5\uC744 \uC9C4\uD589\uD574 \uB9CC\uB4E4\uC5B4\
          \uC84C\uC73C\uBA70, \uC0AC\uC804\uD559\uC2B5 \uBAA8\uB378\uC758 \uC131\uB2A5\
          \uC5D0 \uD06C\uAC8C \uC601\uD5A5\uC744 \uBC1B\uC2B5\uB2C8\uB2E4. '\uC625\
          \uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uB97C \uD574\uB2F9 \uB2E8\uC5B4\uB97C\
          \ \uD3EC\uD568\uD558\uB294 \uB370\uC774\uD130 \uCDA9\uBD84\uD788 \uB9CE\uC774\
          \ \uC900\uBE44\uD574 \uCD94\uAC00 \uD559\uC2B5\uC744 \uC9C4\uD589\uD560\
          \ \uACBD\uC6B0 \uD574\uB2F9 \uB2E8\uC5B4\uB97C \uD3EC\uD568\uD558\uB294\
          \ \uCF00\uC774\uC2A4\uC5D0 \uB300\uD574\uC11C\uB294 \uC131\uB2A5\uC774 \uAC1C\
          \uC120\uB418\uACA0\uC9C0\uB9CC <strong>\uC0AC\uC804\uD559\uC2B5 \uACFC\uC815\
          \uC5D0\uC11C \uD559\uC2B5\uB41C \uB2E8\uC5B4\uAC00 \uC544\uB2C8\uAE30 \uB54C\
          \uBB38\uC5D0 \uC131\uB2A5 \uAC1C\uC120\uD3ED\uC774 \uC0DD\uAC01\uBCF4\uB2E4\
          \ \uD06C\uC9C0 \uC54A\uC744 \uC218\uB3C4 \uC788\uACE0, \uC624\uD788\uB824\
          \ \uBAA8\uB378\uC758 \uC77C\uBC18\uD654 \uC131\uB2A5\uC744 \uC545\uD654\uC2DC\
          \uD0AC \uC5EC\uC9C0\uB3C4 \uC788\uC5B4 \uBCF4\uC785\uB2C8\uB2E4.</strong></p>\n\
          </li>\n</ol>\n<p>\uC774\uC640 \uAD00\uB828\uB41C \uC5F0\uAD6C\uB4E4\uC774\
          \ \uB9CE\uAE30\uB294 \uD560\uD150\uB370,, \uC81C\uAC00 \uD314\uB85C\uC5C5\
          \uD558\uACE0 \uC788\uC9C0\uB294 \uBABB\uD55C \uC0C1\uD669\uC785\uB2C8\uB2E4\
          . \uB9CC\uC57D \uC0AC\uC6A9\uD558\uC2DC\uB294 \uC601\uC5ED\uC5D0\uC11C \uBAA8\
          \uB378 \uC131\uB2A5\uC744 \uC880\uB354 \uAC1C\uC120\uD558\uC2DC\uAE38 \uC6D0\
          \uD558\uC2E0\uB2E4\uBA74, language model domain adapdation \uB4F1\uC758\
          \ \uD0A4\uC6CC\uB4DC\uB97C \uCC3E\uC544\uBCF4\uC2DC\uBA74 \uAD00\uB828\uB41C\
          \ \uC790\uB8CC\uB4E4\uC774 \uC788\uC744\uC9C0\uB3C4 \uBAA8\uB974\uACA0\uC2B5\
          \uB2C8\uB2E4. </p>\n<p>\uB9CE\uC740 \uB3C4\uC6C0 \uB4DC\uB9AC\uC9C0 \uBABB\
          \uD574 \uC8C4\uC1A1\uD569\uB2C8\uB2E4 \u3160\u3160</p>\n"
        raw: "\uC548\uB155\uD558\uC138\uC694! \uBA3C\uC800 \uBD80\uC871\uD55C \uACB0\
          \uACFC\uBB3C\uC5D0 \uAD00\uC2EC\uC744 \uAC00\uC838\uC8FC\uC154\uC11C \uAC10\
          \uC0AC\uB4DC\uB9BD\uB2C8\uB2E4.\n\n\uB9D0\uC500\uC8FC\uC2E0 \uAC83\uCC98\
          \uB7FC \uD604\uC7AC \uD559\uC2B5\uB41C \uBAA8\uB378\uC758 \uB2E8\uC5B4\uC7A5\
          \uC5D0\uB294 '\uC625\uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uAC00 \uC5C6\uB294\
          \ \uAC83\uC73C\uB85C \uD655\uC778\uB418\uC5C8\uC2B5\uB2C8\uB2E4. (`[UNK]`\
          \ \uD1A0\uD070\uC740 unknown \uC744 \uC758\uBBF8\uD569\uB2C8\uB2E4)\n\n\
          ```python\nfrom transformers import AutoTokenizer, AutoModel\nimport torch\n\
          \n\ndef mean_pooling(model_output, attention_mask):\n        token_embeddings\
          \ = model_output[0] #First element of model_output contains all token embeddings\n\
          \        input_mask_expanded = attention_mask.unsqueeze(-1).expand(token_embeddings.size()).float()\n\
          \        return torch.sum(token_embeddings * input_mask_expanded, 1) / torch.clamp(input_mask_expanded.sum(1),\
          \ min=1e-9)\n\n\nif __name__ == \"__main__\":\n\n        tokenizer = AutoTokenizer.from_pretrained('jhgan/ko-sroberta-multitask')\n\
          \        sentence = \"\uC625\uD15F \uADDC\uCE59\uC5D0 \uB300\uD574\uC11C\
          \ \uC124\uBA85\uD574\uC8FC\uC138\uC694\"\n\n        input_ids = tokenizer(sentence).get(\"\
          input_ids\")\n        decoded_tokens = tokenizer.convert_ids_to_tokens(input_ids)\n\
          \        print(\"\uD1A0\uD070 \uCD94\uAC00 \uC804\")\n        print(\"encoded\
          \ tokens:\", input_ids)\n        print(\"decoded tokens:\", decoded_tokens,\
          \ end=\"\\n\\n\")\n\n        # \uD1A0\uD070 \uCD94\uAC00\n        tokenizer.add_tokens(\"\
          \uC625\uD15F\")\n        input_ids = tokenizer(sentence).get(\"input_ids\"\
          )\n        decoded_tokens = tokenizer.convert_ids_to_tokens(input_ids)\n\
          \        print(\"\uD1A0\uD070 \uCD94\uAC00 \uD6C4\")\n        print(\"encoded\
          \ tokens:\", input_ids)\n        print(\"decoded tokens:\", decoded_tokens)\n\
          \n        model = AutoModel.from_pretrained('jhgan/ko-sroberta-multitask')\n\
          \        model.resize_token_embeddings(len(tokenizer))\n        encoded_input\
          \ = tokenizer(sentence, return_tensors='pt')\n        with torch.no_grad():\n\
          \                model_output = model(**encoded_input)\n               \
          \ sentence_embeddings = mean_pooling(model_output, encoded_input['attention_mask'])\n\
          \n#output\n#\uD1A0\uD070 \uCD94\uAC00 \uC804\n#encoded tokens: [0, 3, 6094,\
          \ 2170, 3958, 3788, 2097, 2223, 5971, 2]\n#decoded tokens: ['[CLS]', '[UNK]',\
          \ '\uADDC\uCE59', '##\uC5D0', '\uB300\uD574\uC11C', '\uC124\uBA85', '##\uD574\
          ', '##\uC8FC', '##\uC138\uC694', '[SEP]']\n\n#\uD1A0\uD070 \uCD94\uAC00\
          \ \uD6C4\n#encoded tokens: [0, 32000, 6094, 2170, 3958, 3788, 2097, 2223,\
          \ 5971, 2]\n#decoded tokens: ['[CLS]', '\uC625\uD15F', '\uADDC\uCE59', '##\uC5D0\
          ', '\uB300\uD574\uC11C', '\uC124\uBA85', '##\uD574', '##\uC8FC', '##\uC138\
          \uC694', '[SEP]']\n```\n\n\uBCF4\uC2DC\uB294 \uCF54\uB4DC\uCC98\uB7FC \uB2E8\
          \uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uCD94\uAC00\uD558\
          \uB294 \uAC83\uC774 \uAC00\uB2A5\uD558\uC9C0\uB9CC, **\uCD94\uAC00\uB41C\
          \ \uB2E8\uC5B4\uC758 \uC758\uBBF8\uAC00 \uBAA8\uB378\uC5D0 \uCDA9\uBD84\uD788\
          \ \uBC18\uC601\uB418\uB3C4\uB85D \uD559\uC2B5\uC2DC\uCF1C \uD65C\uC6A9\uD558\
          \uC2DC\uAE30\uB294 \uC27D\uC9C0 \uC54A\uC744 \uAC83\uC73C\uB85C \uC608\uC0C1\
          \uB429\uB2C8\uB2E4**. \uC774\uC720\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\
          \uB2C8\uB2E4.\n\n1.  '\uC625\uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uB97C\
          \ \uCD94\uAC00\uD574 \uBAA8\uB378\uC744 \uB2E4\uC2DC \uD559\uC2B5\uC2DC\uD0A4\
          \uAE30 \uC704\uD574\uC11C\uB294 \uADF8 **\uB2E8\uC5B4\uB97C \uD3EC\uD568\
          \uD558\uB294 \uD14D\uC2A4\uD2B8 \uB370\uC774\uD130\uAC00 \uCDA9\uBD84\uD788\
          \ \uB9CE\uC544\uC57C \uD558\uACE0, \uC801\uC808\uD55C \uD615\uD0DC\uC758\
          \ \uB808\uC774\uBE14\uB9C1\uAE4C\uC9C0 \uB418\uC5B4\uC788\uC5B4\uC57C \uD569\
          \uB2C8\uB2E4.** \uBCF8 \uBAA8\uB378\uC5D0 \uC0AC\uC6A9\uB41C \uB808\uC774\
          \uBE14\uC758 \uD615\uC2DD\uC5D0 \uB300\uD574\uC11C\uB294 \uCE74\uCE74\uC624\
          \uBE0C\uB808\uC778\uC758 KorNLU \uB370\uC774\uD130\uC14B\uC744 \uAC80\uC0C9\
          \uD574\uBCF4\uC2DC\uBA74 \uC774\uD574\uAC00 \uC26C\uC6B8 \uAC83 \uAC19\uC2B5\
          \uB2C8\uB2E4. \uB9CC\uC57D **\uB808\uC774\uBE14\uB9C1\uC740 \uB418\uC5B4\
          \uC788\uC9C0 \uC54A\uC9C0\uB9CC \uCDA9\uBD84\uD788 \uB9CE\uC740 \uC218\uC758\
          \ \uB370\uC774\uD130\uB97C \uD655\uBCF4\uD558\uACE0 \uACC4\uC2DC\uB2E4\uBA74\
          \ SimCSE \uC640 \uAC19\uC740 \uBC29\uBC95\uB860\uC73C\uB85C \uBAA8\uB378\
          \uC744 \uC9C1\uC811 \uD559\uC2B5\uD0A4\uB294 \uBC29\uBC95\uC774 \uC788\uC744\
          \ \uAC83 \uAC19\uC2B5\uB2C8\uB2E4.**\n\n2. \uBCF8 \uBAA8\uB378\uC740 \uB300\
          \uADDC\uBAA8 \uD14D\uC2A4\uD2B8 \uB370\uC774\uD130\uB97C \uC0AC\uC804\uD559\
          \uC2B5\uD55C \uC5B8\uC5B4\uBAA8\uB378\uC5D0 \uCD94\uAC00\uC801\uC778 \uD559\
          \uC2B5\uC744 \uC9C4\uD589\uD574 \uB9CC\uB4E4\uC5B4\uC84C\uC73C\uBA70, \uC0AC\
          \uC804\uD559\uC2B5 \uBAA8\uB378\uC758 \uC131\uB2A5\uC5D0 \uD06C\uAC8C \uC601\
          \uD5A5\uC744 \uBC1B\uC2B5\uB2C8\uB2E4. '\uC625\uD15F'\uC774\uB77C\uB294\
          \ \uB2E8\uC5B4\uB97C \uD574\uB2F9 \uB2E8\uC5B4\uB97C \uD3EC\uD568\uD558\uB294\
          \ \uB370\uC774\uD130 \uCDA9\uBD84\uD788 \uB9CE\uC774 \uC900\uBE44\uD574\
          \ \uCD94\uAC00 \uD559\uC2B5\uC744 \uC9C4\uD589\uD560 \uACBD\uC6B0 \uD574\
          \uB2F9 \uB2E8\uC5B4\uB97C \uD3EC\uD568\uD558\uB294 \uCF00\uC774\uC2A4\uC5D0\
          \ \uB300\uD574\uC11C\uB294 \uC131\uB2A5\uC774 \uAC1C\uC120\uB418\uACA0\uC9C0\
          \uB9CC **\uC0AC\uC804\uD559\uC2B5 \uACFC\uC815\uC5D0\uC11C \uD559\uC2B5\uB41C\
          \ \uB2E8\uC5B4\uAC00 \uC544\uB2C8\uAE30 \uB54C\uBB38\uC5D0 \uC131\uB2A5\
          \ \uAC1C\uC120\uD3ED\uC774 \uC0DD\uAC01\uBCF4\uB2E4 \uD06C\uC9C0 \uC54A\uC744\
          \ \uC218\uB3C4 \uC788\uACE0, \uC624\uD788\uB824 \uBAA8\uB378\uC758 \uC77C\
          \uBC18\uD654 \uC131\uB2A5\uC744 \uC545\uD654\uC2DC\uD0AC \uC5EC\uC9C0\uB3C4\
          \ \uC788\uC5B4 \uBCF4\uC785\uB2C8\uB2E4.**\n\n\uC774\uC640 \uAD00\uB828\uB41C\
          \ \uC5F0\uAD6C\uB4E4\uC774 \uB9CE\uAE30\uB294 \uD560\uD150\uB370,, \uC81C\
          \uAC00 \uD314\uB85C\uC5C5\uD558\uACE0 \uC788\uC9C0\uB294 \uBABB\uD55C \uC0C1\
          \uD669\uC785\uB2C8\uB2E4. \uB9CC\uC57D \uC0AC\uC6A9\uD558\uC2DC\uB294 \uC601\
          \uC5ED\uC5D0\uC11C \uBAA8\uB378 \uC131\uB2A5\uC744 \uC880\uB354 \uAC1C\uC120\
          \uD558\uC2DC\uAE38 \uC6D0\uD558\uC2E0\uB2E4\uBA74, language model domain\
          \ adapdation \uB4F1\uC758 \uD0A4\uC6CC\uB4DC\uB97C \uCC3E\uC544\uBCF4\uC2DC\
          \uBA74 \uAD00\uB828\uB41C \uC790\uB8CC\uB4E4\uC774 \uC788\uC744\uC9C0\uB3C4\
          \ \uBAA8\uB974\uACA0\uC2B5\uB2C8\uB2E4. \n\n\uB9CE\uC740 \uB3C4\uC6C0 \uB4DC\
          \uB9AC\uC9C0 \uBABB\uD574 \uC8C4\uC1A1\uD569\uB2C8\uB2E4 \u3160\u3160"
        updatedAt: '2023-04-22T15:24:56.477Z'
      numEdits: 1
      reactions: []
    id: 6443fc0dc63001ae63513d44
    type: comment
  author: jhgan
  content: "\uC548\uB155\uD558\uC138\uC694! \uBA3C\uC800 \uBD80\uC871\uD55C \uACB0\
    \uACFC\uBB3C\uC5D0 \uAD00\uC2EC\uC744 \uAC00\uC838\uC8FC\uC154\uC11C \uAC10\uC0AC\
    \uB4DC\uB9BD\uB2C8\uB2E4.\n\n\uB9D0\uC500\uC8FC\uC2E0 \uAC83\uCC98\uB7FC \uD604\
    \uC7AC \uD559\uC2B5\uB41C \uBAA8\uB378\uC758 \uB2E8\uC5B4\uC7A5\uC5D0\uB294 '\uC625\
    \uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uAC00 \uC5C6\uB294 \uAC83\uC73C\uB85C \uD655\
    \uC778\uB418\uC5C8\uC2B5\uB2C8\uB2E4. (`[UNK]` \uD1A0\uD070\uC740 unknown \uC744\
    \ \uC758\uBBF8\uD569\uB2C8\uB2E4)\n\n```python\nfrom transformers import AutoTokenizer,\
    \ AutoModel\nimport torch\n\n\ndef mean_pooling(model_output, attention_mask):\n\
    \        token_embeddings = model_output[0] #First element of model_output contains\
    \ all token embeddings\n        input_mask_expanded = attention_mask.unsqueeze(-1).expand(token_embeddings.size()).float()\n\
    \        return torch.sum(token_embeddings * input_mask_expanded, 1) / torch.clamp(input_mask_expanded.sum(1),\
    \ min=1e-9)\n\n\nif __name__ == \"__main__\":\n\n        tokenizer = AutoTokenizer.from_pretrained('jhgan/ko-sroberta-multitask')\n\
    \        sentence = \"\uC625\uD15F \uADDC\uCE59\uC5D0 \uB300\uD574\uC11C \uC124\
    \uBA85\uD574\uC8FC\uC138\uC694\"\n\n        input_ids = tokenizer(sentence).get(\"\
    input_ids\")\n        decoded_tokens = tokenizer.convert_ids_to_tokens(input_ids)\n\
    \        print(\"\uD1A0\uD070 \uCD94\uAC00 \uC804\")\n        print(\"encoded\
    \ tokens:\", input_ids)\n        print(\"decoded tokens:\", decoded_tokens, end=\"\
    \\n\\n\")\n\n        # \uD1A0\uD070 \uCD94\uAC00\n        tokenizer.add_tokens(\"\
    \uC625\uD15F\")\n        input_ids = tokenizer(sentence).get(\"input_ids\")\n\
    \        decoded_tokens = tokenizer.convert_ids_to_tokens(input_ids)\n       \
    \ print(\"\uD1A0\uD070 \uCD94\uAC00 \uD6C4\")\n        print(\"encoded tokens:\"\
    , input_ids)\n        print(\"decoded tokens:\", decoded_tokens)\n\n        model\
    \ = AutoModel.from_pretrained('jhgan/ko-sroberta-multitask')\n        model.resize_token_embeddings(len(tokenizer))\n\
    \        encoded_input = tokenizer(sentence, return_tensors='pt')\n        with\
    \ torch.no_grad():\n                model_output = model(**encoded_input)\n  \
    \              sentence_embeddings = mean_pooling(model_output, encoded_input['attention_mask'])\n\
    \n#output\n#\uD1A0\uD070 \uCD94\uAC00 \uC804\n#encoded tokens: [0, 3, 6094, 2170,\
    \ 3958, 3788, 2097, 2223, 5971, 2]\n#decoded tokens: ['[CLS]', '[UNK]', '\uADDC\
    \uCE59', '##\uC5D0', '\uB300\uD574\uC11C', '\uC124\uBA85', '##\uD574', '##\uC8FC\
    ', '##\uC138\uC694', '[SEP]']\n\n#\uD1A0\uD070 \uCD94\uAC00 \uD6C4\n#encoded tokens:\
    \ [0, 32000, 6094, 2170, 3958, 3788, 2097, 2223, 5971, 2]\n#decoded tokens: ['[CLS]',\
    \ '\uC625\uD15F', '\uADDC\uCE59', '##\uC5D0', '\uB300\uD574\uC11C', '\uC124\uBA85\
    ', '##\uD574', '##\uC8FC', '##\uC138\uC694', '[SEP]']\n```\n\n\uBCF4\uC2DC\uB294\
    \ \uCF54\uB4DC\uCC98\uB7FC \uB2E8\uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\
    \uB97C \uCD94\uAC00\uD558\uB294 \uAC83\uC774 \uAC00\uB2A5\uD558\uC9C0\uB9CC, **\uCD94\
    \uAC00\uB41C \uB2E8\uC5B4\uC758 \uC758\uBBF8\uAC00 \uBAA8\uB378\uC5D0 \uCDA9\uBD84\
    \uD788 \uBC18\uC601\uB418\uB3C4\uB85D \uD559\uC2B5\uC2DC\uCF1C \uD65C\uC6A9\uD558\
    \uC2DC\uAE30\uB294 \uC27D\uC9C0 \uC54A\uC744 \uAC83\uC73C\uB85C \uC608\uC0C1\uB429\
    \uB2C8\uB2E4**. \uC774\uC720\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4\
    .\n\n1.  '\uC625\uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uB97C \uCD94\uAC00\uD574\
    \ \uBAA8\uB378\uC744 \uB2E4\uC2DC \uD559\uC2B5\uC2DC\uD0A4\uAE30 \uC704\uD574\uC11C\
    \uB294 \uADF8 **\uB2E8\uC5B4\uB97C \uD3EC\uD568\uD558\uB294 \uD14D\uC2A4\uD2B8\
    \ \uB370\uC774\uD130\uAC00 \uCDA9\uBD84\uD788 \uB9CE\uC544\uC57C \uD558\uACE0\
    , \uC801\uC808\uD55C \uD615\uD0DC\uC758 \uB808\uC774\uBE14\uB9C1\uAE4C\uC9C0 \uB418\
    \uC5B4\uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.** \uBCF8 \uBAA8\uB378\uC5D0 \uC0AC\
    \uC6A9\uB41C \uB808\uC774\uBE14\uC758 \uD615\uC2DD\uC5D0 \uB300\uD574\uC11C\uB294\
    \ \uCE74\uCE74\uC624\uBE0C\uB808\uC778\uC758 KorNLU \uB370\uC774\uD130\uC14B\uC744\
    \ \uAC80\uC0C9\uD574\uBCF4\uC2DC\uBA74 \uC774\uD574\uAC00 \uC26C\uC6B8 \uAC83\
    \ \uAC19\uC2B5\uB2C8\uB2E4. \uB9CC\uC57D **\uB808\uC774\uBE14\uB9C1\uC740 \uB418\
    \uC5B4\uC788\uC9C0 \uC54A\uC9C0\uB9CC \uCDA9\uBD84\uD788 \uB9CE\uC740 \uC218\uC758\
    \ \uB370\uC774\uD130\uB97C \uD655\uBCF4\uD558\uACE0 \uACC4\uC2DC\uB2E4\uBA74 SimCSE\
    \ \uC640 \uAC19\uC740 \uBC29\uBC95\uB860\uC73C\uB85C \uBAA8\uB378\uC744 \uC9C1\
    \uC811 \uD559\uC2B5\uD0A4\uB294 \uBC29\uBC95\uC774 \uC788\uC744 \uAC83 \uAC19\uC2B5\
    \uB2C8\uB2E4.**\n\n2. \uBCF8 \uBAA8\uB378\uC740 \uB300\uADDC\uBAA8 \uD14D\uC2A4\
    \uD2B8 \uB370\uC774\uD130\uB97C \uC0AC\uC804\uD559\uC2B5\uD55C \uC5B8\uC5B4\uBAA8\
    \uB378\uC5D0 \uCD94\uAC00\uC801\uC778 \uD559\uC2B5\uC744 \uC9C4\uD589\uD574 \uB9CC\
    \uB4E4\uC5B4\uC84C\uC73C\uBA70, \uC0AC\uC804\uD559\uC2B5 \uBAA8\uB378\uC758 \uC131\
    \uB2A5\uC5D0 \uD06C\uAC8C \uC601\uD5A5\uC744 \uBC1B\uC2B5\uB2C8\uB2E4. '\uC625\
    \uD15F'\uC774\uB77C\uB294 \uB2E8\uC5B4\uB97C \uD574\uB2F9 \uB2E8\uC5B4\uB97C \uD3EC\
    \uD568\uD558\uB294 \uB370\uC774\uD130 \uCDA9\uBD84\uD788 \uB9CE\uC774 \uC900\uBE44\
    \uD574 \uCD94\uAC00 \uD559\uC2B5\uC744 \uC9C4\uD589\uD560 \uACBD\uC6B0 \uD574\uB2F9\
    \ \uB2E8\uC5B4\uB97C \uD3EC\uD568\uD558\uB294 \uCF00\uC774\uC2A4\uC5D0 \uB300\uD574\
    \uC11C\uB294 \uC131\uB2A5\uC774 \uAC1C\uC120\uB418\uACA0\uC9C0\uB9CC **\uC0AC\uC804\
    \uD559\uC2B5 \uACFC\uC815\uC5D0\uC11C \uD559\uC2B5\uB41C \uB2E8\uC5B4\uAC00 \uC544\
    \uB2C8\uAE30 \uB54C\uBB38\uC5D0 \uC131\uB2A5 \uAC1C\uC120\uD3ED\uC774 \uC0DD\uAC01\
    \uBCF4\uB2E4 \uD06C\uC9C0 \uC54A\uC744 \uC218\uB3C4 \uC788\uACE0, \uC624\uD788\
    \uB824 \uBAA8\uB378\uC758 \uC77C\uBC18\uD654 \uC131\uB2A5\uC744 \uC545\uD654\uC2DC\
    \uD0AC \uC5EC\uC9C0\uB3C4 \uC788\uC5B4 \uBCF4\uC785\uB2C8\uB2E4.**\n\n\uC774\uC640\
    \ \uAD00\uB828\uB41C \uC5F0\uAD6C\uB4E4\uC774 \uB9CE\uAE30\uB294 \uD560\uD150\uB370\
    ,, \uC81C\uAC00 \uD314\uB85C\uC5C5\uD558\uACE0 \uC788\uC9C0\uB294 \uBABB\uD55C\
    \ \uC0C1\uD669\uC785\uB2C8\uB2E4. \uB9CC\uC57D \uC0AC\uC6A9\uD558\uC2DC\uB294\
    \ \uC601\uC5ED\uC5D0\uC11C \uBAA8\uB378 \uC131\uB2A5\uC744 \uC880\uB354 \uAC1C\
    \uC120\uD558\uC2DC\uAE38 \uC6D0\uD558\uC2E0\uB2E4\uBA74, language model domain\
    \ adapdation \uB4F1\uC758 \uD0A4\uC6CC\uB4DC\uB97C \uCC3E\uC544\uBCF4\uC2DC\uBA74\
    \ \uAD00\uB828\uB41C \uC790\uB8CC\uB4E4\uC774 \uC788\uC744\uC9C0\uB3C4 \uBAA8\uB974\
    \uACA0\uC2B5\uB2C8\uB2E4. \n\n\uB9CE\uC740 \uB3C4\uC6C0 \uB4DC\uB9AC\uC9C0 \uBABB\
    \uD574 \uC8C4\uC1A1\uD569\uB2C8\uB2E4 \u3160\u3160"
  created_at: 2023-04-22 14:23:57+00:00
  edited: true
  hidden: false
  id: 6443fc0dc63001ae63513d44
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/64a103355167a4dbb7a9b580d32bdff0.svg
      fullname: Min
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Gyeongmo
      type: user
    createdAt: '2023-05-31T13:51:32.000Z'
    data:
      edited: false
      editors:
      - Gyeongmo
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/64a103355167a4dbb7a9b580d32bdff0.svg
          fullname: Min
          isHf: false
          isPro: false
          name: Gyeongmo
          type: user
        html: "<p>\uB2F5\uBCC0 \uC8FC\uC154\uC11C \uC815\uB9D0\uC815\uB9D0 \uAC10\uC0AC\
          \uD569\uB2C8\uB2E4. \uC774\uBA54\uC77C\uB85C \uB2F5\uBCC0\uC774 \uC628 \uAC74\
          \ \uC54C\uACE0 \uC788\uC5C8\uB294\uB370\uC694, \uB108\uBB34 \uC815\uC2E0\
          \uC774 \uC5C6\uC5B4\uC11C \uBABB \uBCF4\uACE0 \uC788\uC5C8\uC2B5\uB2C8\uB2E4\
          .. \uC800\uB294 \uCEF4\uD4E8\uD130\uACFC\uD559 \uC804\uACF5\uC790\uB294\
          \ \uC544\uB2C8\uB2E4 \uBCF4\uB2C8 \uC804\uBB38\uC801\uC778 \uB0B4\uC6A9\uC740\
          \ \uC798 \uBAA8\uB985\uB2C8\uB2E4\uB9CC, \uB355\uBD84\uC5D0 SimCSE, language\
          \ model domain adaptation \uC774\uB77C\uB294 \uD0A4\uC6CC\uB4DC\uB97C \uC54C\
          \uAC8C \uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uAC10\uC0AC\uD569\uB2C8\uB2E4. \uC6A9\
          \uC5B4\uB97C \uC54C\uC544\uC57C \uAC80\uC0C9\uC744 \uD574\uBCFC \uD150\uB370\
          \uC694, \uC6A9\uC5B4\uC870\uCC28 \uC788\uB294\uC9C0\uB3C4 \uBAB0\uB790\uC2B5\
          \uB2C8\uB2E4. \uC774\uAC83\uB3C4 \uD55C \uBC88 \uC2DC\uB3C4\uD574\uBD10\uC57C\
          \uACA0\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uB370\uC774\uD130\uAC00 \uC218\
          \uC2ED, \uC218\uBC31\uB9CC \uAC1C\uAC00 \uC544\uB2C8\uB77C 10000~20000\uAC1C\
          \ \uC218\uC900\uC774\uB77C \uC774\uAC8C \uCDA9\uBD84\uD788 \uD070 \uC218\
          \uC758 \uB370\uC774\uD130\uC778\uC9C0 \uD310\uB2E8\uC774 \uC548 \uB429\uB2C8\
          \uB2E4. \u314E\u314E</p>\n<p>\uC800\uC57C\uB9D0\uB85C jhgan\uB2D8 \uB355\
          \uC5D0 1\uB144 \uAC00\uAE4C\uC774 \uC774 \uCC57\uBD07 \uC11C\uBE44\uC2A4\
          \uB97C \uD55C \uAC83\uC774\uC9C0, \uC800 \uD63C\uC790\uB294 \uBABB \uB9CC\
          \uB4E4\uC5C8\uC744 \uAC81\uB2C8\uB2E4. \uC81C\uAC00 \uB3C4\uC6C0\uC744 \uB354\
          \ \uBABB \uB4DC\uB824 \uC8C4\uC1A1\uD569\uB2C8\uB2E4.</p>\n"
        raw: "\uB2F5\uBCC0 \uC8FC\uC154\uC11C \uC815\uB9D0\uC815\uB9D0 \uAC10\uC0AC\
          \uD569\uB2C8\uB2E4. \uC774\uBA54\uC77C\uB85C \uB2F5\uBCC0\uC774 \uC628 \uAC74\
          \ \uC54C\uACE0 \uC788\uC5C8\uB294\uB370\uC694, \uB108\uBB34 \uC815\uC2E0\
          \uC774 \uC5C6\uC5B4\uC11C \uBABB \uBCF4\uACE0 \uC788\uC5C8\uC2B5\uB2C8\uB2E4\
          .. \uC800\uB294 \uCEF4\uD4E8\uD130\uACFC\uD559 \uC804\uACF5\uC790\uB294\
          \ \uC544\uB2C8\uB2E4 \uBCF4\uB2C8 \uC804\uBB38\uC801\uC778 \uB0B4\uC6A9\uC740\
          \ \uC798 \uBAA8\uB985\uB2C8\uB2E4\uB9CC, \uB355\uBD84\uC5D0 SimCSE, language\
          \ model domain adaptation \uC774\uB77C\uB294 \uD0A4\uC6CC\uB4DC\uB97C \uC54C\
          \uAC8C \uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uAC10\uC0AC\uD569\uB2C8\uB2E4. \uC6A9\
          \uC5B4\uB97C \uC54C\uC544\uC57C \uAC80\uC0C9\uC744 \uD574\uBCFC \uD150\uB370\
          \uC694, \uC6A9\uC5B4\uC870\uCC28 \uC788\uB294\uC9C0\uB3C4 \uBAB0\uB790\uC2B5\
          \uB2C8\uB2E4. \uC774\uAC83\uB3C4 \uD55C \uBC88 \uC2DC\uB3C4\uD574\uBD10\uC57C\
          \uACA0\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uB370\uC774\uD130\uAC00 \uC218\
          \uC2ED, \uC218\uBC31\uB9CC \uAC1C\uAC00 \uC544\uB2C8\uB77C 10000~20000\uAC1C\
          \ \uC218\uC900\uC774\uB77C \uC774\uAC8C \uCDA9\uBD84\uD788 \uD070 \uC218\
          \uC758 \uB370\uC774\uD130\uC778\uC9C0 \uD310\uB2E8\uC774 \uC548 \uB429\uB2C8\
          \uB2E4. \u314E\u314E\n\n\uC800\uC57C\uB9D0\uB85C jhgan\uB2D8 \uB355\uC5D0\
          \ 1\uB144 \uAC00\uAE4C\uC774 \uC774 \uCC57\uBD07 \uC11C\uBE44\uC2A4\uB97C\
          \ \uD55C \uAC83\uC774\uC9C0, \uC800 \uD63C\uC790\uB294 \uBABB \uB9CC\uB4E4\
          \uC5C8\uC744 \uAC81\uB2C8\uB2E4. \uC81C\uAC00 \uB3C4\uC6C0\uC744 \uB354\
          \ \uBABB \uB4DC\uB824 \uC8C4\uC1A1\uD569\uB2C8\uB2E4."
        updatedAt: '2023-05-31T13:51:32.937Z'
      numEdits: 0
      reactions: []
    id: 647750e4bb7681ad6704afca
    type: comment
  author: Gyeongmo
  content: "\uB2F5\uBCC0 \uC8FC\uC154\uC11C \uC815\uB9D0\uC815\uB9D0 \uAC10\uC0AC\uD569\
    \uB2C8\uB2E4. \uC774\uBA54\uC77C\uB85C \uB2F5\uBCC0\uC774 \uC628 \uAC74 \uC54C\
    \uACE0 \uC788\uC5C8\uB294\uB370\uC694, \uB108\uBB34 \uC815\uC2E0\uC774 \uC5C6\uC5B4\
    \uC11C \uBABB \uBCF4\uACE0 \uC788\uC5C8\uC2B5\uB2C8\uB2E4.. \uC800\uB294 \uCEF4\
    \uD4E8\uD130\uACFC\uD559 \uC804\uACF5\uC790\uB294 \uC544\uB2C8\uB2E4 \uBCF4\uB2C8\
    \ \uC804\uBB38\uC801\uC778 \uB0B4\uC6A9\uC740 \uC798 \uBAA8\uB985\uB2C8\uB2E4\uB9CC\
    , \uB355\uBD84\uC5D0 SimCSE, language model domain adaptation \uC774\uB77C\uB294\
    \ \uD0A4\uC6CC\uB4DC\uB97C \uC54C\uAC8C \uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uAC10\
    \uC0AC\uD569\uB2C8\uB2E4. \uC6A9\uC5B4\uB97C \uC54C\uC544\uC57C \uAC80\uC0C9\uC744\
    \ \uD574\uBCFC \uD150\uB370\uC694, \uC6A9\uC5B4\uC870\uCC28 \uC788\uB294\uC9C0\
    \uB3C4 \uBAB0\uB790\uC2B5\uB2C8\uB2E4. \uC774\uAC83\uB3C4 \uD55C \uBC88 \uC2DC\
    \uB3C4\uD574\uBD10\uC57C\uACA0\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uB370\uC774\
    \uD130\uAC00 \uC218\uC2ED, \uC218\uBC31\uB9CC \uAC1C\uAC00 \uC544\uB2C8\uB77C\
    \ 10000~20000\uAC1C \uC218\uC900\uC774\uB77C \uC774\uAC8C \uCDA9\uBD84\uD788 \uD070\
    \ \uC218\uC758 \uB370\uC774\uD130\uC778\uC9C0 \uD310\uB2E8\uC774 \uC548 \uB429\
    \uB2C8\uB2E4. \u314E\u314E\n\n\uC800\uC57C\uB9D0\uB85C jhgan\uB2D8 \uB355\uC5D0\
    \ 1\uB144 \uAC00\uAE4C\uC774 \uC774 \uCC57\uBD07 \uC11C\uBE44\uC2A4\uB97C \uD55C\
    \ \uAC83\uC774\uC9C0, \uC800 \uD63C\uC790\uB294 \uBABB \uB9CC\uB4E4\uC5C8\uC744\
    \ \uAC81\uB2C8\uB2E4. \uC81C\uAC00 \uB3C4\uC6C0\uC744 \uB354 \uBABB \uB4DC\uB824\
    \ \uC8C4\uC1A1\uD569\uB2C8\uB2E4."
  created_at: 2023-05-31 12:51:32+00:00
  edited: false
  hidden: false
  id: 647750e4bb7681ad6704afca
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: jhgan/ko-sbert-multitask
repo_type: model
status: open
target_branch: null
title: "\uB2E8\uC5B4\uC7A5\uC5D0 \uC0C8\uB85C\uC6B4 \uB2E8\uC5B4\uB97C \uB123\uACE0\
  \ \uC801\uC6A9\uD558\uB824\uBA74 \uC5B4\uB5BB\uAC8C \uD574\uC57C \uD558\uB294\uC9C0\
  \ \uC54C \uC218 \uC788\uC744\uAE4C\uC694?"
