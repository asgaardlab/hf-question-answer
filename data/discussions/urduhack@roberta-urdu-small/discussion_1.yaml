!!python/object:huggingface_hub.community.DiscussionWithDetails
author: hadidev
conflicting_files: null
created_at: 2022-06-18 23:45:47+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1bbbe84b372b961154a2ff731031bece.svg
      fullname: Muhammad Hadi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: hadidev
      type: user
    createdAt: '2022-06-19T00:45:47.000Z'
    data:
      edited: false
      editors:
      - hadidev
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1bbbe84b372b961154a2ff731031bece.svg
          fullname: Muhammad Hadi
          isHf: false
          isPro: false
          name: hadidev
          type: user
        html: '<p>HI, I''m trying to train tokenizer as well as BERT model for urdu
          data. Can you share your step by step used in this model</p>

          '
        raw: HI, I'm trying to train tokenizer as well as BERT model for urdu data.
          Can you share your step by step used in this model
        updatedAt: '2022-06-19T00:45:47.272Z'
      numEdits: 0
      reactions: []
    id: 62ae71bb4ff605c041173de6
    type: comment
  author: hadidev
  content: HI, I'm trying to train tokenizer as well as BERT model for urdu data.
    Can you share your step by step used in this model
  created_at: 2022-06-18 23:45:47+00:00
  edited: false
  hidden: false
  id: 62ae71bb4ff605c041173de6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/96a1066c36e88d94b4a020d929ba96d4.svg
      fullname: Naeem Khan
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: naeemkhan
      type: user
    createdAt: '2023-03-06T06:20:40.000Z'
    data:
      edited: false
      editors:
      - naeemkhan
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/96a1066c36e88d94b4a020d929ba96d4.svg
          fullname: Naeem Khan
          isHf: false
          isPro: false
          name: naeemkhan
          type: user
        html: "<h2 id=\"\U0001F6E0-installation\">\U0001F6E0 Installation</h2>\n<p>Urduhack\
          \ officially supports Python 3.6\u20133.7, and runs great on PyPy.</p>\n\
          <p>Installing with tensorflow cpu version.</p>\n<pre><code class=\"language-{.sourceCode\"\
          >$ pip install urduhack[tf]\n</code></pre>\n<p>Installing with tensorflow\
          \ gpu version.</p>\n<pre><code class=\"language-{.sourceCode\">$ pip install\
          \ urduhack[tf-gpu]\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<pre><code\
          \ class=\"language-python\"><span class=\"hljs-keyword\">import</span> urduhack\n\
          \n<span class=\"hljs-comment\"># Downloading models</span>\nurduhack.download()\n\
          \nnlp = urduhack.Pipeline()\ntext = <span class=\"hljs-string\">\"\"</span>\n\
          doc = nlp(text)\n\n<span class=\"hljs-keyword\">for</span> sentence <span\
          \ class=\"hljs-keyword\">in</span> doc.sentences:\n    <span class=\"hljs-built_in\"\
          >print</span>(sentence.text)\n    <span class=\"hljs-keyword\">for</span>\
          \ word <span class=\"hljs-keyword\">in</span> sentence.words:\n        <span\
          \ class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"<span\
          \ class=\"hljs-subst\">{word.text}</span>\\t<span class=\"hljs-subst\">{word.pos}</span>\"\
          </span>)\n\n    <span class=\"hljs-keyword\">for</span> token <span class=\"\
          hljs-keyword\">in</span> sentence.tokens:\n        <span class=\"hljs-built_in\"\
          >print</span>(<span class=\"hljs-string\">f\"<span class=\"hljs-subst\"\
          >{token.text}</span>\\t<span class=\"hljs-subst\">{token.ner}</span>\"</span>)\n\
          </code></pre>\n"
        raw: "\U0001F6E0 Installation\n---------------\nUrduhack officially supports\
          \ Python 3.6\u20133.7, and runs great on PyPy.\n\nInstalling with tensorflow\
          \ cpu version.\n``` {.sourceCode .bash}\n$ pip install urduhack[tf]\n```\n\
          \nInstalling with tensorflow gpu version.\n``` {.sourceCode .bash}\n$ pip\
          \ install urduhack[tf-gpu]\n```\n\nUsage\n-----\n\n```python\nimport urduhack\n\
          \n# Downloading models\nurduhack.download()\n\nnlp = urduhack.Pipeline()\n\
          text = \"\"\ndoc = nlp(text)\n\nfor sentence in doc.sentences:\n    print(sentence.text)\n\
          \    for word in sentence.words:\n        print(f\"{word.text}\\t{word.pos}\"\
          )\n\n    for token in sentence.tokens:\n        print(f\"{token.text}\\\
          t{token.ner}\")\n```"
        updatedAt: '2023-03-06T06:20:40.987Z'
      numEdits: 0
      reactions: []
    id: 6405863823d788411b074aba
    type: comment
  author: naeemkhan
  content: "\U0001F6E0 Installation\n---------------\nUrduhack officially supports\
    \ Python 3.6\u20133.7, and runs great on PyPy.\n\nInstalling with tensorflow cpu\
    \ version.\n``` {.sourceCode .bash}\n$ pip install urduhack[tf]\n```\n\nInstalling\
    \ with tensorflow gpu version.\n``` {.sourceCode .bash}\n$ pip install urduhack[tf-gpu]\n\
    ```\n\nUsage\n-----\n\n```python\nimport urduhack\n\n# Downloading models\nurduhack.download()\n\
    \nnlp = urduhack.Pipeline()\ntext = \"\"\ndoc = nlp(text)\n\nfor sentence in doc.sentences:\n\
    \    print(sentence.text)\n    for word in sentence.words:\n        print(f\"\
    {word.text}\\t{word.pos}\")\n\n    for token in sentence.tokens:\n        print(f\"\
    {token.text}\\t{token.ner}\")\n```"
  created_at: 2023-03-06 06:20:40+00:00
  edited: false
  hidden: false
  id: 6405863823d788411b074aba
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: urduhack/roberta-urdu-small
repo_type: model
status: open
target_branch: null
title: GuideLines for training urdu tokenizer for much larger corpus
