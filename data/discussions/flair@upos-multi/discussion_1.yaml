!!python/object:huggingface_hub.community.DiscussionWithDetails
author: 8raouf24
conflicting_files: null
created_at: 2023-02-28 14:03:45+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/95100501c0a4776027eab4ed50105343.svg
      fullname: Chiboub Abderraouf
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: 8raouf24
      type: user
    createdAt: '2023-02-28T14:03:45.000Z'
    data:
      edited: false
      editors:
      - 8raouf24
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/95100501c0a4776027eab4ed50105343.svg
          fullname: Chiboub Abderraouf
          isHf: false
          isPro: false
          name: 8raouf24
          type: user
        html: '<p>Greatings !<br>I''ve been trying to use your model for a keyword
          extraction problem.<br>Though, I havent been able to reproduce the results
          in the tutorial, where the loop on the sentence.get_spans(''pos'') returns
          nothing.<br>Here is a visual :</p>

          <p><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/1677593011192-63fe077b8b3c5087ff84b17d.png"><img
          alt="image.png" src="https://cdn-uploads.huggingface.co/production/uploads/1677593011192-63fe077b8b3c5087ff84b17d.png"></a></p>

          '
        raw: "Greatings !\r\nI've been trying to use your model for a keyword extraction\
          \ problem.\r\nThough, I havent been able to reproduce the results in the\
          \ tutorial, where the loop on the sentence.get_spans('pos') returns nothing.\r\
          \nHere is a visual :\r\n\r\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1677593011192-63fe077b8b3c5087ff84b17d.png)\r\
          \n"
        updatedAt: '2023-02-28T14:03:45.258Z'
      numEdits: 0
      reactions: []
    id: 63fe09c16315a264aba8b891
    type: comment
  author: 8raouf24
  content: "Greatings !\r\nI've been trying to use your model for a keyword extraction\
    \ problem.\r\nThough, I havent been able to reproduce the results in the tutorial,\
    \ where the loop on the sentence.get_spans('pos') returns nothing.\r\nHere is\
    \ a visual :\r\n\r\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/1677593011192-63fe077b8b3c5087ff84b17d.png)\r\
    \n"
  created_at: 2023-02-28 14:03:45+00:00
  edited: false
  hidden: false
  id: 63fe09c16315a264aba8b891
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649773462124-62558b1993dead146188c44b.jpeg?w=200&h=200&f=face
      fullname: Conrad Dobberstein
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: dobbersc
      type: user
    createdAt: '2023-03-01T11:02:22.000Z'
    data:
      edited: false
      editors:
      - dobbersc
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649773462124-62558b1993dead146188c44b.jpeg?w=200&h=200&f=face
          fullname: Conrad Dobberstein
          isHf: false
          isPro: false
          name: dobbersc
          type: user
        html: "<p>Hey <span data-props=\"{&quot;user&quot;:&quot;8raouf24&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/8raouf24\"\
          >@<span class=\"underline\">8raouf24</span></a></span>\n\n\t</span></span>,</p>\n\
          <p>Thanks for reporting this! The example in the model description is not\
          \ up-to-date. We model POS tagging as a token classification problem, i.e.\
          \ the model predicts a label for each token. In addition, the provided label\
          \ type <code>pos</code> is also incorrect and has to be changed to <code>upos</code>.\
          \  You can access the predictions as such:</p>\n<pre><code class=\"language-python\"\
          ><span class=\"hljs-comment\"># iterate over tokens and print the predicted\
          \ POS label</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"\
          hljs-string\">\"The following POS tags are found:\"</span>)\n<span class=\"\
          hljs-keyword\">for</span> token <span class=\"hljs-keyword\">in</span> sentence:\n\
          \    <span class=\"hljs-built_in\">print</span>(token.get_label(<span class=\"\
          hljs-string\">\"upos\"</span>))\n\n<span class=\"hljs-comment\"># alternative:\
          \ get all POS labels as list</span>\n<span class=\"hljs-built_in\">print</span>(sentence.get_labels(<span\
          \ class=\"hljs-string\">\"upos\"</span>))\n</code></pre>\n<p>The first variant\
          \ would closely reproduce the output in the original example:</p>\n<pre><code\
          \ class=\"language-python\">The following POS tags are found:\nToken[<span\
          \ class=\"hljs-number\">0</span>]: <span class=\"hljs-string\">\"Ich\"</span>\
          \ \u2192 PRON (<span class=\"hljs-number\">0.9999</span>)\nToken[<span class=\"\
          hljs-number\">1</span>]: <span class=\"hljs-string\">\"liebe\"</span> \u2192\
          \ VERB (<span class=\"hljs-number\">0.9999</span>)\nToken[<span class=\"\
          hljs-number\">2</span>]: <span class=\"hljs-string\">\"Berlin\"</span> \u2192\
          \ PROPN (<span class=\"hljs-number\">0.9997</span>)\nToken[<span class=\"\
          hljs-number\">3</span>]: <span class=\"hljs-string\">\",\"</span> \u2192\
          \ PUNCT (<span class=\"hljs-number\">1.0</span>)\nToken[<span class=\"hljs-number\"\
          >4</span>]: <span class=\"hljs-string\">\"as\"</span> \u2192 SCONJ (<span\
          \ class=\"hljs-number\">0.9991</span>)\nToken[<span class=\"hljs-number\"\
          >5</span>]: <span class=\"hljs-string\">\"they\"</span> \u2192 PRON (<span\
          \ class=\"hljs-number\">0.9998</span>)\nToken[<span class=\"hljs-number\"\
          >6</span>]: <span class=\"hljs-string\">\"say\"</span> \u2192 VERB (<span\
          \ class=\"hljs-number\">0.9998</span>)\nToken[<span class=\"hljs-number\"\
          >7</span>]: <span class=\"hljs-string\">\".\"</span> \u2192 PUNCT (<span\
          \ class=\"hljs-number\">1.0</span>)\n</code></pre>\n"
        raw: "Hey @8raouf24,\n\nThanks for reporting this! The example in the model\
          \ description is not up-to-date. We model POS tagging as a token classification\
          \ problem, i.e. the model predicts a label for each token. In addition,\
          \ the provided label type `pos` is also incorrect and has to be changed\
          \ to `upos`.  You can access the predictions as such:\n\n```python\n# iterate\
          \ over tokens and print the predicted POS label\nprint(\"The following POS\
          \ tags are found:\")\nfor token in sentence:\n    print(token.get_label(\"\
          upos\"))\n\n# alternative: get all POS labels as list\nprint(sentence.get_labels(\"\
          upos\"))\n```\n\nThe first variant would closely reproduce the output in\
          \ the original example:\n```python\nThe following POS tags are found:\n\
          Token[0]: \"Ich\" \u2192 PRON (0.9999)\nToken[1]: \"liebe\" \u2192 VERB\
          \ (0.9999)\nToken[2]: \"Berlin\" \u2192 PROPN (0.9997)\nToken[3]: \",\"\
          \ \u2192 PUNCT (1.0)\nToken[4]: \"as\" \u2192 SCONJ (0.9991)\nToken[5]:\
          \ \"they\" \u2192 PRON (0.9998)\nToken[6]: \"say\" \u2192 VERB (0.9998)\n\
          Token[7]: \".\" \u2192 PUNCT (1.0)\n```"
        updatedAt: '2023-03-01T11:02:22.750Z'
      numEdits: 0
      reactions: []
    id: 63ff30be6bb959b94e6d8b76
    type: comment
  author: dobbersc
  content: "Hey @8raouf24,\n\nThanks for reporting this! The example in the model\
    \ description is not up-to-date. We model POS tagging as a token classification\
    \ problem, i.e. the model predicts a label for each token. In addition, the provided\
    \ label type `pos` is also incorrect and has to be changed to `upos`.  You can\
    \ access the predictions as such:\n\n```python\n# iterate over tokens and print\
    \ the predicted POS label\nprint(\"The following POS tags are found:\")\nfor token\
    \ in sentence:\n    print(token.get_label(\"upos\"))\n\n# alternative: get all\
    \ POS labels as list\nprint(sentence.get_labels(\"upos\"))\n```\n\nThe first variant\
    \ would closely reproduce the output in the original example:\n```python\nThe\
    \ following POS tags are found:\nToken[0]: \"Ich\" \u2192 PRON (0.9999)\nToken[1]:\
    \ \"liebe\" \u2192 VERB (0.9999)\nToken[2]: \"Berlin\" \u2192 PROPN (0.9997)\n\
    Token[3]: \",\" \u2192 PUNCT (1.0)\nToken[4]: \"as\" \u2192 SCONJ (0.9991)\nToken[5]:\
    \ \"they\" \u2192 PRON (0.9998)\nToken[6]: \"say\" \u2192 VERB (0.9998)\nToken[7]:\
    \ \".\" \u2192 PUNCT (1.0)\n```"
  created_at: 2023-03-01 11:02:22+00:00
  edited: false
  hidden: false
  id: 63ff30be6bb959b94e6d8b76
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649773462124-62558b1993dead146188c44b.jpeg?w=200&h=200&f=face
      fullname: Conrad Dobberstein
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: dobbersc
      type: user
    createdAt: '2023-03-06T12:25:58.000Z'
    data:
      status: closed
    id: 6405dbd6d354fae149a76630
    type: status-change
  author: dobbersc
  created_at: 2023-03-06 12:25:58+00:00
  id: 6405dbd6d354fae149a76630
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: flair/upos-multi
repo_type: model
status: closed
target_branch: null
title: Impossibility of retrieving the pos of the tokens
