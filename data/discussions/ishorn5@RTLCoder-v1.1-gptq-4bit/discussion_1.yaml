!!python/object:huggingface_hub.community.DiscussionWithDetails
author: XieTangent
conflicting_files: null
created_at: 2024-01-20 06:30:18+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/08ed0c3cfebd7a1012937d71a906ea28.svg
      fullname: XieTangent
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: XieTangent
      type: user
    createdAt: '2024-01-20T06:30:18.000Z'
    data:
      edited: false
      editors:
      - XieTangent
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.780549168586731
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/08ed0c3cfebd7a1012937d71a906ea28.svg
          fullname: XieTangent
          isHf: false
          isPro: false
          name: XieTangent
          type: user
        html: '<p>When I try to test the RTLCoder-gptq-4bit<br>Python tell me that
          input_ids regarded as two arguments<br>but isn''t following code  the solution
          to this problem?</p>

          <p>input_ids = tokenizer(prompt, return_tensors="pt").input_ids.to(0)</p>

          <p>Or am I mistaken?<br>how can i solve this problem?</p>

          '
        raw: "When I try to test the RTLCoder-gptq-4bit \r\nPython tell me that input_ids\
          \ regarded as two arguments\r\nbut isn't following code  the solution to\
          \ this problem?\r\n\r\ninput_ids = tokenizer(prompt, return_tensors=\"pt\"\
          ).input_ids.to(0)\r\n\r\nOr am I mistaken?\r\nhow can i solve this problem?"
        updatedAt: '2024-01-20T06:30:18.529Z'
      numEdits: 0
      reactions: []
    id: 65ab687a68139e3c42c09132
    type: comment
  author: XieTangent
  content: "When I try to test the RTLCoder-gptq-4bit \r\nPython tell me that input_ids\
    \ regarded as two arguments\r\nbut isn't following code  the solution to this\
    \ problem?\r\n\r\ninput_ids = tokenizer(prompt, return_tensors=\"pt\").input_ids.to(0)\r\
    \n\r\nOr am I mistaken?\r\nhow can i solve this problem?"
  created_at: 2024-01-20 06:30:18+00:00
  edited: false
  hidden: false
  id: 65ab687a68139e3c42c09132
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6756223df16bb7678f4175dd25c83df5.svg
      fullname: ishorn567
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: ishorn5
      type: user
    createdAt: '2024-01-21T14:45:56.000Z'
    data:
      edited: true
      editors:
      - ishorn5
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4892495274543762
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6756223df16bb7678f4175dd25c83df5.svg
          fullname: ishorn567
          isHf: false
          isPro: false
          name: ishorn5
          type: user
        html: '<p>Hi, thanks for your issue!  The following code should work,<br>''''''<br>from
          transformers import AutoTokenizer<br>from auto_gptq import AutoGPTQForCausalLM,
          BaseQuantizeConfig<br>prompt = "Please act as a professional verilog designer
          and provide a half adder. \nmodule half_adder\n(input a, \ninput b, \noutput
          sum, \noutput carry);\n"</p>

          <p>tokenizer = AutoTokenizer.from_pretrained("ishorn5/RTLCoder-v1.1-gptq-4bit")<br>model
          = AutoGPTQForCausalLM.from_quantized("ishorn5/RTLCoder-v1.1-gptq-4bit",
          device=0)<br>model.eval()<br>inputs = tokenizer(prompt, return_tensors="pt").to(0)<br>sample
          = model.generate(**inputs, max_length=512, temperature=0.5, top_p=0.9, pad_token_id=model.config.eos_token_id,)<br>print(tokenizer.decode(sample[0],
          skip_special_tokens=True))<br>''''''</p>

          '
        raw: 'Hi, thanks for your issue!  The following code should work,

          ''''''

          from transformers import AutoTokenizer

          from auto_gptq import AutoGPTQForCausalLM, BaseQuantizeConfig

          prompt = "Please act as a professional verilog designer and provide a half
          adder. \nmodule half_adder\n(input a, \ninput b, \noutput sum, \noutput
          carry);\n"


          tokenizer = AutoTokenizer.from_pretrained("ishorn5/RTLCoder-v1.1-gptq-4bit")

          model = AutoGPTQForCausalLM.from_quantized("ishorn5/RTLCoder-v1.1-gptq-4bit",
          device=0)

          model.eval()

          inputs = tokenizer(prompt, return_tensors="pt").to(0)

          sample = model.generate(**inputs, max_length=512, temperature=0.5, top_p=0.9,
          pad_token_id=model.config.eos_token_id,)

          print(tokenizer.decode(sample[0], skip_special_tokens=True))

          '''''''
        updatedAt: '2024-01-21T14:46:27.247Z'
      numEdits: 1
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - XieTangent
    id: 65ad2e246a55aac02a76b8af
    type: comment
  author: ishorn5
  content: 'Hi, thanks for your issue!  The following code should work,

    ''''''

    from transformers import AutoTokenizer

    from auto_gptq import AutoGPTQForCausalLM, BaseQuantizeConfig

    prompt = "Please act as a professional verilog designer and provide a half adder.
    \nmodule half_adder\n(input a, \ninput b, \noutput sum, \noutput carry);\n"


    tokenizer = AutoTokenizer.from_pretrained("ishorn5/RTLCoder-v1.1-gptq-4bit")

    model = AutoGPTQForCausalLM.from_quantized("ishorn5/RTLCoder-v1.1-gptq-4bit",
    device=0)

    model.eval()

    inputs = tokenizer(prompt, return_tensors="pt").to(0)

    sample = model.generate(**inputs, max_length=512, temperature=0.5, top_p=0.9,
    pad_token_id=model.config.eos_token_id,)

    print(tokenizer.decode(sample[0], skip_special_tokens=True))

    '''''''
  created_at: 2024-01-21 14:45:56+00:00
  edited: true
  hidden: false
  id: 65ad2e246a55aac02a76b8af
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/08ed0c3cfebd7a1012937d71a906ea28.svg
      fullname: XieTangent
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: XieTangent
      type: user
    createdAt: '2024-01-22T17:15:54.000Z'
    data:
      edited: false
      editors:
      - XieTangent
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7826593518257141
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/08ed0c3cfebd7a1012937d71a906ea28.svg
          fullname: XieTangent
          isHf: false
          isPro: false
          name: XieTangent
          type: user
        html: '<p>Appreciate the clarification</p>

          '
        raw: Appreciate the clarification
        updatedAt: '2024-01-22T17:15:54.946Z'
      numEdits: 0
      reactions: []
    id: 65aea2ca5c9e7ad7bbe45813
    type: comment
  author: XieTangent
  content: Appreciate the clarification
  created_at: 2024-01-22 17:15:54+00:00
  edited: false
  hidden: false
  id: 65aea2ca5c9e7ad7bbe45813
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: ishorn5/RTLCoder-v1.1-gptq-4bit
repo_type: model
status: open
target_branch: null
title: 'TypeError: BaseGPTQForCausalLM.generate() takes 1 positional argument but
  2 were given'
