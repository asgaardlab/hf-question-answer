!!python/object:huggingface_hub.community.DiscussionWithDetails
author: rombodawg
conflicting_files: null
created_at: 2023-08-27 23:26:57+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
      fullname: rombo dawg
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rombodawg
      type: user
    createdAt: '2023-08-28T00:26:57.000Z'
    data:
      edited: true
      editors:
      - rombodawg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9516974687576294
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
          fullname: rombo dawg
          isHf: false
          isPro: false
          name: rombodawg
          type: user
        html: "<p>Although this model claims the highest python scores on humaneval,\
          \ ive had better generation results (specifically in python) from the phinds\
          \ codellama_python_34b finetune than this one. My test specifically involved\
          \ writing code over 1k tokens long. One example was to code an entire game\
          \ of snake in python, to which the wizardcoder-34b model not only failed\
          \ to do, but also couldnt fix errors with. While the phind model achieved\
          \ correct results first time, and from others testing the airoboros-34b\
          \ model they had even better results. </p>\n<p>All im asking is a simple\
          \ explanation for how your model could have such high benchmark scores but\
          \ still lack in code generation quality compared specifically to its competition.\
          \ </p>\n<p>And does this issue only apply to longer pieces of code generation,\
          \ which the previous wizardcoder-15b model also struggles with.<br><span\
          \ data-props=\"{&quot;user&quot;:&quot;WizardLM&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/WizardLM\">@<span class=\"\
          underline\">WizardLM</span></a></span>\n\n\t</span></span> </p>\n"
        raw: "Although this model claims the highest python scores on humaneval, ive\
          \ had better generation results (specifically in python) from the phinds\
          \ codellama_python_34b finetune than this one. My test specifically involved\
          \ writing code over 1k tokens long. One example was to code an entire game\
          \ of snake in python, to which the wizardcoder-34b model not only failed\
          \ to do, but also couldnt fix errors with. While the phind model achieved\
          \ correct results first time, and from others testing the airoboros-34b\
          \ model they had even better results. \n\nAll im asking is a simple explanation\
          \ for how your model could have such high benchmark scores but still lack\
          \ in code generation quality compared specifically to its competition. \n\
          \nAnd does this issue only apply to longer pieces of code generation, which\
          \ the previous wizardcoder-15b model also struggles with. \n@WizardLM "
        updatedAt: '2023-08-28T00:27:47.997Z'
      numEdits: 1
      reactions: []
    id: 64ebe9d1efdbd7cc092c8958
    type: comment
  author: rombodawg
  content: "Although this model claims the highest python scores on humaneval, ive\
    \ had better generation results (specifically in python) from the phinds codellama_python_34b\
    \ finetune than this one. My test specifically involved writing code over 1k tokens\
    \ long. One example was to code an entire game of snake in python, to which the\
    \ wizardcoder-34b model not only failed to do, but also couldnt fix errors with.\
    \ While the phind model achieved correct results first time, and from others testing\
    \ the airoboros-34b model they had even better results. \n\nAll im asking is a\
    \ simple explanation for how your model could have such high benchmark scores\
    \ but still lack in code generation quality compared specifically to its competition.\
    \ \n\nAnd does this issue only apply to longer pieces of code generation, which\
    \ the previous wizardcoder-15b model also struggles with. \n@WizardLM "
  created_at: 2023-08-27 23:26:57+00:00
  edited: true
  hidden: false
  id: 64ebe9d1efdbd7cc092c8958
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
      fullname: Ziyang Luo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Ziyang
      type: user
    createdAt: '2023-08-28T02:25:19.000Z'
    data:
      edited: false
      editors:
      - Ziyang
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6159768104553223
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
          fullname: Ziyang Luo
          isHf: false
          isPro: false
          name: Ziyang
          type: user
        html: "<p>We disagree with you.</p>\n<ul>\n<li>You don't provide any examples,\
          \ like prompts or captures. Without these, we cannot help you fix your problems.</li>\n\
          <li>We have tested WizardCoder-34B with this prompt: <code>write a snake\
          \ game with python</code>. lt can write an entire snake game, which also\
          \ can be played.<br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/G65b5_SbKe_S2b7MqKsXe.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/G65b5_SbKe_S2b7MqKsXe.png\"\
          ></a><br><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/ktruVyaAdRdcWYM3ywwV8.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/ktruVyaAdRdcWYM3ywwV8.png\"\
          ></a></li>\n<li>Someone on twitter also gets a snake game from our model.<br><a\
          \ rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/y2-jZU6maKuNmIo5zyr9u.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/y2-jZU6maKuNmIo5zyr9u.png\"\
          ></a></li>\n<li>This is the generated code.</li>\n</ul>\n<pre><code class=\"\
          language-python\"><span class=\"hljs-keyword\">import</span> pygame\n<span\
          \ class=\"hljs-keyword\">import</span> random\n\n<span class=\"hljs-comment\"\
          ># initialize pygame</span>\npygame.init()\n\n<span class=\"hljs-comment\"\
          ># set the window size</span>\nWINDOW_SIZE = [<span class=\"hljs-number\"\
          >800</span>, <span class=\"hljs-number\">600</span>]\n\n<span class=\"hljs-comment\"\
          ># create the window</span>\nscreen = pygame.display.set_mode(WINDOW_SIZE)\n\
          \n<span class=\"hljs-comment\"># set the title of the window</span>\npygame.display.set_caption(<span\
          \ class=\"hljs-string\">\"Snake Game\"</span>)\n\n<span class=\"hljs-comment\"\
          ># set the game clock</span>\nclock = pygame.time.Clock()\n\n<span class=\"\
          hljs-comment\"># set the game variables</span>\nsnake_pos = [<span class=\"\
          hljs-number\">100</span>, <span class=\"hljs-number\">50</span>]\nsnake_body\
          \ = [[<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\"\
          >50</span>], [<span class=\"hljs-number\">100</span>-<span class=\"hljs-number\"\
          >10</span>, <span class=\"hljs-number\">50</span>], [<span class=\"hljs-number\"\
          >100</span>-(<span class=\"hljs-number\">2</span>*<span class=\"hljs-number\"\
          >10</span>), <span class=\"hljs-number\">50</span>]]\nfood_pos = [random.randint(<span\
          \ class=\"hljs-number\">0</span>, WINDOW_SIZE[<span class=\"hljs-number\"\
          >0</span>]//<span class=\"hljs-number\">10</span>)*<span class=\"hljs-number\"\
          >10</span>, random.randint(<span class=\"hljs-number\">0</span>, WINDOW_SIZE[<span\
          \ class=\"hljs-number\">1</span>]//<span class=\"hljs-number\">10</span>)*<span\
          \ class=\"hljs-number\">10</span>]\nfood_spawned = <span class=\"hljs-literal\"\
          >True</span>\ndirection = <span class=\"hljs-string\">\"RIGHT\"</span>\n\
          change_to = direction\nscore = <span class=\"hljs-number\">0</span>\n\n\
          <span class=\"hljs-comment\"># set the game loop</span>\nrunning = <span\
          \ class=\"hljs-literal\">True</span>\n<span class=\"hljs-keyword\">while</span>\
          \ running:\n    <span class=\"hljs-comment\"># handle events</span>\n  \
          \  <span class=\"hljs-keyword\">for</span> event <span class=\"hljs-keyword\"\
          >in</span> pygame.event.get():\n        <span class=\"hljs-keyword\">if</span>\
          \ event.<span class=\"hljs-built_in\">type</span> == pygame.QUIT:\n    \
          \        running = <span class=\"hljs-literal\">False</span>\n        \n\
          \        <span class=\"hljs-comment\"># handle input</span>\n        <span\
          \ class=\"hljs-keyword\">if</span> event.<span class=\"hljs-built_in\">type</span>\
          \ == pygame.KEYDOWN:\n            <span class=\"hljs-keyword\">if</span>\
          \ event.key == pygame.K_LEFT:\n                change_to = <span class=\"\
          hljs-string\">\"LEFT\"</span>\n            <span class=\"hljs-keyword\"\
          >if</span> event.key == pygame.K_RIGHT:\n                change_to = <span\
          \ class=\"hljs-string\">\"RIGHT\"</span>\n            <span class=\"hljs-keyword\"\
          >if</span> event.key == pygame.K_UP:\n                change_to = <span\
          \ class=\"hljs-string\">\"UP\"</span>\n            <span class=\"hljs-keyword\"\
          >if</span> event.key == pygame.K_DOWN:\n                change_to = <span\
          \ class=\"hljs-string\">\"DOWN\"</span>\n\n    <span class=\"hljs-comment\"\
          ># handle direction changes</span>\n    <span class=\"hljs-keyword\">if</span>\
          \ change_to == <span class=\"hljs-string\">\"LEFT\"</span> <span class=\"\
          hljs-keyword\">and</span> direction != <span class=\"hljs-string\">\"RIGHT\"\
          </span>:\n        direction = <span class=\"hljs-string\">\"LEFT\"</span>\n\
          \    <span class=\"hljs-keyword\">if</span> change_to == <span class=\"\
          hljs-string\">\"RIGHT\"</span> <span class=\"hljs-keyword\">and</span> direction\
          \ != <span class=\"hljs-string\">\"LEFT\"</span>:\n        direction = <span\
          \ class=\"hljs-string\">\"RIGHT\"</span>\n    <span class=\"hljs-keyword\"\
          >if</span> change_to == <span class=\"hljs-string\">\"UP\"</span> <span\
          \ class=\"hljs-keyword\">and</span> direction != <span class=\"hljs-string\"\
          >\"DOWN\"</span>:\n        direction = <span class=\"hljs-string\">\"UP\"\
          </span>\n    <span class=\"hljs-keyword\">if</span> change_to == <span class=\"\
          hljs-string\">\"DOWN\"</span> <span class=\"hljs-keyword\">and</span> direction\
          \ != <span class=\"hljs-string\">\"UP\"</span>:\n        direction = <span\
          \ class=\"hljs-string\">\"DOWN\"</span>\n\n    <span class=\"hljs-comment\"\
          ># move the snake</span>\n    <span class=\"hljs-keyword\">if</span> direction\
          \ == <span class=\"hljs-string\">\"LEFT\"</span>:\n        snake_pos[<span\
          \ class=\"hljs-number\">0</span>] -= <span class=\"hljs-number\">10</span>\n\
          \    <span class=\"hljs-keyword\">if</span> direction == <span class=\"\
          hljs-string\">\"RIGHT\"</span>:\n        snake_pos[<span class=\"hljs-number\"\
          >0</span>] += <span class=\"hljs-number\">10</span>\n    <span class=\"\
          hljs-keyword\">if</span> direction == <span class=\"hljs-string\">\"UP\"\
          </span>:\n        snake_pos[<span class=\"hljs-number\">1</span>] -= <span\
          \ class=\"hljs-number\">10</span>\n    <span class=\"hljs-keyword\">if</span>\
          \ direction == <span class=\"hljs-string\">\"DOWN\"</span>:\n        snake_pos[<span\
          \ class=\"hljs-number\">1</span>] += <span class=\"hljs-number\">10</span>\n\
          \n    <span class=\"hljs-comment\"># add a new segment to the snake</span>\n\
          \    snake_body.insert(<span class=\"hljs-number\">0</span>, <span class=\"\
          hljs-built_in\">list</span>(snake_pos))\n\n    <span class=\"hljs-comment\"\
          ># check if the snake has eaten the food</span>\n    <span class=\"hljs-keyword\"\
          >if</span> snake_pos[<span class=\"hljs-number\">0</span>] == food_pos[<span\
          \ class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">and</span>\
          \ snake_pos[<span class=\"hljs-number\">1</span>] == food_pos[<span class=\"\
          hljs-number\">1</span>]:\n        score += <span class=\"hljs-number\">1</span>\n\
          \        food_spawned = <span class=\"hljs-literal\">False</span>\n    <span\
          \ class=\"hljs-keyword\">else</span>:\n        snake_body.pop()\n\n    <span\
          \ class=\"hljs-comment\"># spawn a new food if it has been eaten</span>\n\
          \    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\"\
          >not</span> food_spawned:\n        food_pos = [random.randint(<span class=\"\
          hljs-number\">0</span>, WINDOW_SIZE[<span class=\"hljs-number\">0</span>]//<span\
          \ class=\"hljs-number\">10</span>)*<span class=\"hljs-number\">10</span>,\
          \ random.randint(<span class=\"hljs-number\">0</span>, WINDOW_SIZE[<span\
          \ class=\"hljs-number\">1</span>]//<span class=\"hljs-number\">10</span>)*<span\
          \ class=\"hljs-number\">10</span>]\n        food_spawned = <span class=\"\
          hljs-literal\">True</span>\n\n    <span class=\"hljs-comment\"># draw the\
          \ game objects</span>\n    screen.fill((<span class=\"hljs-number\">0</span>,\
          \ <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>))\n\
          \    <span class=\"hljs-keyword\">for</span> pos <span class=\"hljs-keyword\"\
          >in</span> snake_body:\n        pygame.draw.rect(screen, (<span class=\"\
          hljs-number\">255</span>, <span class=\"hljs-number\">255</span>, <span\
          \ class=\"hljs-number\">255</span>), pygame.Rect(pos[<span class=\"hljs-number\"\
          >0</span>], pos[<span class=\"hljs-number\">1</span>], <span class=\"hljs-number\"\
          >10</span>, <span class=\"hljs-number\">10</span>))\n    pygame.draw.rect(screen,\
          \ (<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">0</span>,\
          \ <span class=\"hljs-number\">0</span>), pygame.Rect(food_pos[<span class=\"\
          hljs-number\">0</span>], food_pos[<span class=\"hljs-number\">1</span>],\
          \ <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>))\n\
          \n    <span class=\"hljs-comment\"># draw the score</span>\n    font = pygame.font.Font(<span\
          \ class=\"hljs-literal\">None</span>, <span class=\"hljs-number\">36</span>)\n\
          \    text = font.render(<span class=\"hljs-string\">f\"Score: <span class=\"\
          hljs-subst\">{score}</span>\"</span>, <span class=\"hljs-literal\">True</span>,\
          \ (<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">255</span>,\
          \ <span class=\"hljs-number\">255</span>))\n    screen.blit(text, (WINDOW_SIZE[<span\
          \ class=\"hljs-number\">0</span>]//<span class=\"hljs-number\">2</span>\
          \ - text.get_width()//<span class=\"hljs-number\">2</span>, <span class=\"\
          hljs-number\">10</span>))\n\n    <span class=\"hljs-comment\"># update the\
          \ screen</span>\n    pygame.display.update()\n\n    <span class=\"hljs-comment\"\
          ># set the game speed</span>\n    clock.tick(<span class=\"hljs-number\"\
          >10</span>)\n\n<span class=\"hljs-comment\"># quit the game</span>\npygame.quit()\n\
          </code></pre>\n"
        raw: "We disagree with you.\n\n- You don't provide any examples, like prompts\
          \ or captures. Without these, we cannot help you fix your problems.\n- We\
          \ have tested WizardCoder-34B with this prompt: `write a snake game with\
          \ python`. lt can write an entire snake game, which also can be played.\n\
          ![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/G65b5_SbKe_S2b7MqKsXe.png)\n\
          ![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/ktruVyaAdRdcWYM3ywwV8.png)\n\
          - Someone on twitter also gets a snake game from our model.\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/y2-jZU6maKuNmIo5zyr9u.png)\n\
          - This is the generated code.\n```python\nimport pygame\nimport random\n\
          \n# initialize pygame\npygame.init()\n\n# set the window size\nWINDOW_SIZE\
          \ = [800, 600]\n\n# create the window\nscreen = pygame.display.set_mode(WINDOW_SIZE)\n\
          \n# set the title of the window\npygame.display.set_caption(\"Snake Game\"\
          )\n\n# set the game clock\nclock = pygame.time.Clock()\n\n# set the game\
          \ variables\nsnake_pos = [100, 50]\nsnake_body = [[100, 50], [100-10, 50],\
          \ [100-(2*10), 50]]\nfood_pos = [random.randint(0, WINDOW_SIZE[0]//10)*10,\
          \ random.randint(0, WINDOW_SIZE[1]//10)*10]\nfood_spawned = True\ndirection\
          \ = \"RIGHT\"\nchange_to = direction\nscore = 0\n\n# set the game loop\n\
          running = True\nwhile running:\n    # handle events\n    for event in pygame.event.get():\n\
          \        if event.type == pygame.QUIT:\n            running = False\n  \
          \      \n        # handle input\n        if event.type == pygame.KEYDOWN:\n\
          \            if event.key == pygame.K_LEFT:\n                change_to =\
          \ \"LEFT\"\n            if event.key == pygame.K_RIGHT:\n              \
          \  change_to = \"RIGHT\"\n            if event.key == pygame.K_UP:\n   \
          \             change_to = \"UP\"\n            if event.key == pygame.K_DOWN:\n\
          \                change_to = \"DOWN\"\n\n    # handle direction changes\n\
          \    if change_to == \"LEFT\" and direction != \"RIGHT\":\n        direction\
          \ = \"LEFT\"\n    if change_to == \"RIGHT\" and direction != \"LEFT\":\n\
          \        direction = \"RIGHT\"\n    if change_to == \"UP\" and direction\
          \ != \"DOWN\":\n        direction = \"UP\"\n    if change_to == \"DOWN\"\
          \ and direction != \"UP\":\n        direction = \"DOWN\"\n\n    # move the\
          \ snake\n    if direction == \"LEFT\":\n        snake_pos[0] -= 10\n   \
          \ if direction == \"RIGHT\":\n        snake_pos[0] += 10\n    if direction\
          \ == \"UP\":\n        snake_pos[1] -= 10\n    if direction == \"DOWN\":\n\
          \        snake_pos[1] += 10\n\n    # add a new segment to the snake\n  \
          \  snake_body.insert(0, list(snake_pos))\n\n    # check if the snake has\
          \ eaten the food\n    if snake_pos[0] == food_pos[0] and snake_pos[1] ==\
          \ food_pos[1]:\n        score += 1\n        food_spawned = False\n    else:\n\
          \        snake_body.pop()\n\n    # spawn a new food if it has been eaten\n\
          \    if not food_spawned:\n        food_pos = [random.randint(0, WINDOW_SIZE[0]//10)*10,\
          \ random.randint(0, WINDOW_SIZE[1]//10)*10]\n        food_spawned = True\n\
          \n    # draw the game objects\n    screen.fill((0, 0, 0))\n    for pos in\
          \ snake_body:\n        pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(pos[0],\
          \ pos[1], 10, 10))\n    pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(food_pos[0],\
          \ food_pos[1], 10, 10))\n\n    # draw the score\n    font = pygame.font.Font(None,\
          \ 36)\n    text = font.render(f\"Score: {score}\", True, (255, 255, 255))\n\
          \    screen.blit(text, (WINDOW_SIZE[0]//2 - text.get_width()//2, 10))\n\n\
          \    # update the screen\n    pygame.display.update()\n\n    # set the game\
          \ speed\n    clock.tick(10)\n\n# quit the game\npygame.quit()\n```"
        updatedAt: '2023-08-28T02:25:19.668Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - WizardLM
    id: 64ec058fcfa36c8ac2ef61c2
    type: comment
  author: Ziyang
  content: "We disagree with you.\n\n- You don't provide any examples, like prompts\
    \ or captures. Without these, we cannot help you fix your problems.\n- We have\
    \ tested WizardCoder-34B with this prompt: `write a snake game with python`. lt\
    \ can write an entire snake game, which also can be played.\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/G65b5_SbKe_S2b7MqKsXe.png)\n\
    ![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/ktruVyaAdRdcWYM3ywwV8.png)\n\
    - Someone on twitter also gets a snake game from our model.\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/y2-jZU6maKuNmIo5zyr9u.png)\n\
    - This is the generated code.\n```python\nimport pygame\nimport random\n\n# initialize\
    \ pygame\npygame.init()\n\n# set the window size\nWINDOW_SIZE = [800, 600]\n\n\
    # create the window\nscreen = pygame.display.set_mode(WINDOW_SIZE)\n\n# set the\
    \ title of the window\npygame.display.set_caption(\"Snake Game\")\n\n# set the\
    \ game clock\nclock = pygame.time.Clock()\n\n# set the game variables\nsnake_pos\
    \ = [100, 50]\nsnake_body = [[100, 50], [100-10, 50], [100-(2*10), 50]]\nfood_pos\
    \ = [random.randint(0, WINDOW_SIZE[0]//10)*10, random.randint(0, WINDOW_SIZE[1]//10)*10]\n\
    food_spawned = True\ndirection = \"RIGHT\"\nchange_to = direction\nscore = 0\n\
    \n# set the game loop\nrunning = True\nwhile running:\n    # handle events\n \
    \   for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n\
    \            running = False\n        \n        # handle input\n        if event.type\
    \ == pygame.KEYDOWN:\n            if event.key == pygame.K_LEFT:\n           \
    \     change_to = \"LEFT\"\n            if event.key == pygame.K_RIGHT:\n    \
    \            change_to = \"RIGHT\"\n            if event.key == pygame.K_UP:\n\
    \                change_to = \"UP\"\n            if event.key == pygame.K_DOWN:\n\
    \                change_to = \"DOWN\"\n\n    # handle direction changes\n    if\
    \ change_to == \"LEFT\" and direction != \"RIGHT\":\n        direction = \"LEFT\"\
    \n    if change_to == \"RIGHT\" and direction != \"LEFT\":\n        direction\
    \ = \"RIGHT\"\n    if change_to == \"UP\" and direction != \"DOWN\":\n       \
    \ direction = \"UP\"\n    if change_to == \"DOWN\" and direction != \"UP\":\n\
    \        direction = \"DOWN\"\n\n    # move the snake\n    if direction == \"\
    LEFT\":\n        snake_pos[0] -= 10\n    if direction == \"RIGHT\":\n        snake_pos[0]\
    \ += 10\n    if direction == \"UP\":\n        snake_pos[1] -= 10\n    if direction\
    \ == \"DOWN\":\n        snake_pos[1] += 10\n\n    # add a new segment to the snake\n\
    \    snake_body.insert(0, list(snake_pos))\n\n    # check if the snake has eaten\
    \ the food\n    if snake_pos[0] == food_pos[0] and snake_pos[1] == food_pos[1]:\n\
    \        score += 1\n        food_spawned = False\n    else:\n        snake_body.pop()\n\
    \n    # spawn a new food if it has been eaten\n    if not food_spawned:\n    \
    \    food_pos = [random.randint(0, WINDOW_SIZE[0]//10)*10, random.randint(0, WINDOW_SIZE[1]//10)*10]\n\
    \        food_spawned = True\n\n    # draw the game objects\n    screen.fill((0,\
    \ 0, 0))\n    for pos in snake_body:\n        pygame.draw.rect(screen, (255, 255,\
    \ 255), pygame.Rect(pos[0], pos[1], 10, 10))\n    pygame.draw.rect(screen, (255,\
    \ 0, 0), pygame.Rect(food_pos[0], food_pos[1], 10, 10))\n\n    # draw the score\n\
    \    font = pygame.font.Font(None, 36)\n    text = font.render(f\"Score: {score}\"\
    , True, (255, 255, 255))\n    screen.blit(text, (WINDOW_SIZE[0]//2 - text.get_width()//2,\
    \ 10))\n\n    # update the screen\n    pygame.display.update()\n\n    # set the\
    \ game speed\n    clock.tick(10)\n\n# quit the game\npygame.quit()\n```"
  created_at: 2023-08-28 01:25:19+00:00
  edited: false
  hidden: false
  id: 64ec058fcfa36c8ac2ef61c2
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
      fullname: rombo dawg
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rombodawg
      type: user
    createdAt: '2023-08-28T02:27:55.000Z'
    data:
      edited: false
      editors:
      - rombodawg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9811952114105225
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
          fullname: rombo dawg
          isHf: false
          isPro: false
          name: rombodawg
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;Ziyang&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Ziyang\">@<span class=\"\
          underline\">Ziyang</span></a></span>\n\n\t</span></span> this is great to\
          \ hear! Can you share the generation settings when getting these results?\
          \ I may just have had bad luck</p>\n"
        raw: '@Ziyang this is great to hear! Can you share the generation settings
          when getting these results? I may just have had bad luck'
        updatedAt: '2023-08-28T02:27:55.685Z'
      numEdits: 0
      reactions: []
    id: 64ec062b269384f6dcaf0da6
    type: comment
  author: rombodawg
  content: '@Ziyang this is great to hear! Can you share the generation settings when
    getting these results? I may just have had bad luck'
  created_at: 2023-08-28 01:27:55+00:00
  edited: false
  hidden: false
  id: 64ec062b269384f6dcaf0da6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
      fullname: Ziyang Luo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Ziyang
      type: user
    createdAt: '2023-08-28T02:36:18.000Z'
    data:
      edited: false
      editors:
      - Ziyang
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7560120224952698
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
          fullname: Ziyang Luo
          isHf: false
          isPro: false
          name: Ziyang
          type: user
        html: '<p>You can simply use this prompt <code>write a snake game with python</code>
          on our <a rel="nofollow" href="http://47.103.63.15:50085/">demo</a>.<br>Or
          you can use our demo code locally. <a rel="nofollow" href="https://github.com/nlpxucan/WizardLM/tree/main/demo">wizardcoder_demo.py</a><br>Set
          the temperature to 0, so the generation will be greedy decoding. You can
          get the same code.</p>

          '
        raw: 'You can simply use this prompt `write a snake game with python` on our
          [demo](http://47.103.63.15:50085/).

          Or you can use our demo code locally. [wizardcoder_demo.py](https://github.com/nlpxucan/WizardLM/tree/main/demo)

          Set the temperature to 0, so the generation will be greedy decoding. You
          can get the same code.'
        updatedAt: '2023-08-28T02:36:18.401Z'
      numEdits: 0
      reactions: []
    id: 64ec0822f494f8b2a09cc47c
    type: comment
  author: Ziyang
  content: 'You can simply use this prompt `write a snake game with python` on our
    [demo](http://47.103.63.15:50085/).

    Or you can use our demo code locally. [wizardcoder_demo.py](https://github.com/nlpxucan/WizardLM/tree/main/demo)

    Set the temperature to 0, so the generation will be greedy decoding. You can get
    the same code.'
  created_at: 2023-08-28 01:36:18+00:00
  edited: false
  hidden: false
  id: 64ec0822f494f8b2a09cc47c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
      fullname: rombo dawg
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rombodawg
      type: user
    createdAt: '2023-08-28T02:45:30.000Z'
    data:
      edited: false
      editors:
      - rombodawg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7971193194389343
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
          fullname: rombo dawg
          isHf: false
          isPro: false
          name: rombodawg
          type: user
        html: '<p>Oh gotcha, i use text generation webui, so i have access to alot
          more setting, like top_p, top_k, temperature, typical_p, ect.</p>

          '
        raw: Oh gotcha, i use text generation webui, so i have access to alot more
          setting, like top_p, top_k, temperature, typical_p, ect.
        updatedAt: '2023-08-28T02:45:30.730Z'
      numEdits: 0
      reactions: []
    id: 64ec0a4a788b2873b9e5353a
    type: comment
  author: rombodawg
  content: Oh gotcha, i use text generation webui, so i have access to alot more setting,
    like top_p, top_k, temperature, typical_p, ect.
  created_at: 2023-08-28 01:45:30+00:00
  edited: false
  hidden: false
  id: 64ec0a4a788b2873b9e5353a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
      fullname: Ziyang Luo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Ziyang
      type: user
    createdAt: '2023-08-28T02:55:21.000Z'
    data:
      edited: false
      editors:
      - Ziyang
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8731517195701599
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6090ff099a8bcaa437b234a4/nxN64gFkr5o5UZM-i03re.png?w=200&h=200&f=face
          fullname: Ziyang Luo
          isHf: false
          isPro: false
          name: Ziyang
          type: user
        html: '<p>Without greedy decoding, you will get different codes for each try.
          So luck matters.</p>

          '
        raw: Without greedy decoding, you will get different codes for each try. So
          luck matters.
        updatedAt: '2023-08-28T02:55:21.127Z'
      numEdits: 0
      reactions: []
    id: 64ec0c993b889f24d66a3004
    type: comment
  author: Ziyang
  content: Without greedy decoding, you will get different codes for each try. So
    luck matters.
  created_at: 2023-08-28 01:55:21+00:00
  edited: false
  hidden: false
  id: 64ec0c993b889f24d66a3004
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
      fullname: rombo dawg
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rombodawg
      type: user
    createdAt: '2023-08-28T02:57:17.000Z'
    data:
      edited: false
      editors:
      - rombodawg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7561931610107422
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
          fullname: rombo dawg
          isHf: false
          isPro: false
          name: rombodawg
          type: user
        html: '<p>Ok thanks for all the information </p>

          '
        raw: 'Ok thanks for all the information '
        updatedAt: '2023-08-28T02:57:17.764Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F917"
        users:
        - Ziyang
        - mirek190
    id: 64ec0d0d03728c2a7d8b7a3c
    type: comment
  author: rombodawg
  content: 'Ok thanks for all the information '
  created_at: 2023-08-28 01:57:17+00:00
  edited: false
  hidden: false
  id: 64ec0d0d03728c2a7d8b7a3c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/627b9f3f4d0858f0034efbb9/2Qnattrzv6qvqiZVVfV5x.png?w=200&h=200&f=face
      fullname: WizardLM
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: WizardLM
      type: user
    createdAt: '2023-09-14T06:59:54.000Z'
    data:
      status: closed
    id: 6502af6aec5634db142a4b9c
    type: status-change
  author: WizardLM
  created_at: 2023-09-14 05:59:54+00:00
  id: 6502af6aec5634db142a4b9c
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 11
repo_id: WizardLM/WizardCoder-Python-34B-V1.0
repo_type: model
status: closed
target_branch: null
title: Performance issues when compared to other codellama_34b finetunes
