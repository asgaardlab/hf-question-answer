!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Anaudia
conflicting_files: null
created_at: 2023-08-05 23:44:48+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T00:44:48.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8323922753334045
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Long sentences or paragraphs seem to be broken apart in the FlagModel
          implementation and then embedded individually, resulting in an output that
          contains 2 or more lists for one input. This is not true for the implementation
          via SentenceTransformer. Here one input leads to one output, containing
          one embedding. </p>

          '
        raw: 'Long sentences or paragraphs seem to be broken apart in the FlagModel
          implementation and then embedded individually, resulting in an output that
          contains 2 or more lists for one input. This is not true for the implementation
          via SentenceTransformer. Here one input leads to one output, containing
          one embedding. '
        updatedAt: '2023-08-06T00:44:48.558Z'
      numEdits: 0
      reactions: []
    id: 64ceed0037a8b7adaf58b25b
    type: comment
  author: Anaudia
  content: 'Long sentences or paragraphs seem to be broken apart in the FlagModel
    implementation and then embedded individually, resulting in an output that contains
    2 or more lists for one input. This is not true for the implementation via SentenceTransformer.
    Here one input leads to one output, containing one embedding. '
  created_at: 2023-08-05 23:44:48+00:00
  edited: false
  hidden: false
  id: 64ceed0037a8b7adaf58b25b
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
      fullname: Xiao
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shitao
      type: user
    createdAt: '2023-08-06T01:28:20.000Z'
    data:
      edited: false
      editors:
      - Shitao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9466568827629089
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
          fullname: Xiao
          isHf: false
          isPro: false
          name: Shitao
          type: user
        html: '<p>We don''t set the tokenizer to split the long sentence. I cannot
          reproduce this error, can you help to provide some scripts?</p>

          '
        raw: We don't set the tokenizer to split the long sentence. I cannot reproduce
          this error, can you help to provide some scripts?
        updatedAt: '2023-08-06T01:28:20.903Z'
      numEdits: 0
      reactions: []
    id: 64cef734c0c627dfa7bd7430
    type: comment
  author: Shitao
  content: We don't set the tokenizer to split the long sentence. I cannot reproduce
    this error, can you help to provide some scripts?
  created_at: 2023-08-06 00:28:20+00:00
  edited: false
  hidden: false
  id: 64cef734c0c627dfa7bd7430
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T01:34:04.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6195642352104187
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Ofc, </p>

          <p>text = "In a bustling town where shadows whispered secrets, a cat named
          Mira gained the ability to speak human language. One evening, Mira whispered
          a forgotten legend about a hidden treasure beneath the town''s oldest tree
          to a young, curious adventurer. Together, they embarked on a moonlit quest,
          forging an unbreakable bond while unearthing mysteries of the past."</p>

          <p>from FlagEmbedding import FlagModel<br>query_instruction_for_retrieval=''Represent
          this sentence for searching relevant passages: ''<br>model = FlagModel(''BAAI/bge-large-en'',
          query_instruction_for_retrieval=query_instruction_for_retrieval)<br>model.encode(text)</p>

          <p>The output is: </p>

          <p>array([[ 0.01307663,  0.01230509, -0.02265706, ...,  0.01391939,<br>        -0.03492293,
          -0.00590275],<br>       [ 0.00093336,  0.02802942, -0.03854717, ..., -0.0290005
          ,<br>        -0.00743153,  0.00360901]], dtype=float32)</p>

          <p>If I run:</p>

          <p>from sentence_transformers import SentenceTransformer<br>instruction
          = query_instruction_for_retrieval<br>model2 = SentenceTransformer(''BAAI/bge-large-en'')<br>p_embeddings
          = model2.encode(text, normalize_embeddings=True)</p>

          <p>The output is: </p>

          <p>array([ 0.01453966,  0.01963736, -0.02570449, ...,  0.01102038,<br>       -0.03386544,
          -0.00838666], dtype=float32)</p>

          <p>Hope that is helpful! </p>

          '
        raw: "Ofc, \n\ntext = \"In a bustling town where shadows whispered secrets,\
          \ a cat named Mira gained the ability to speak human language. One evening,\
          \ Mira whispered a forgotten legend about a hidden treasure beneath the\
          \ town's oldest tree to a young, curious adventurer. Together, they embarked\
          \ on a moonlit quest, forging an unbreakable bond while unearthing mysteries\
          \ of the past.\"\n\nfrom FlagEmbedding import FlagModel\nquery_instruction_for_retrieval='Represent\
          \ this sentence for searching relevant passages: '\nmodel = FlagModel('BAAI/bge-large-en',\
          \ query_instruction_for_retrieval=query_instruction_for_retrieval)\nmodel.encode(text)\n\
          \nThe output is: \n\narray([[ 0.01307663,  0.01230509, -0.02265706, ...,\
          \  0.01391939,\n        -0.03492293, -0.00590275],\n       [ 0.00093336,\
          \  0.02802942, -0.03854717, ..., -0.0290005 ,\n        -0.00743153,  0.00360901]],\
          \ dtype=float32)\n\n\nIf I run:\n\nfrom sentence_transformers import SentenceTransformer\n\
          instruction = query_instruction_for_retrieval\nmodel2 = SentenceTransformer('BAAI/bge-large-en')\n\
          p_embeddings = model2.encode(text, normalize_embeddings=True)\n\nThe output\
          \ is: \n\narray([ 0.01453966,  0.01963736, -0.02570449, ...,  0.01102038,\n\
          \       -0.03386544, -0.00838666], dtype=float32)\n\nHope that is helpful! "
        updatedAt: '2023-08-06T01:34:04.094Z'
      numEdits: 0
      reactions: []
    id: 64cef88c97ca59bcf7fa7733
    type: comment
  author: Anaudia
  content: "Ofc, \n\ntext = \"In a bustling town where shadows whispered secrets,\
    \ a cat named Mira gained the ability to speak human language. One evening, Mira\
    \ whispered a forgotten legend about a hidden treasure beneath the town's oldest\
    \ tree to a young, curious adventurer. Together, they embarked on a moonlit quest,\
    \ forging an unbreakable bond while unearthing mysteries of the past.\"\n\nfrom\
    \ FlagEmbedding import FlagModel\nquery_instruction_for_retrieval='Represent this\
    \ sentence for searching relevant passages: '\nmodel = FlagModel('BAAI/bge-large-en',\
    \ query_instruction_for_retrieval=query_instruction_for_retrieval)\nmodel.encode(text)\n\
    \nThe output is: \n\narray([[ 0.01307663,  0.01230509, -0.02265706, ...,  0.01391939,\n\
    \        -0.03492293, -0.00590275],\n       [ 0.00093336,  0.02802942, -0.03854717,\
    \ ..., -0.0290005 ,\n        -0.00743153,  0.00360901]], dtype=float32)\n\n\n\
    If I run:\n\nfrom sentence_transformers import SentenceTransformer\ninstruction\
    \ = query_instruction_for_retrieval\nmodel2 = SentenceTransformer('BAAI/bge-large-en')\n\
    p_embeddings = model2.encode(text, normalize_embeddings=True)\n\nThe output is:\
    \ \n\narray([ 0.01453966,  0.01963736, -0.02570449, ...,  0.01102038,\n      \
    \ -0.03386544, -0.00838666], dtype=float32)\n\nHope that is helpful! "
  created_at: 2023-08-06 00:34:04+00:00
  edited: false
  hidden: false
  id: 64cef88c97ca59bcf7fa7733
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
      fullname: Xiao
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shitao
      type: user
    createdAt: '2023-08-06T01:56:09.000Z'
    data:
      edited: false
      editors:
      - Shitao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7917181253433228
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
          fullname: Xiao
          isHf: false
          isPro: false
          name: Shitao
          type: user
        html: '<p>Thanks!<br>The FlagEmbedding doesn''t support inputting a string,
          so it makes this error.<br>We have updated the FlagEmbedding repo, and you
          can install it:<br>pip install -U FlagEmbedding</p>

          '
        raw: "Thanks!\nThe FlagEmbedding doesn't support inputting a string, so it\
          \ makes this error.\nWe have updated the FlagEmbedding repo, and you can\
          \ install it: \npip install -U FlagEmbedding"
        updatedAt: '2023-08-06T01:56:09.691Z'
      numEdits: 0
      reactions: []
    id: 64cefdb99cff73820362630c
    type: comment
  author: Shitao
  content: "Thanks!\nThe FlagEmbedding doesn't support inputting a string, so it makes\
    \ this error.\nWe have updated the FlagEmbedding repo, and you can install it:\
    \ \npip install -U FlagEmbedding"
  created_at: 2023-08-06 00:56:09+00:00
  edited: false
  hidden: false
  id: 64cefdb99cff73820362630c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T01:56:50.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.500424325466156
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Perfect! Thank you</p>

          '
        raw: Perfect! Thank you
        updatedAt: '2023-08-06T01:56:50.998Z'
      numEdits: 0
      reactions: []
    id: 64cefde2abc3308f0503e370
    type: comment
  author: Anaudia
  content: Perfect! Thank you
  created_at: 2023-08-06 00:56:50+00:00
  edited: false
  hidden: false
  id: 64cefde2abc3308f0503e370
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T02:17:45.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9630404114723206
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Can I ask another question: In what way would I best compare to
          sentences with each other. I have requirements and skills of people and
          I want to find out if a person has the skill required. However, I have realized
          that the best matches oftentimes depend more on the similarity of the sentence
          structure (length, gramma etc.) than on the actual content. What instruction
          would you recommend using ur model, and do you have any general tips? </p>

          '
        raw: 'Can I ask another question: In what way would I best compare to sentences
          with each other. I have requirements and skills of people and I want to
          find out if a person has the skill required. However, I have realized that
          the best matches oftentimes depend more on the similarity of the sentence
          structure (length, gramma etc.) than on the actual content. What instruction
          would you recommend using ur model, and do you have any general tips? '
        updatedAt: '2023-08-06T02:17:45.463Z'
      numEdits: 0
      reactions: []
    id: 64cf02c91720c7a483d51a20
    type: comment
  author: Anaudia
  content: 'Can I ask another question: In what way would I best compare to sentences
    with each other. I have requirements and skills of people and I want to find out
    if a person has the skill required. However, I have realized that the best matches
    oftentimes depend more on the similarity of the sentence structure (length, gramma
    etc.) than on the actual content. What instruction would you recommend using ur
    model, and do you have any general tips? '
  created_at: 2023-08-06 01:17:45+00:00
  edited: false
  hidden: false
  id: 64cf02c91720c7a483d51a20
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
      fullname: Xiao
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shitao
      type: user
    createdAt: '2023-08-06T02:54:35.000Z'
    data:
      edited: false
      editors:
      - Shitao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8689174056053162
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
          fullname: Xiao
          isHf: false
          isPro: false
          name: Shitao
          type: user
        html: '<p>If you need to search the answer to a short query, you need to add
          provided instruction to the query; in other cases, no instruction is needed,
          just use the original query directly.<br><code>bge</code> models focus on
          the general ability.  Since your scenario is different from the classical
          retrieval task or similarity task,  It''s better to fine-tune it based on
          your data, you can use this <a rel="nofollow" href="https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune">tool</a>
          fine-tune it.</p>

          '
        raw: 'If you need to search the answer to a short query, you need to add provided
          instruction to the query; in other cases, no instruction is needed, just
          use the original query directly.

          `bge` models focus on the general ability.  Since your scenario is different
          from the classical retrieval task or similarity task,  It''s better to fine-tune
          it based on your data, you can use this [tool](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune)
          fine-tune it.'
        updatedAt: '2023-08-06T02:54:35.556Z'
      numEdits: 0
      reactions: []
    id: 64cf0b6b995a0b5d594e8d94
    type: comment
  author: Shitao
  content: 'If you need to search the answer to a short query, you need to add provided
    instruction to the query; in other cases, no instruction is needed, just use the
    original query directly.

    `bge` models focus on the general ability.  Since your scenario is different from
    the classical retrieval task or similarity task,  It''s better to fine-tune it
    based on your data, you can use this [tool](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune)
    fine-tune it.'
  created_at: 2023-08-06 01:54:35+00:00
  edited: false
  hidden: false
  id: 64cf0b6b995a0b5d594e8d94
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T02:56:39.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9549080729484558
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: "<p>Thank you so much! That is incredible helpful \u2013 and I see Github\
          \ is now also online :)</p>\n"
        raw: "Thank you so much! That is incredible helpful \u2013 and I see Github\
          \ is now also online :)"
        updatedAt: '2023-08-06T02:56:39.064Z'
      numEdits: 0
      reactions: []
    id: 64cf0be74e3372f9eb88c6cf
    type: comment
  author: Anaudia
  content: "Thank you so much! That is incredible helpful \u2013 and I see Github\
    \ is now also online :)"
  created_at: 2023-08-06 01:56:39+00:00
  edited: false
  hidden: false
  id: 64cf0be74e3372f9eb88c6cf
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
      fullname: Xiao
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shitao
      type: user
    createdAt: '2023-08-06T02:58:02.000Z'
    data:
      edited: false
      editors:
      - Shitao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9371009469032288
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
          fullname: Xiao
          isHf: false
          isPro: false
          name: Shitao
          type: user
        html: '<p>Besides, you can select some negatives which have the same  sentence
          structure as your sentences to let the model depends more on the actual
          content</p>

          '
        raw: Besides, you can select some negatives which have the same  sentence
          structure as your sentences to let the model depends more on the actual
          content
        updatedAt: '2023-08-06T02:58:02.449Z'
      numEdits: 0
      reactions: []
    id: 64cf0c3ae8df1f66dd649796
    type: comment
  author: Shitao
  content: Besides, you can select some negatives which have the same  sentence structure
    as your sentences to let the model depends more on the actual content
  created_at: 2023-08-06 01:58:02+00:00
  edited: false
  hidden: false
  id: 64cf0c3ae8df1f66dd649796
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T03:13:11.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9547969102859497
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: "<p>Ye, I agree \u2013 can probably create very diverse sentences in\
          \ terms of structure/ length and make only the meaning stand out. I let\
          \ you know if it works :d thanks again \u2013 really cool project! </p>\n"
        raw: "Ye, I agree \u2013 can probably create very diverse sentences in terms\
          \ of structure/ length and make only the meaning stand out. I let you know\
          \ if it works :d thanks again \u2013 really cool project! "
        updatedAt: '2023-08-06T03:13:11.957Z'
      numEdits: 0
      reactions: []
    id: 64cf0fc70fbfb00b9146fb1d
    type: comment
  author: Anaudia
  content: "Ye, I agree \u2013 can probably create very diverse sentences in terms\
    \ of structure/ length and make only the meaning stand out. I let you know if\
    \ it works :d thanks again \u2013 really cool project! "
  created_at: 2023-08-06 02:13:11+00:00
  edited: false
  hidden: false
  id: 64cf0fc70fbfb00b9146fb1d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T03:18:21.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9102407693862915
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Would I use for the fine-tuning some kind of prompt: ''Create this
          sentence so that it can be compared in meaning with other sentences''. Similar
          to how you use the "Represent this sentence for searching relevant passages:"
          for retrieval. </p>

          '
        raw: 'Would I use for the fine-tuning some kind of prompt: ''Create this sentence
          so that it can be compared in meaning with other sentences''. Similar to
          how you use the "Represent this sentence for searching relevant passages:"
          for retrieval. '
        updatedAt: '2023-08-06T03:18:21.495Z'
      numEdits: 0
      reactions: []
    id: 64cf10fd484264a3b3d4a5c9
    type: comment
  author: Anaudia
  content: 'Would I use for the fine-tuning some kind of prompt: ''Create this sentence
    so that it can be compared in meaning with other sentences''. Similar to how you
    use the "Represent this sentence for searching relevant passages:" for retrieval. '
  created_at: 2023-08-06 02:18:21+00:00
  edited: false
  hidden: false
  id: 64cf10fd484264a3b3d4a5c9
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
      fullname: Xiao
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shitao
      type: user
    createdAt: '2023-08-06T03:30:09.000Z'
    data:
      edited: false
      editors:
      - Shitao
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9735592603683472
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0675d05a52192ee14e9ab1633353956.svg
          fullname: Xiao
          isHf: false
          isPro: false
          name: Shitao
          type: user
        html: '<p>You can try both using prompt and not using prompt. In fact, I''m
          not sure which is better for your task.</p>

          '
        raw: You can try both using prompt and not using prompt. In fact, I'm not
          sure which is better for your task.
        updatedAt: '2023-08-06T03:30:09.009Z'
      numEdits: 0
      reactions: []
    id: 64cf13c17e20ec9ea0a63d83
    type: comment
  author: Shitao
  content: You can try both using prompt and not using prompt. In fact, I'm not sure
    which is better for your task.
  created_at: 2023-08-06 02:30:09+00:00
  edited: false
  hidden: false
  id: 64cf13c17e20ec9ea0a63d83
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
      fullname: Roeseler
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Anaudia
      type: user
    createdAt: '2023-08-06T03:36:35.000Z'
    data:
      edited: false
      editors:
      - Anaudia
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9782147407531738
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/47e80099908506e0d85e042e98507cd6.svg
          fullname: Roeseler
          isHf: false
          isPro: false
          name: Anaudia
          type: user
        html: '<p>Ok, will try. Thanks again </p>

          '
        raw: 'Ok, will try. Thanks again '
        updatedAt: '2023-08-06T03:36:35.354Z'
      numEdits: 0
      reactions: []
    id: 64cf15436f107411da8a21ed
    type: comment
  author: Anaudia
  content: 'Ok, will try. Thanks again '
  created_at: 2023-08-06 02:36:35+00:00
  edited: false
  hidden: false
  id: 64cf15436f107411da8a21ed
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: BAAI/bge-large-en
repo_type: model
status: open
target_branch: null
title: Results from the SentenceTransformer library are sometimes different than the
  ones imported from the FlagModel
