!!python/object:huggingface_hub.community.DiscussionWithDetails
author: spejamas
conflicting_files: null
created_at: 2023-10-20 19:35:49+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-20T20:35:49.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8614505529403687
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>Take this image I send for inpainting (or in this case, outpainting):<br><a
          rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/vl0r54rPsLhaN4GsTlby1.png"><img
          alt="afremov_puppy_to_outpaint.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/vl0r54rPsLhaN4GsTlby1.png"></a><br>Using
          this mask:<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RxMUIq252qpVk9RuPKXBH.png"><img
          alt="watercolor_mask_fixed.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RxMUIq252qpVk9RuPKXBH.png"></a><br>This
          inpainting pipeline, instantiated as demonstrated in the model card <code>pipe
          = AutoPipelineForInpainting.from_pretrained("diffusers/stable-diffusion-xl-1.0-inpainting-0.1",
          torch_dtype=torch.float16, variant="fp16").to("cuda")</code>, produces the
          following:<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wqxI7Yg0ElTcIGbQAXE9M.jpeg"><img
          alt="afremov_puppy_outpainted.jpg" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wqxI7Yg0ElTcIGbQAXE9M.jpeg"></a><br>which
          is a great outpainting. However, I notice that the colors in the output
          that correspond to the masked area (the area that as I understand is not
          meant to be altered) are different from the original. The colors aren''t
          as deep, and in some of my tests, small artefacts seem to appear where they
          didn''t exist in the original. You can see the difference comparing the
          images above; in addition, you can see a difference in the RGB color levels
          in the area corresponding to the masked region as viewed in a photo editor
          (original first, outpaint output second):<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zqoMTVRHQWE6npGUilDEx.png"><img
          alt="rgb_before_outpaint.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zqoMTVRHQWE6npGUilDEx.png"></a><br><a
          rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/bugaXq1LAPaEvALVo8hqL.png"><img
          alt="rgb_outpainted.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/bugaXq1LAPaEvALVo8hqL.png"></a><br>I''ve
          been using guidance scale 7, inference steps 40, and strength of 1. I thought
          strength=1 might have caused the problem, but I tried it with lower strength
          as well and I notice the same degradation.</p>

          <p>So......why? Why does this happen? Is there some kind of preprocessing
          of the image that degrades it? Is it possible to avoid degradation of the
          masked area with this pipeline?</p>

          '
        raw: "Take this image I send for inpainting (or in this case, outpainting):\r\
          \n![afremov_puppy_to_outpaint.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/vl0r54rPsLhaN4GsTlby1.png)\r\
          \nUsing this mask:\r\n![watercolor_mask_fixed.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RxMUIq252qpVk9RuPKXBH.png)\r\
          \nThis inpainting pipeline, instantiated as demonstrated in the model card\
          \ `pipe = AutoPipelineForInpainting.from_pretrained(\"diffusers/stable-diffusion-xl-1.0-inpainting-0.1\"\
          , torch_dtype=torch.float16, variant=\"fp16\").to(\"cuda\")`, produces the\
          \ following:\r\n![afremov_puppy_outpainted.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wqxI7Yg0ElTcIGbQAXE9M.jpeg)\r\
          \nwhich is a great outpainting. However, I notice that the colors in the\
          \ output that correspond to the masked area (the area that as I understand\
          \ is not meant to be altered) are different from the original. The colors\
          \ aren't as deep, and in some of my tests, small artefacts seem to appear\
          \ where they didn't exist in the original. You can see the difference comparing\
          \ the images above; in addition, you can see a difference in the RGB color\
          \ levels in the area corresponding to the masked region as viewed in a photo\
          \ editor (original first, outpaint output second):\r\n![rgb_before_outpaint.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zqoMTVRHQWE6npGUilDEx.png)\r\
          \n![rgb_outpainted.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/bugaXq1LAPaEvALVo8hqL.png)\r\
          \nI've been using guidance scale 7, inference steps 40, and strength of\
          \ 1. I thought strength=1 might have caused the problem, but I tried it\
          \ with lower strength as well and I notice the same degradation.\r\n\r\n\
          So......why? Why does this happen? Is there some kind of preprocessing of\
          \ the image that degrades it? Is it possible to avoid degradation of the\
          \ masked area with this pipeline?"
        updatedAt: '2023-10-20T20:35:49.722Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\u2764\uFE0F"
        users:
        - tonynoce
        - saidattax
    id: 6532e4a5badc497807406979
    type: comment
  author: spejamas
  content: "Take this image I send for inpainting (or in this case, outpainting):\r\
    \n![afremov_puppy_to_outpaint.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/vl0r54rPsLhaN4GsTlby1.png)\r\
    \nUsing this mask:\r\n![watercolor_mask_fixed.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RxMUIq252qpVk9RuPKXBH.png)\r\
    \nThis inpainting pipeline, instantiated as demonstrated in the model card `pipe\
    \ = AutoPipelineForInpainting.from_pretrained(\"diffusers/stable-diffusion-xl-1.0-inpainting-0.1\"\
    , torch_dtype=torch.float16, variant=\"fp16\").to(\"cuda\")`, produces the following:\r\
    \n![afremov_puppy_outpainted.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wqxI7Yg0ElTcIGbQAXE9M.jpeg)\r\
    \nwhich is a great outpainting. However, I notice that the colors in the output\
    \ that correspond to the masked area (the area that as I understand is not meant\
    \ to be altered) are different from the original. The colors aren't as deep, and\
    \ in some of my tests, small artefacts seem to appear where they didn't exist\
    \ in the original. You can see the difference comparing the images above; in addition,\
    \ you can see a difference in the RGB color levels in the area corresponding to\
    \ the masked region as viewed in a photo editor (original first, outpaint output\
    \ second):\r\n![rgb_before_outpaint.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zqoMTVRHQWE6npGUilDEx.png)\r\
    \n![rgb_outpainted.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/bugaXq1LAPaEvALVo8hqL.png)\r\
    \nI've been using guidance scale 7, inference steps 40, and strength of 1. I thought\
    \ strength=1 might have caused the problem, but I tried it with lower strength\
    \ as well and I notice the same degradation.\r\n\r\nSo......why? Why does this\
    \ happen? Is there some kind of preprocessing of the image that degrades it? Is\
    \ it possible to avoid degradation of the masked area with this pipeline?"
  created_at: 2023-10-20 19:35:49+00:00
  edited: false
  hidden: false
  id: 6532e4a5badc497807406979
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-20T21:06:40.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9337773323059082
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>Oh</p>

          <p>From the model card:<br>"When the strength parameter is set to 1 (i.e.
          starting in-painting from a fully masked image), the quality of the image
          is degraded. The model retains the non-masked contents of the image, but
          images look less sharp. We''re investing this and working on the next version."<br>I''ll
          check again what I was seeing with strength &lt; 1. My mistake. Thank you
          for the disclaimer.</p>

          <p>Next version anytime soon? :)</p>

          '
        raw: 'Oh


          From the model card:

          "When the strength parameter is set to 1 (i.e. starting in-painting from
          a fully masked image), the quality of the image is degraded. The model retains
          the non-masked contents of the image, but images look less sharp. We''re
          investing this and working on the next version."

          I''ll check again what I was seeing with strength < 1. My mistake. Thank
          you for the disclaimer.


          Next version anytime soon? :)'
        updatedAt: '2023-10-20T21:06:40.873Z'
      numEdits: 0
      reactions: []
    id: 6532ebe002d1ecd5453c0083
    type: comment
  author: spejamas
  content: 'Oh


    From the model card:

    "When the strength parameter is set to 1 (i.e. starting in-painting from a fully
    masked image), the quality of the image is degraded. The model retains the non-masked
    contents of the image, but images look less sharp. We''re investing this and working
    on the next version."

    I''ll check again what I was seeing with strength < 1. My mistake. Thank you for
    the disclaimer.


    Next version anytime soon? :)'
  created_at: 2023-10-20 20:06:40+00:00
  edited: false
  hidden: false
  id: 6532ebe002d1ecd5453c0083
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-21T21:28:00.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9174691438674927
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>NEVERMIND I TAKE IT BACK</p>

          <p>After some more tests, the degradation from running the pipeline at .99
          strength is indistinguishable from the degradation at 1 strength. Lower
          strengths also noticeably degrade the original picture, to a lesser extent
          than higher strengths. I''m not sure how to reverse the degradation, so
          for now this fine tune is at least for me unusable.</p>

          '
        raw: 'NEVERMIND I TAKE IT BACK


          After some more tests, the degradation from running the pipeline at .99
          strength is indistinguishable from the degradation at 1 strength. Lower
          strengths also noticeably degrade the original picture, to a lesser extent
          than higher strengths. I''m not sure how to reverse the degradation, so
          for now this fine tune is at least for me unusable.'
        updatedAt: '2023-10-21T21:28:00.644Z'
      numEdits: 0
      reactions: []
    id: 653442601922c31a9bf724ec
    type: comment
  author: spejamas
  content: 'NEVERMIND I TAKE IT BACK


    After some more tests, the degradation from running the pipeline at .99 strength
    is indistinguishable from the degradation at 1 strength. Lower strengths also
    noticeably degrade the original picture, to a lesser extent than higher strengths.
    I''m not sure how to reverse the degradation, so for now this fine tune is at
    least for me unusable.'
  created_at: 2023-10-21 20:28:00+00:00
  edited: false
  hidden: false
  id: 653442601922c31a9bf724ec
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
      fullname: Wok
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Wok
      type: user
    createdAt: '2023-10-23T21:15:39.000Z'
    data:
      edited: true
      editors:
      - Wok
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8997264504432678
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661354892407-6155fc0e7971df85cd2e9d13.jpeg?w=200&h=200&f=face
          fullname: Wok
          isHf: false
          isPro: false
          name: Wok
          type: user
        html: '<p>What I do is that I finalize the edit of the image using two layers
          (one for the input image, one for the output image) with a software like
          Gimp.<br>I use the eraser tool on the top layer and get what I want thanks
          to transparency. This way, I keep the sharpness of the input image and benefit
          from the inpainting in the output image.</p>

          '
        raw: 'What I do is that I finalize the edit of the image using two layers
          (one for the input image, one for the output image) with a software like
          Gimp.

          I use the eraser tool on the top layer and get what I want thanks to transparency.
          This way, I keep the sharpness of the input image and benefit from the inpainting
          in the output image.'
        updatedAt: '2023-10-23T21:17:41.690Z'
      numEdits: 4
      reactions: []
    id: 6536e27bfb6eb06b92a91744
    type: comment
  author: Wok
  content: 'What I do is that I finalize the edit of the image using two layers (one
    for the input image, one for the output image) with a software like Gimp.

    I use the eraser tool on the top layer and get what I want thanks to transparency.
    This way, I keep the sharpness of the input image and benefit from the inpainting
    in the output image.'
  created_at: 2023-10-23 20:15:39+00:00
  edited: true
  hidden: false
  id: 6536e27bfb6eb06b92a91744
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-24T02:46:44.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8787223696708679
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>Updates with more observations:<br>The spikes in the second RGB
          visualization I referenced earlier arose from a problem in my workflow (RGB
          was converted to P). The true distribution is smoother (but still very different).
          Here''s a better visualization, where red is the original image and blue
          is the outpainted:<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/YWBWhCBkaKuRb6yw05Eka.png"><img
          alt="plt_1.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/YWBWhCBkaKuRb6yw05Eka.png"></a></p>

          <p>And here''s a visualization of the map of pixel-by-pixel differences:<br><a
          rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RJpX8uYLw4PFCA-HGzhqC.jpeg"><img
          alt="afremov_difference.jpg" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RJpX8uYLw4PFCA-HGzhqC.jpeg"></a></p>

          <p>It''s worth noting that there is no pixel in the original that has a
          lower R,G, or B value than its corresponding pixel in the outpainted. The
          values strictly increase if they don''t stay the same. This makes a more
          washed out image with no deep colors.</p>

          '
        raw: 'Updates with more observations:

          The spikes in the second RGB visualization I referenced earlier arose from
          a problem in my workflow (RGB was converted to P). The true distribution
          is smoother (but still very different). Here''s a better visualization,
          where red is the original image and blue is the outpainted:

          ![plt_1.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/YWBWhCBkaKuRb6yw05Eka.png)


          And here''s a visualization of the map of pixel-by-pixel differences:

          ![afremov_difference.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RJpX8uYLw4PFCA-HGzhqC.jpeg)


          It''s worth noting that there is no pixel in the original that has a lower
          R,G, or B value than its corresponding pixel in the outpainted. The values
          strictly increase if they don''t stay the same. This makes a more washed
          out image with no deep colors.'
        updatedAt: '2023-10-24T02:46:44.325Z'
      numEdits: 0
      reactions: []
    id: 65373014fa9f02750d236ff2
    type: comment
  author: spejamas
  content: 'Updates with more observations:

    The spikes in the second RGB visualization I referenced earlier arose from a problem
    in my workflow (RGB was converted to P). The true distribution is smoother (but
    still very different). Here''s a better visualization, where red is the original
    image and blue is the outpainted:

    ![plt_1.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/YWBWhCBkaKuRb6yw05Eka.png)


    And here''s a visualization of the map of pixel-by-pixel differences:

    ![afremov_difference.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/RJpX8uYLw4PFCA-HGzhqC.jpeg)


    It''s worth noting that there is no pixel in the original that has a lower R,G,
    or B value than its corresponding pixel in the outpainted. The values strictly
    increase if they don''t stay the same. This makes a more washed out image with
    no deep colors.'
  created_at: 2023-10-24 01:46:44+00:00
  edited: false
  hidden: false
  id: 65373014fa9f02750d236ff2
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-24T04:02:53.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7252160906791687
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>The map I posted above seems inverted. Here''s a map of the OUTPAINTED
          RGB values minus the ORIGINAL RGB values:<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/y4otuNbcuBKntrflS_TmO.jpeg"><img
          alt="afremov_difference_invert.jpg" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/y4otuNbcuBKntrflS_TmO.jpeg"></a></p>

          <p>With this, it''s easier to see what the pipeline is modifying about the
          image. These pixels + the original pixels = the outpainted pixels</p>

          '
        raw: 'The map I posted above seems inverted. Here''s a map of the OUTPAINTED
          RGB values minus the ORIGINAL RGB values:

          ![afremov_difference_invert.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/y4otuNbcuBKntrflS_TmO.jpeg)


          With this, it''s easier to see what the pipeline is modifying about the
          image. These pixels + the original pixels = the outpainted pixels'
        updatedAt: '2023-10-24T04:02:53.978Z'
      numEdits: 0
      reactions: []
    id: 653741ed3af2f64a0d476d3f
    type: comment
  author: spejamas
  content: 'The map I posted above seems inverted. Here''s a map of the OUTPAINTED
    RGB values minus the ORIGINAL RGB values:

    ![afremov_difference_invert.jpg](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/y4otuNbcuBKntrflS_TmO.jpeg)


    With this, it''s easier to see what the pipeline is modifying about the image.
    These pixels + the original pixels = the outpainted pixels'
  created_at: 2023-10-24 03:02:53+00:00
  edited: false
  hidden: false
  id: 653741ed3af2f64a0d476d3f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-24T04:18:33.000Z'
    data:
      edited: true
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.899113118648529
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: "<blockquote>\n<p>What I do is that I finalize the edit of the image\
          \ using two layers (one for the input image, one for the output image) with\
          \ a software like Gimp.<br>I use the eraser tool on the top layer and get\
          \ what I want thanks to transparency. This way, I keep the sharpness of\
          \ the input image and benefit from the inpainting in the output image.</p>\n\
          </blockquote>\n<p>This is a fine workflow, thank you Wok. My use case is\
          \ a little more difficult\u2014since I am outpainting, if I simply layer\
          \ the original image on top of the output, I get a sharp/noticeable border\
          \ where the color palette changes. Maybe it can be smoothed, but even then\
          \ I definitely prefer the original colors better. They are deeper and richer.\
          \ And the outpainted portion is large, not just one smaller piece of the\
          \ image.</p>\n"
        raw: "> What I do is that I finalize the edit of the image using two layers\
          \ (one for the input image, one for the output image) with a software like\
          \ Gimp.\n> I use the eraser tool on the top layer and get what I want thanks\
          \ to transparency. This way, I keep the sharpness of the input image and\
          \ benefit from the inpainting in the output image.\n\nThis is a fine workflow,\
          \ thank you Wok. My use case is a little more difficult\u2014since I am\
          \ outpainting, if I simply layer the original image on top of the output,\
          \ I get a sharp/noticeable border where the color palette changes. Maybe\
          \ it can be smoothed, but even then I definitely prefer the original colors\
          \ better. They are deeper and richer. And the outpainted portion is large,\
          \ not just one smaller piece of the image."
        updatedAt: '2023-10-24T04:18:58.267Z'
      numEdits: 1
      reactions: []
    id: 6537459962dd8126cf90592c
    type: comment
  author: spejamas
  content: "> What I do is that I finalize the edit of the image using two layers\
    \ (one for the input image, one for the output image) with a software like Gimp.\n\
    > I use the eraser tool on the top layer and get what I want thanks to transparency.\
    \ This way, I keep the sharpness of the input image and benefit from the inpainting\
    \ in the output image.\n\nThis is a fine workflow, thank you Wok. My use case\
    \ is a little more difficult\u2014since I am outpainting, if I simply layer the\
    \ original image on top of the output, I get a sharp/noticeable border where the\
    \ color palette changes. Maybe it can be smoothed, but even then I definitely\
    \ prefer the original colors better. They are deeper and richer. And the outpainted\
    \ portion is large, not just one smaller piece of the image."
  created_at: 2023-10-24 03:18:33+00:00
  edited: true
  hidden: false
  id: 6537459962dd8126cf90592c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
      fullname: Spencer Hull
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: spejamas
      type: user
    createdAt: '2023-10-24T21:30:16.000Z'
    data:
      edited: false
      editors:
      - spejamas
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6245245337486267
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a90f663c8e0506427324bbb9168b9cd5.svg
          fullname: Spencer Hull
          isHf: false
          isPro: false
          name: spejamas
          type: user
        html: '<p>Histograms of pixel differences in R, G, and B channels individually
          (outpainted r, g, b minus original r, g, b):<br><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zwi6-Q7mggUredY5rJT16.png"><img
          alt="difference_red.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zwi6-Q7mggUredY5rJT16.png"></a><br><a
          rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/nDi5jVgTWivPlAAVDefAS.png"><img
          alt="difference_green.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/nDi5jVgTWivPlAAVDefAS.png"></a><br><a
          rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wpCDBiYoL8yCbZL-QVf-k.png"><img
          alt="difference_blue.png" src="https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wpCDBiYoL8yCbZL-QVf-k.png"></a><br>Seems
          the pipeline either adds &lt; 100 (of these instances typically &lt; 50),
          or &gt; 200, with no in between.</p>

          '
        raw: 'Histograms of pixel differences in R, G, and B channels individually
          (outpainted r, g, b minus original r, g, b):

          ![difference_red.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zwi6-Q7mggUredY5rJT16.png)

          ![difference_green.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/nDi5jVgTWivPlAAVDefAS.png)

          ![difference_blue.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wpCDBiYoL8yCbZL-QVf-k.png)

          Seems the pipeline either adds < 100 (of these instances typically < 50),
          or > 200, with no in between.'
        updatedAt: '2023-10-24T21:30:16.893Z'
      numEdits: 0
      reactions: []
    id: 65383768cfc110ff79759a39
    type: comment
  author: spejamas
  content: 'Histograms of pixel differences in R, G, and B channels individually (outpainted
    r, g, b minus original r, g, b):

    ![difference_red.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/zwi6-Q7mggUredY5rJT16.png)

    ![difference_green.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/nDi5jVgTWivPlAAVDefAS.png)

    ![difference_blue.png](https://cdn-uploads.huggingface.co/production/uploads/646ee86e66f7b97a94fee69b/wpCDBiYoL8yCbZL-QVf-k.png)

    Seems the pipeline either adds < 100 (of these instances typically < 50), or >
    200, with no in between.'
  created_at: 2023-10-24 20:30:16+00:00
  edited: false
  hidden: false
  id: 65383768cfc110ff79759a39
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 14
repo_id: diffusers/stable-diffusion-xl-1.0-inpainting-0.1
repo_type: model
status: open
target_branch: null
title: Areas masked as NOT for inpaint are nonetheless altered, why is this?
