!!python/object:huggingface_hub.community.DiscussionWithDetails
author: radandreicristian
conflicting_files: null
created_at: 2023-04-20 06:42:50+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1668601163658-6350058017a6475e8bfdfdfa.jpeg?w=200&h=200&f=face
      fullname: Andrei-Cristian Rad
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: radandreicristian
      type: user
    createdAt: '2023-04-20T07:42:50.000Z'
    data:
      edited: false
      editors:
      - radandreicristian
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1668601163658-6350058017a6475e8bfdfdfa.jpeg?w=200&h=200&f=face
          fullname: Andrei-Cristian Rad
          isHf: false
          isPro: false
          name: radandreicristian
          type: user
        html: '<p>Hello!</p>

          <p>Is there a way to force the model to generate only present keywords?
          For what I''ve been testing so far, it seems to prefer absent keywords,
          but that is something I would like to avoid when possible.</p>

          <p>Thanks!</p>

          '
        raw: "Hello!\r\n\r\nIs there a way to force the model to generate only present\
          \ keywords? For what I've been testing so far, it seems to prefer absent\
          \ keywords, but that is something I would like to avoid when possible.\r\
          \n\r\nThanks!"
        updatedAt: '2023-04-20T07:42:50.690Z'
      numEdits: 0
      reactions: []
    id: 6440ecfa28fb8c31ffbdc1f0
    type: comment
  author: radandreicristian
  content: "Hello!\r\n\r\nIs there a way to force the model to generate only present\
    \ keywords? For what I've been testing so far, it seems to prefer absent keywords,\
    \ but that is something I would like to avoid when possible.\r\n\r\nThanks!"
  created_at: 2023-04-20 06:42:50+00:00
  edited: false
  hidden: false
  id: 6440ecfa28fb8c31ffbdc1f0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649430742847-noauth.png?w=200&h=200&f=face
      fullname: Daniel Preotiuc-Pietro
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: danielpreotiuc
      type: user
    createdAt: '2023-04-24T23:22:36.000Z'
    data:
      edited: false
      editors:
      - danielpreotiuc
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649430742847-noauth.png?w=200&h=200&f=face
          fullname: Daniel Preotiuc-Pietro
          isHf: false
          isPro: false
          name: danielpreotiuc
          type: user
        html: '<p>Hello,</p>

          <p>Thank you for your interest in this model.</p>

          <p>If you only want to select keywords from the original data set, I would
          recommend one of the keyphrase extraction models that treats this task as
          span extraction. One such model is KBIR available here: <a href="https://huggingface.co/bloomberg/KBIR">https://huggingface.co/bloomberg/KBIR</a>.</p>

          <p>This model is related to KeyBART and was introduced in the same paper:
          <a rel="nofollow" href="https://aclanthology.org/2022.findings-naacl.67.pdf">https://aclanthology.org/2022.findings-naacl.67.pdf</a></p>

          <p>Please let us know if you have further questions.</p>

          '
        raw: 'Hello,


          Thank you for your interest in this model.


          If you only want to select keywords from the original data set, I would
          recommend one of the keyphrase extraction models that treats this task as
          span extraction. One such model is KBIR available here: https://huggingface.co/bloomberg/KBIR.


          This model is related to KeyBART and was introduced in the same paper: https://aclanthology.org/2022.findings-naacl.67.pdf


          Please let us know if you have further questions.'
        updatedAt: '2023-04-24T23:22:36.958Z'
      numEdits: 0
      reactions: []
    id: 64470f3c1dc59ca8aed54db1
    type: comment
  author: danielpreotiuc
  content: 'Hello,


    Thank you for your interest in this model.


    If you only want to select keywords from the original data set, I would recommend
    one of the keyphrase extraction models that treats this task as span extraction.
    One such model is KBIR available here: https://huggingface.co/bloomberg/KBIR.


    This model is related to KeyBART and was introduced in the same paper: https://aclanthology.org/2022.findings-naacl.67.pdf


    Please let us know if you have further questions.'
  created_at: 2023-04-24 22:22:36+00:00
  edited: false
  hidden: false
  id: 64470f3c1dc59ca8aed54db1
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 4
repo_id: bloomberg/KeyBART
repo_type: model
status: open
target_branch: null
title: Force generation of present keywords?
