!!python/object:huggingface_hub.community.DiscussionWithDetails
author: StephennFernandes
conflicting_files: null
created_at: 2024-01-23 11:53:08+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1614429358033-noauth.jpeg?w=200&h=200&f=face
      fullname: 'Stephen Fernandes '
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: StephennFernandes
      type: user
    createdAt: '2024-01-23T11:53:08.000Z'
    data:
      edited: false
      editors:
      - StephennFernandes
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9171844720840454
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1614429358033-noauth.jpeg?w=200&h=200&f=face
          fullname: 'Stephen Fernandes '
          isHf: false
          isPro: false
          name: StephennFernandes
          type: user
        html: '<p>. i handle concurrent user request by dynamically batching them
          together and inferencing the as a batch.</p>

          <p>However i wanted to know i i could somehow handle new line \n in my input
          string and the translated response retained the new line token somehow (eg:
          \n or any special token).</p>

          <p>Ive tried other alternative solutions like slicing the input string on
          the \n and inferencing these separate pieces as a batch and merging them
          together, but concurrent throughput in my application suffers.</p>

          <p>please let me know incase of a possible solution or a hacky way of how
          i could achieve this</p>

          '
        raw: ". i handle concurrent user request by dynamically batching them together\
          \ and inferencing the as a batch.\r\n\r\nHowever i wanted to know i i could\
          \ somehow handle new line \\n in my input string and the translated response\
          \ retained the new line token somehow (eg: \\n or any special token).\r\n\
          \r\nIve tried other alternative solutions like slicing the input string\
          \ on the \\n and inferencing these separate pieces as a batch and merging\
          \ them together, but concurrent throughput in my application suffers.\r\n\
          \r\nplease let me know incase of a possible solution or a hacky way of how\
          \ i could achieve this"
        updatedAt: '2024-01-23T11:53:08.129Z'
      numEdits: 0
      reactions: []
    id: 65afa8a41216d503274a22bd
    type: comment
  author: StephennFernandes
  content: ". i handle concurrent user request by dynamically batching them together\
    \ and inferencing the as a batch.\r\n\r\nHowever i wanted to know i i could somehow\
    \ handle new line \\n in my input string and the translated response retained\
    \ the new line token somehow (eg: \\n or any special token).\r\n\r\nIve tried\
    \ other alternative solutions like slicing the input string on the \\n and inferencing\
    \ these separate pieces as a batch and merging them together, but concurrent throughput\
    \ in my application suffers.\r\n\r\nplease let me know incase of a possible solution\
    \ or a hacky way of how i could achieve this"
  created_at: 2024-01-23 11:53:08+00:00
  edited: false
  hidden: false
  id: 65afa8a41216d503274a22bd
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 9
repo_id: facebook/nllb-200-3.3B
repo_type: model
status: open
target_branch: null
title: how to handle multi-line string
