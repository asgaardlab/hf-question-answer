!!python/object:huggingface_hub.community.DiscussionWithDetails
author: sergenti
conflicting_files: null
created_at: 2023-02-17 09:18:56+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
      fullname: Filippo Sergenti
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sergenti
      type: user
    createdAt: '2023-02-17T09:18:56.000Z'
    data:
      edited: false
      editors:
      - sergenti
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
          fullname: Filippo Sergenti
          isHf: false
          isPro: false
          name: sergenti
          type: user
        html: '<p>I tried countless python libraries and online converters, and AI
          is the best approach so far.</p>

          <p>I was thinking of applying this model to each page of the PDF to get
          the coordinates of the tables and then passing those to another tool that
          extracts the values. Do you have some ideas on how I should structure the
          pipeline?</p>

          <p>I''m dealing with the following kinds of documents:</p>

          <ul>

          <li>scientific papers</li>

          <li>legal documents</li>

          <li>standard financial documents (10k, 10q, s1, etc)</li>

          <li>confidential documents (reports, transcripts, memorandums)</li>

          </ul>

          '
        raw: "I tried countless python libraries and online converters, and AI is\
          \ the best approach so far.\r\n\r\nI was thinking of applying this model\
          \ to each page of the PDF to get the coordinates of the tables and then\
          \ passing those to another tool that extracts the values. Do you have some\
          \ ideas on how I should structure the pipeline?\r\n\r\nI'm dealing with\
          \ the following kinds of documents:\r\n- scientific papers\r\n- legal documents\r\
          \n- standard financial documents (10k, 10q, s1, etc)\r\n- confidential documents\
          \ (reports, transcripts, memorandums)"
        updatedAt: '2023-02-17T09:18:56.610Z'
      numEdits: 0
      reactions: []
    id: 63ef4680cdd847640246e0c8
    type: comment
  author: sergenti
  content: "I tried countless python libraries and online converters, and AI is the\
    \ best approach so far.\r\n\r\nI was thinking of applying this model to each page\
    \ of the PDF to get the coordinates of the tables and then passing those to another\
    \ tool that extracts the values. Do you have some ideas on how I should structure\
    \ the pipeline?\r\n\r\nI'm dealing with the following kinds of documents:\r\n\
    - scientific papers\r\n- legal documents\r\n- standard financial documents (10k,\
    \ 10q, s1, etc)\r\n- confidential documents (reports, transcripts, memorandums)"
  created_at: 2023-02-17 09:18:56+00:00
  edited: false
  hidden: false
  id: 63ef4680cdd847640246e0c8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2023-02-18T11:43:59.000Z'
    data:
      edited: true
      editors:
      - nielsr
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: '<p>Hi,</p>

          <p>One option you could try is:</p>

          <ol>

          <li>use the Table Transformer to detect tables in documents</li>

          <li>crop those tables out</li>

          <li>feed the table images to a model like <a href="https://huggingface.co/docs/transformers/model_doc/donut">Donut</a>
          or more generally <a href="https://huggingface.co/docs/transformers/model_doc/vision-encoder-decoder">VisionEncoderDecoderModel</a>,
          which is a model that takes an image as input and produces text as output.
          This class can actually learn to generate any text you want from a given
          image, as long as you can train it on (image, text) pairs. Hence you can
          train it to take a table image as input and produce the text in that table,
          potentially in JSON format, as output.</li>

          </ol>

          '
        raw: 'Hi,


          One option you could try is:


          1) use the Table Transformer to detect tables in documents

          2) crop those tables out

          3) feed the table images to a model like [Donut](https://huggingface.co/docs/transformers/model_doc/donut)
          or more generally [VisionEncoderDecoderModel](https://huggingface.co/docs/transformers/model_doc/vision-encoder-decoder),
          which is a model that takes an image as input and produces text as output.
          This class can actually learn to generate any text you want from a given
          image, as long as you can train it on (image, text) pairs. Hence you can
          train it to take a table image as input and produce the text in that table,
          potentially in JSON format, as output.'
        updatedAt: '2023-02-18T11:44:36.504Z'
      numEdits: 1
      reactions: []
    id: 63f0b9ff5b11a9c3ca6e12f5
    type: comment
  author: nielsr
  content: 'Hi,


    One option you could try is:


    1) use the Table Transformer to detect tables in documents

    2) crop those tables out

    3) feed the table images to a model like [Donut](https://huggingface.co/docs/transformers/model_doc/donut)
    or more generally [VisionEncoderDecoderModel](https://huggingface.co/docs/transformers/model_doc/vision-encoder-decoder),
    which is a model that takes an image as input and produces text as output. This
    class can actually learn to generate any text you want from a given image, as
    long as you can train it on (image, text) pairs. Hence you can train it to take
    a table image as input and produce the text in that table, potentially in JSON
    format, as output.'
  created_at: 2023-02-18 11:43:59+00:00
  edited: true
  hidden: false
  id: 63f0b9ff5b11a9c3ca6e12f5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1676656864561-6353f5e112edd0ed5dc0e7e4.jpeg?w=200&h=200&f=face
      fullname: Koopa22345
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Mileena
      type: user
    createdAt: '2023-02-22T20:17:02.000Z'
    data:
      edited: true
      editors: []
      hidden: true
      hiddenBy: ''
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1676656864561-6353f5e112edd0ed5dc0e7e4.jpeg?w=200&h=200&f=face
          fullname: Koopa22345
          isHf: false
          isPro: false
          name: Mileena
          type: user
        html: This comment has been hidden
        raw: This comment has been hidden
        updatedAt: '2023-02-22T20:21:47.346Z'
      numEdits: 0
      reactions: []
    id: 63f6783e8391e36bb35ca162
    type: comment
  author: Mileena
  content: This comment has been hidden
  created_at: 2023-02-22 20:17:02+00:00
  edited: true
  hidden: true
  id: 63f6783e8391e36bb35ca162
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
      fullname: Filippo Sergenti
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sergenti
      type: user
    createdAt: '2023-02-23T19:57:53.000Z'
    data:
      edited: true
      editors:
      - sergenti
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
          fullname: Filippo Sergenti
          isHf: false
          isPro: false
          name: sergenti
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;nielsr&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/nielsr\">@<span class=\"\
          underline\">nielsr</span></a></span>\n\n\t</span></span>, that's a great\
          \ idea; however, for the sake of simplicity, I  plugged in a normal table\
          \ extraction library like <a rel=\"nofollow\" href=\"https://tabula-py.readthedocs.io/\"\
          >https://tabula-py.readthedocs.io/</a> or <a rel=\"nofollow\" href=\"https://camelot-py.readthedocs.io\"\
          >https://camelot-py.readthedocs.io</a>. It's not perfect but does the job.</p>\n\
          <p>Weirdly enough, extracting tables from PDF is a problem so difficult\
          \ nobody has solved it yet, lol.</p>\n<p>I'm sure the ultimate approach\
          \ is AI-based. Do you know if there are any models trained for image-to-CSV\
          \ / image-to-JSON? How would you tackle the training challenge yourself?</p>\n\
          <p>Thanks a lot and have a great day!</p>\n"
        raw: 'Hi @nielsr, that''s a great idea; however, for the sake of simplicity,
          I  plugged in a normal table extraction library like https://tabula-py.readthedocs.io/
          or https://camelot-py.readthedocs.io. It''s not perfect but does the job.


          Weirdly enough, extracting tables from PDF is a problem so difficult nobody
          has solved it yet, lol.


          I''m sure the ultimate approach is AI-based. Do you know if there are any
          models trained for image-to-CSV / image-to-JSON? How would you tackle the
          training challenge yourself?


          Thanks a lot and have a great day!'
        updatedAt: '2023-02-23T19:58:49.261Z'
      numEdits: 1
      reactions: []
    id: 63f7c541ae70dee48030e860
    type: comment
  author: sergenti
  content: 'Hi @nielsr, that''s a great idea; however, for the sake of simplicity,
    I  plugged in a normal table extraction library like https://tabula-py.readthedocs.io/
    or https://camelot-py.readthedocs.io. It''s not perfect but does the job.


    Weirdly enough, extracting tables from PDF is a problem so difficult nobody has
    solved it yet, lol.


    I''m sure the ultimate approach is AI-based. Do you know if there are any models
    trained for image-to-CSV / image-to-JSON? How would you tackle the training challenge
    yourself?


    Thanks a lot and have a great day!'
  created_at: 2023-02-23 19:57:53+00:00
  edited: true
  hidden: false
  id: 63f7c541ae70dee48030e860
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
      fullname: Niels Rogge
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: nielsr
      type: user
    createdAt: '2023-02-24T08:17:41.000Z'
    data:
      edited: true
      editors:
      - nielsr
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608042047613-5f1158120c833276f61f1a84.jpeg?w=200&h=200&f=face
          fullname: Niels Rogge
          isHf: true
          isPro: false
          name: nielsr
          type: user
        html: '<p><a href="https://huggingface.co/docs/transformers/model_doc/donut">Donut</a>
          is the first model trained directly on images to produce JSON as output.
          So one could simply extend this to train on (document images, JSON of the
          table in each document) pairs. I''m pretty sure Google is already doing
          this, but such a model on tables isn''t open-sourced yet.</p>

          '
        raw: '[Donut](https://huggingface.co/docs/transformers/model_doc/donut) is
          the first model trained directly on images to produce JSON as output. So
          one could simply extend this to train on (document images, JSON of the table
          in each document) pairs. I''m pretty sure Google is already doing this,
          but such a model on tables isn''t open-sourced yet.'
        updatedAt: '2023-02-24T08:18:07.422Z'
      numEdits: 1
      reactions: []
    id: 63f872a54a7daa003c9c440e
    type: comment
  author: nielsr
  content: '[Donut](https://huggingface.co/docs/transformers/model_doc/donut) is the
    first model trained directly on images to produce JSON as output. So one could
    simply extend this to train on (document images, JSON of the table in each document)
    pairs. I''m pretty sure Google is already doing this, but such a model on tables
    isn''t open-sourced yet.'
  created_at: 2023-02-24 08:17:41+00:00
  edited: true
  hidden: false
  id: 63f872a54a7daa003c9c440e
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/23bc45d7c52459763c893e545b3faf10.svg
      fullname: Nicole Suter
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nesuter
      type: user
    createdAt: '2023-08-02T19:22:40.000Z'
    data:
      edited: false
      editors:
      - nesuter
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9323678612709045
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/23bc45d7c52459763c893e545b3faf10.svg
          fullname: Nicole Suter
          isHf: false
          isPro: false
          name: nesuter
          type: user
        html: '<p>Any new findings on this topic? Trying to solve this problem myself.
          I have PDFs with text and tables interspersed, and need the text extracted
          with any table structure preserved. Tabula/Camelot/pdfplumber can (sometimes)
          extract the tables, but it''s not accurate enough for my use case.</p>

          '
        raw: Any new findings on this topic? Trying to solve this problem myself.
          I have PDFs with text and tables interspersed, and need the text extracted
          with any table structure preserved. Tabula/Camelot/pdfplumber can (sometimes)
          extract the tables, but it's not accurate enough for my use case.
        updatedAt: '2023-08-02T19:22:40.671Z'
      numEdits: 0
      reactions: []
    id: 64caad00f103036e23a688cb
    type: comment
  author: nesuter
  content: Any new findings on this topic? Trying to solve this problem myself. I
    have PDFs with text and tables interspersed, and need the text extracted with
    any table structure preserved. Tabula/Camelot/pdfplumber can (sometimes) extract
    the tables, but it's not accurate enough for my use case.
  created_at: 2023-08-02 18:22:40+00:00
  edited: false
  hidden: false
  id: 64caad00f103036e23a688cb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
      fullname: Filippo Sergenti
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sergenti
      type: user
    createdAt: '2023-10-10T16:58:31.000Z'
    data:
      edited: false
      editors:
      - sergenti
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.963001549243927
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63ef405fcdd84764024693b9/k367Fa7wYb-QvqJAAjrCw.png?w=200&h=200&f=face
          fullname: Filippo Sergenti
          isHf: false
          isPro: false
          name: sergenti
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;nesuter&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/nesuter\">@<span class=\"\
          underline\">nesuter</span></a></span>\n\n\t</span></span> try Adobe PDF\
          \ Extract API, it's the best API in the market, I didn't find anything similar\
          \ opensource</p>\n"
        raw: '@nesuter try Adobe PDF Extract API, it''s the best API in the market,
          I didn''t find anything similar opensource'
        updatedAt: '2023-10-10T16:58:31.494Z'
      numEdits: 0
      reactions: []
    id: 652582b7721b0f15445fcd93
    type: comment
  author: sergenti
  content: '@nesuter try Adobe PDF Extract API, it''s the best API in the market,
    I didn''t find anything similar opensource'
  created_at: 2023-10-10 15:58:31+00:00
  edited: false
  hidden: false
  id: 652582b7721b0f15445fcd93
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/0bac46e9509b5c7fe1cf43ffd95c3170.svg
      fullname: philip dang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: philip10
      type: user
    createdAt: '2023-11-25T15:44:59.000Z'
    data:
      edited: false
      editors:
      - philip10
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8895978927612305
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/0bac46e9509b5c7fe1cf43ffd95c3170.svg
          fullname: philip dang
          isHf: false
          isPro: false
          name: philip10
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;nesuter&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/nesuter\">@<span class=\"\
          underline\">nesuter</span></a></span>\n\n\t</span></span> you can try unstructured\
          \ library</p>\n"
        raw: '@nesuter you can try unstructured library

          '
        updatedAt: '2023-11-25T15:44:59.222Z'
      numEdits: 0
      reactions: []
    id: 6562167b7065690d7f3b5f63
    type: comment
  author: philip10
  content: '@nesuter you can try unstructured library

    '
  created_at: 2023-11-25 15:44:59+00:00
  edited: false
  hidden: false
  id: 6562167b7065690d7f3b5f63
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: microsoft/table-transformer-detection
repo_type: model
status: open
target_branch: null
title: Could this model be used to directly extract tables from PDFs into CSV files?
