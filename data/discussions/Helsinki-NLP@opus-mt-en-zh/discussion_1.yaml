!!python/object:huggingface_hub.community.DiscussionWithDetails
author: corner
conflicting_files: null
created_at: 2022-06-22 01:08:12+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
      fullname: corner
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: corner
      type: user
    createdAt: '2022-06-22T02:08:12.000Z'
    data:
      edited: false
      editors:
      - corner
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
          fullname: corner
          isHf: false
          isPro: false
          name: corner
          type: user
        html: "<p>I know that original \u201CHelsinki-NLP/opus-mt-en-zh\u201D was\
          \ traned with MarianNMT\uFF0Cbut how to use it  in huggingface project\uFF1F\
          </p>\n"
        raw: "I know that original \u201CHelsinki-NLP/opus-mt-en-zh\u201D was traned\
          \ with MarianNMT\uFF0Cbut how to use it  in huggingface project\uFF1F"
        updatedAt: '2022-06-22T02:08:12.041Z'
      numEdits: 0
      reactions: []
    id: 62b2798caf6f8fa63a10f1f7
    type: comment
  author: corner
  content: "I know that original \u201CHelsinki-NLP/opus-mt-en-zh\u201D was traned\
    \ with MarianNMT\uFF0Cbut how to use it  in huggingface project\uFF1F"
  created_at: 2022-06-22 01:08:12+00:00
  edited: false
  hidden: false
  id: 62b2798caf6f8fa63a10f1f7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
      fullname: Patrick von Platen
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: patrickvonplaten
      type: user
    createdAt: '2022-06-25T17:12:15.000Z'
    data:
      edited: false
      editors:
      - patrickvonplaten
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
          fullname: Patrick von Platen
          isHf: true
          isPro: false
          name: patrickvonplaten
          type: user
        html: "<p>Hey <span data-props=\"{&quot;user&quot;:&quot;corner&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/corner\">@<span class=\"\
          underline\">corner</span></a></span>\n\n\t</span></span>,</p>\n<p>Sorry\
          \ I don't fully understand the question. To use the model you can simply\
          \ follow this code: </p>\n<pre><code class=\"language-python\"><span class=\"\
          hljs-keyword\">from</span> transformers <span class=\"hljs-keyword\">import</span>\
          \ AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(<span\
          \ class=\"hljs-string\">\"Helsinki-NLP/opus-mt-en-zh\"</span>)\n\nmodel\
          \ = AutoModelForSeq2SeqLM.from_pretrained(<span class=\"hljs-string\">\"\
          Helsinki-NLP/opus-mt-en-zh\"</span>)\n</code></pre>\n<p>And the docs here\
          \ <a href=\"https://huggingface.co/docs/transformers/model_doc/marian\"\
          >https://huggingface.co/docs/transformers/model_doc/marian</a></p>\n"
        raw: "Hey @corner,\n\nSorry I don't fully understand the question. To use\
          \ the model you can simply follow this code: \n\n```python\nfrom transformers\
          \ import AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")\n```\n\nAnd the docs here https://huggingface.co/docs/transformers/model_doc/marian"
        updatedAt: '2022-06-25T17:12:15.188Z'
      numEdits: 0
      reactions: []
    id: 62b741efd3296b4d6e88369a
    type: comment
  author: patrickvonplaten
  content: "Hey @corner,\n\nSorry I don't fully understand the question. To use the\
    \ model you can simply follow this code: \n\n```python\nfrom transformers import\
    \ AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"\
    Helsinki-NLP/opus-mt-en-zh\")\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"\
    Helsinki-NLP/opus-mt-en-zh\")\n```\n\nAnd the docs here https://huggingface.co/docs/transformers/model_doc/marian"
  created_at: 2022-06-25 16:12:15+00:00
  edited: false
  hidden: false
  id: 62b741efd3296b4d6e88369a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
      fullname: corner
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: corner
      type: user
    createdAt: '2022-06-26T12:03:02.000Z'
    data:
      edited: false
      editors:
      - corner
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
          fullname: corner
          isHf: false
          isPro: false
          name: corner
          type: user
        html: "<p>Thank you for your reply\uFF0C@patrickvonplaten \uFF1A<br>I mean\
          \ if I train model with marian\uFF0Chow can i use it in huggingface project\uFF0C\
          like \u201CHelsinki-NLP/opus-mt-en-zh\u201D in\uFF1A</p>\n<p>from transformers\
          \ import AutoTokenizer, AutoModelForSeq2SeqLM</p>\n<p>tokenizer = AutoTokenizer.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")</p>\n<p>model = AutoModelForSeq2SeqLM.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")</p>\n"
        raw: "Thank you for your reply\uFF0C@patrickvonplaten \uFF1A\nI mean if I\
          \ train model with marian\uFF0Chow can i use it in huggingface project\uFF0C\
          like \u201CHelsinki-NLP/opus-mt-en-zh\u201D in\uFF1A\n\nfrom transformers\
          \ import AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"\
          Helsinki-NLP/opus-mt-en-zh\")"
        updatedAt: '2022-06-26T12:03:02.903Z'
      numEdits: 0
      reactions: []
    id: 62b84af6320d719127368f00
    type: comment
  author: corner
  content: "Thank you for your reply\uFF0C@patrickvonplaten \uFF1A\nI mean if I train\
    \ model with marian\uFF0Chow can i use it in huggingface project\uFF0Clike \u201C\
    Helsinki-NLP/opus-mt-en-zh\u201D in\uFF1A\n\nfrom transformers import AutoTokenizer,\
    \ AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"Helsinki-NLP/opus-mt-en-zh\"\
    )\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"Helsinki-NLP/opus-mt-en-zh\"\
    )"
  created_at: 2022-06-26 11:03:02+00:00
  edited: false
  hidden: false
  id: 62b84af6320d719127368f00
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6673dc6f9f7affad22755b7e21b9e0af.svg
      fullname: Bo Sui
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: bobosui
      type: user
    createdAt: '2022-06-29T12:41:29.000Z'
    data:
      edited: false
      editors:
      - bobosui
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6673dc6f9f7affad22755b7e21b9e0af.svg
          fullname: Bo Sui
          isHf: false
          isPro: false
          name: bobosui
          type: user
        html: '<p>You may try the code below to convert the model to pytorch.</p>

          <pre><code class="language-python"><span class="hljs-keyword">import</span>
          argparse

          <span class="hljs-keyword">import</span> os

          <span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span>
          Path

          <span class="hljs-keyword">from</span> transformers.models.marian.convert_marian_to_pytorch
          <span class="hljs-keyword">import</span> convert


          argparser = argparse.ArgumentParser(<span class="hljs-string">''Convert
          Marian NMT models to pyTorch''</span>)

          argparser.add_argument(<span class="hljs-string">''--model-path''</span>,
          action=<span class="hljs-string">"store"</span>, required=<span class="hljs-literal">True</span>)

          argparser.add_argument(<span class="hljs-string">''--dest-path''</span>,
          action=<span class="hljs-string">"store"</span>, required=<span class="hljs-literal">True</span>)

          args = argparser.parse_args()


          Path(args.dest_path).mkdir(parents=<span class="hljs-literal">True</span>,
          exist_ok=<span class="hljs-literal">True</span>)

          convert(Path(args.model_path), Path(args.dest_path))

          </code></pre>

          '
        raw: 'You may try the code below to convert the model to pytorch.


          ```python

          import argparse

          import os

          from pathlib import Path

          from transformers.models.marian.convert_marian_to_pytorch import convert


          argparser = argparse.ArgumentParser(''Convert Marian NMT models to pyTorch'')

          argparser.add_argument(''--model-path'', action="store", required=True)

          argparser.add_argument(''--dest-path'', action="store", required=True)

          args = argparser.parse_args()


          Path(args.dest_path).mkdir(parents=True, exist_ok=True)

          convert(Path(args.model_path), Path(args.dest_path))

          ```'
        updatedAt: '2022-06-29T12:41:29.332Z'
      numEdits: 0
      reactions: []
    id: 62bc4879b521f455a0ebb0f5
    type: comment
  author: bobosui
  content: 'You may try the code below to convert the model to pytorch.


    ```python

    import argparse

    import os

    from pathlib import Path

    from transformers.models.marian.convert_marian_to_pytorch import convert


    argparser = argparse.ArgumentParser(''Convert Marian NMT models to pyTorch'')

    argparser.add_argument(''--model-path'', action="store", required=True)

    argparser.add_argument(''--dest-path'', action="store", required=True)

    args = argparser.parse_args()


    Path(args.dest_path).mkdir(parents=True, exist_ok=True)

    convert(Path(args.model_path), Path(args.dest_path))

    ```'
  created_at: 2022-06-29 11:41:29+00:00
  edited: false
  hidden: false
  id: 62bc4879b521f455a0ebb0f5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
      fullname: corner
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: corner
      type: user
    createdAt: '2022-07-01T10:43:30.000Z'
    data:
      edited: false
      editors:
      - corner
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
          fullname: corner
          isHf: false
          isPro: false
          name: corner
          type: user
        html: '<p>THANKS bobosui<br>I''ll try it</p>

          '
        raw: 'THANKS bobosui

          I''ll try it'
        updatedAt: '2022-07-01T10:43:30.949Z'
      numEdits: 0
      reactions: []
    id: 62becfd27b116d65aed65994
    type: comment
  author: corner
  content: 'THANKS bobosui

    I''ll try it'
  created_at: 2022-07-01 09:43:30+00:00
  edited: false
  hidden: false
  id: 62becfd27b116d65aed65994
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
      fullname: corner
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: corner
      type: user
    createdAt: '2022-07-08T10:51:10.000Z'
    data:
      edited: false
      editors:
      - corner
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
          fullname: corner
          isHf: false
          isPro: false
          name: corner
          type: user
        html: '<p>hello,@bobosui<br>Do I have to use sentenceice to train the model?
          How else can I get source spm/target. spm<br>Thx!</p>

          '
        raw: 'hello,@bobosui

          Do I have to use sentenceice to train the model? How else can I get source
          spm/target. spm

          Thx!'
        updatedAt: '2022-07-08T10:51:10.609Z'
      numEdits: 0
      reactions: []
    id: 62c80c1e9c36a239e58e0bbb
    type: comment
  author: corner
  content: 'hello,@bobosui

    Do I have to use sentenceice to train the model? How else can I get source spm/target.
    spm

    Thx!'
  created_at: 2022-07-08 09:51:10+00:00
  edited: false
  hidden: false
  id: 62c80c1e9c36a239e58e0bbb
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/0223584657947ca7393ba46d211d6970.svg
      fullname: "J\xF6rg Tiedemann"
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: tiedeman
      type: user
    createdAt: '2022-07-14T07:00:40.000Z'
    data:
      edited: false
      editors:
      - tiedeman
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/0223584657947ca7393ba46d211d6970.svg
          fullname: "J\xF6rg Tiedemann"
          isHf: false
          isPro: false
          name: tiedeman
          type: user
        html: '<p>Yes, you have to use sentencepiece to get the subword segmentation
          models. You can probably use other subword tokenizers as well but then you
          have to dig into the model conversion code to make the appropriate adjustments.</p>

          '
        raw: Yes, you have to use sentencepiece to get the subword segmentation models.
          You can probably use other subword tokenizers as well but then you have
          to dig into the model conversion code to make the appropriate adjustments.
        updatedAt: '2022-07-14T07:00:40.930Z'
      numEdits: 0
      reactions: []
    id: 62cfbf18c1d35087f5fcfb8c
    type: comment
  author: tiedeman
  content: Yes, you have to use sentencepiece to get the subword segmentation models.
    You can probably use other subword tokenizers as well but then you have to dig
    into the model conversion code to make the appropriate adjustments.
  created_at: 2022-07-14 06:00:40+00:00
  edited: false
  hidden: false
  id: 62cfbf18c1d35087f5fcfb8c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
      fullname: corner
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: corner
      type: user
    createdAt: '2022-07-15T04:05:45.000Z'
    data:
      edited: false
      editors:
      - corner
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d1e67445d86d53ed3fe9fe34c39a5f8.svg
          fullname: corner
          isHf: false
          isPro: false
          name: corner
          type: user
        html: "<p>Thanks to you all\uFF01<br>I have done train with sentencepiece\uFF0C\
          and use convert_marian_to_pytorch.py to pytorch format \uFF0Cthe result\
          \ is not bad\uFF01</p>\n"
        raw: "Thanks to you all\uFF01\nI have done train with sentencepiece\uFF0C\
          and use convert_marian_to_pytorch.py to pytorch format \uFF0Cthe result\
          \ is not bad\uFF01"
        updatedAt: '2022-07-15T04:05:45.386Z'
      numEdits: 0
      reactions: []
    id: 62d0e799df819b6e93d8bce8
    type: comment
  author: corner
  content: "Thanks to you all\uFF01\nI have done train with sentencepiece\uFF0Cand\
    \ use convert_marian_to_pytorch.py to pytorch format \uFF0Cthe result is not bad\uFF01"
  created_at: 2022-07-15 03:05:45+00:00
  edited: false
  hidden: false
  id: 62d0e799df819b6e93d8bce8
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: Helsinki-NLP/opus-mt-en-zh
repo_type: model
status: open
target_branch: null
title: How to convert Marian model format to huggingface
