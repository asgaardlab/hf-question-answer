!!python/object:huggingface_hub.community.DiscussionWithDetails
author: MaxJob
conflicting_files: null
created_at: 2023-08-14 20:32:13+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/647334107ff32a81ac6bc1d1/WtDgP0n4rlJT-Y8UGESNW.jpeg?w=200&h=200&f=face
      fullname: Max Job
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: MaxJob
      type: user
    createdAt: '2023-08-14T21:32:13.000Z'
    data:
      edited: true
      editors:
      - MaxJob
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9334771633148193
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/647334107ff32a81ac6bc1d1/WtDgP0n4rlJT-Y8UGESNW.jpeg?w=200&h=200&f=face
          fullname: Max Job
          isHf: false
          isPro: false
          name: MaxJob
          type: user
        html: '<p>I''ve just produced my very first AI image using ControlNet Canny
          and SDXL 1.0 on my MacBook Pro, using the sample code available on the Model
          card, and I''m already very impressed. Incredible creations coming ahead,
          woohoo!</p>

          '
        raw: I've just produced my very first AI image using ControlNet Canny and
          SDXL 1.0 on my MacBook Pro, using the sample code available on the Model
          card, and I'm already very impressed. Incredible creations coming ahead,
          woohoo!
        updatedAt: '2023-08-15T15:19:08.169Z'
      numEdits: 1
      reactions: []
    id: 64da9d5d70446182be5e035c
    type: comment
  author: MaxJob
  content: I've just produced my very first AI image using ControlNet Canny and SDXL
    1.0 on my MacBook Pro, using the sample code available on the Model card, and
    I'm already very impressed. Incredible creations coming ahead, woohoo!
  created_at: 2023-08-14 20:32:13+00:00
  edited: true
  hidden: false
  id: 64da9d5d70446182be5e035c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/647334107ff32a81ac6bc1d1/WtDgP0n4rlJT-Y8UGESNW.jpeg?w=200&h=200&f=face
      fullname: Max Job
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: MaxJob
      type: user
    createdAt: '2023-08-14T21:36:17.000Z'
    data:
      edited: true
      editors:
      - MaxJob
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8395025730133057
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/647334107ff32a81ac6bc1d1/WtDgP0n4rlJT-Y8UGESNW.jpeg?w=200&h=200&f=face
          fullname: Max Job
          isHf: false
          isPro: false
          name: MaxJob
          type: user
        html: '<p>Here are the couple tweaks you will need to make to the suggested
          Python code, to run the model locally on any Apple Silicon Mac with a sufficient
          amount of RAM (FYI this works great for me on Apple M1 Max with 64 GB RAM,
          but SDXL 1.0 is a no-go (for now) on Apple M1 Pro with only 16 GB RAM.)</p>

          <p>Step 1: Delete the couple utterances of <code>torch_dtype=torch.float16</code>
          in the code; ensure to also delete any redondant comma character<br>Step
          2: Declare the processor to be used (i.e. the Apple Silicon processor) around
          the top of the code, by adding a line with: <code>DEVICE=''mps''</code><br>Step
          3: Delete (or comment out) the following line, since it applies only to
          CUDA-compatible GPU (i.e. not Apple Silicon): <code>pipe.enable_model_cpu_offload()</code><br>Step
          4: Specify that you want to run the code on the <code>DEVICE</code> you
          declared (in step 2) by adding <code>.to(DEVICE)</code> after the closing
          parenthesis of the <code>pipe = </code> definition</p>

          <p>The below code includes all aforementioned modifications. I hope this
          helps, at least those of you who are eager to give this ControlNet (or other)
          a try locally on their Apple Silicon Macs. Enjoy!</p>

          <p>Make sure to first install the libraries: <code>pip install accelerate
          transformers safetensors opencv-python diffusers</code></p>

          <hr>

          <p>from diffusers import ControlNetModel, StableDiffusionXLControlNetPipeline,
          AutoencoderKL<br>from diffusers.utils import load_image<br>from PIL import
          Image<br>import torch<br>import numpy as np<br>import cv2</p>

          <p>DEVICE=''mps''</p>

          <p>prompt = "aerial view, a futuristic research complex in a bright foggy
          jungle, hard lighting"<br>negative_prompt = ''low quality, bad quality,
          sketches''</p>

          <p>image = load_image("<a href="https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd_controlnet/hf-logo.png&quot;">https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd_controlnet/hf-logo.png"</a>)</p>

          <p>controlnet_conditioning_scale = 0.5  # recommended for good generalization</p>

          <p>controlnet = ControlNetModel.from_pretrained(<br>    "diffusers/controlnet-canny-sdxl-1.0"<br>)<br>vae
          = AutoencoderKL.from_pretrained("madebyollin/sdxl-vae-fp16-fix")<br>pipe
          = StableDiffusionXLControlNetPipeline.from_pretrained(<br>    "stabilityai/stable-diffusion-xl-base-1.0",<br>    controlnet=controlnet,<br>    vae=vae,<br>).to(DEVICE)</p>

          <p>image = np.array(image)<br>image = cv2.Canny(image, 100, 200)<br>image
          = image[:, :, None]<br>image = np.concatenate([image, image, image], axis=2)<br>image
          = Image.fromarray(image)</p>

          <p>images = pipe(<br>    prompt, negative_prompt=negative_prompt, image=image,
          controlnet_conditioning_scale=controlnet_conditioning_scale,<br>    ).images</p>

          <p>images[0].save(f"hug_lab.png")</p>

          <hr>

          '
        raw: "Here are the couple tweaks you will need to make to the suggested Python\
          \ code, to run the model locally on any Apple Silicon Mac with a sufficient\
          \ amount of RAM (FYI this works great for me on Apple M1 Max with 64 GB\
          \ RAM, but SDXL 1.0 is a no-go (for now) on Apple M1 Pro with only 16 GB\
          \ RAM.)\n\nStep 1: Delete the couple utterances of `torch_dtype=torch.float16`\
          \ in the code; ensure to also delete any redondant comma character\nStep\
          \ 2: Declare the processor to be used (i.e. the Apple Silicon processor)\
          \ around the top of the code, by adding a line with: `DEVICE='mps'`\nStep\
          \ 3: Delete (or comment out) the following line, since it applies only to\
          \ CUDA-compatible GPU (i.e. not Apple Silicon): `pipe.enable_model_cpu_offload()`\n\
          Step 4: Specify that you want to run the code on the `DEVICE` you declared\
          \ (in step 2) by adding `.to(DEVICE)` after the closing parenthesis of the\
          \ `pipe = ` definition\n\nThe below code includes all aforementioned modifications.\
          \ I hope this helps, at least those of you who are eager to give this ControlNet\
          \ (or other) a try locally on their Apple Silicon Macs. Enjoy!\n\nMake sure\
          \ to first install the libraries: `pip install accelerate transformers safetensors\
          \ opencv-python diffusers`\n\n------\nfrom diffusers import ControlNetModel,\
          \ StableDiffusionXLControlNetPipeline, AutoencoderKL\nfrom diffusers.utils\
          \ import load_image\nfrom PIL import Image\nimport torch\nimport numpy as\
          \ np\nimport cv2\n\nDEVICE='mps'\n\nprompt = \"aerial view, a futuristic\
          \ research complex in a bright foggy jungle, hard lighting\"\nnegative_prompt\
          \ = 'low quality, bad quality, sketches'\n\nimage = load_image(\"https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd_controlnet/hf-logo.png\"\
          )\n\ncontrolnet_conditioning_scale = 0.5  # recommended for good generalization\n\
          \ncontrolnet = ControlNetModel.from_pretrained(\n    \"diffusers/controlnet-canny-sdxl-1.0\"\
          \n)\nvae = AutoencoderKL.from_pretrained(\"madebyollin/sdxl-vae-fp16-fix\"\
          )\npipe = StableDiffusionXLControlNetPipeline.from_pretrained(\n    \"stabilityai/stable-diffusion-xl-base-1.0\"\
          ,\n    controlnet=controlnet,\n    vae=vae,\n).to(DEVICE)\n\nimage = np.array(image)\n\
          image = cv2.Canny(image, 100, 200)\nimage = image[:, :, None]\nimage = np.concatenate([image,\
          \ image, image], axis=2)\nimage = Image.fromarray(image)\n\nimages = pipe(\n\
          \    prompt, negative_prompt=negative_prompt, image=image, controlnet_conditioning_scale=controlnet_conditioning_scale,\n\
          \    ).images\n\nimages[0].save(f\"hug_lab.png\")\n\n-----\n"
        updatedAt: '2023-08-15T16:50:30.260Z'
      numEdits: 5
      reactions:
      - count: 4
        reaction: "\u2764\uFE0F"
        users:
        - patrickvonplaten
        - osanseviero
        - sayakpaul
        - simonguest
    id: 64da9e518da011d656fd9559
    type: comment
  author: MaxJob
  content: "Here are the couple tweaks you will need to make to the suggested Python\
    \ code, to run the model locally on any Apple Silicon Mac with a sufficient amount\
    \ of RAM (FYI this works great for me on Apple M1 Max with 64 GB RAM, but SDXL\
    \ 1.0 is a no-go (for now) on Apple M1 Pro with only 16 GB RAM.)\n\nStep 1: Delete\
    \ the couple utterances of `torch_dtype=torch.float16` in the code; ensure to\
    \ also delete any redondant comma character\nStep 2: Declare the processor to\
    \ be used (i.e. the Apple Silicon processor) around the top of the code, by adding\
    \ a line with: `DEVICE='mps'`\nStep 3: Delete (or comment out) the following line,\
    \ since it applies only to CUDA-compatible GPU (i.e. not Apple Silicon): `pipe.enable_model_cpu_offload()`\n\
    Step 4: Specify that you want to run the code on the `DEVICE` you declared (in\
    \ step 2) by adding `.to(DEVICE)` after the closing parenthesis of the `pipe =\
    \ ` definition\n\nThe below code includes all aforementioned modifications. I\
    \ hope this helps, at least those of you who are eager to give this ControlNet\
    \ (or other) a try locally on their Apple Silicon Macs. Enjoy!\n\nMake sure to\
    \ first install the libraries: `pip install accelerate transformers safetensors\
    \ opencv-python diffusers`\n\n------\nfrom diffusers import ControlNetModel, StableDiffusionXLControlNetPipeline,\
    \ AutoencoderKL\nfrom diffusers.utils import load_image\nfrom PIL import Image\n\
    import torch\nimport numpy as np\nimport cv2\n\nDEVICE='mps'\n\nprompt = \"aerial\
    \ view, a futuristic research complex in a bright foggy jungle, hard lighting\"\
    \nnegative_prompt = 'low quality, bad quality, sketches'\n\nimage = load_image(\"\
    https://huggingface.co/datasets/hf-internal-testing/diffusers-images/resolve/main/sd_controlnet/hf-logo.png\"\
    )\n\ncontrolnet_conditioning_scale = 0.5  # recommended for good generalization\n\
    \ncontrolnet = ControlNetModel.from_pretrained(\n    \"diffusers/controlnet-canny-sdxl-1.0\"\
    \n)\nvae = AutoencoderKL.from_pretrained(\"madebyollin/sdxl-vae-fp16-fix\")\n\
    pipe = StableDiffusionXLControlNetPipeline.from_pretrained(\n    \"stabilityai/stable-diffusion-xl-base-1.0\"\
    ,\n    controlnet=controlnet,\n    vae=vae,\n).to(DEVICE)\n\nimage = np.array(image)\n\
    image = cv2.Canny(image, 100, 200)\nimage = image[:, :, None]\nimage = np.concatenate([image,\
    \ image, image], axis=2)\nimage = Image.fromarray(image)\n\nimages = pipe(\n \
    \   prompt, negative_prompt=negative_prompt, image=image, controlnet_conditioning_scale=controlnet_conditioning_scale,\n\
    \    ).images\n\nimages[0].save(f\"hug_lab.png\")\n\n-----\n"
  created_at: 2023-08-14 20:36:17+00:00
  edited: true
  hidden: false
  id: 64da9e518da011d656fd9559
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
      fullname: Patrick von Platen
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: patrickvonplaten
      type: user
    createdAt: '2023-08-15T13:38:33.000Z'
    data:
      edited: false
      editors:
      - patrickvonplaten
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8674120903015137
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
          fullname: Patrick von Platen
          isHf: true
          isPro: false
          name: patrickvonplaten
          type: user
        html: '<p>This is super useful - thanks a lot!</p>

          '
        raw: This is super useful - thanks a lot!
        updatedAt: '2023-08-15T13:38:33.258Z'
      numEdits: 0
      reactions: []
    id: 64db7fd996f0f217e42e9196
    type: comment
  author: patrickvonplaten
  content: This is super useful - thanks a lot!
  created_at: 2023-08-15 12:38:33+00:00
  edited: false
  hidden: false
  id: 64db7fd996f0f217e42e9196
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/647334107ff32a81ac6bc1d1/WtDgP0n4rlJT-Y8UGESNW.jpeg?w=200&h=200&f=face
      fullname: Max Job
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: MaxJob
      type: user
    createdAt: '2023-08-15T16:20:57.000Z'
    data:
      from: 'FYI: How to run the suggested python code locally on Apple Silicon (tested
        successfully on Apple M1 Max with 64 GB RAM)'
      to: 'FYI: Python code that runs locally on Apple Silicon Macs (tested successfully
        on M1 Max with 64 GB RAM)'
    id: 64dba5e9322a5774e0ae0dc5
    type: title-change
  author: MaxJob
  created_at: 2023-08-15 15:20:57+00:00
  id: 64dba5e9322a5774e0ae0dc5
  new_title: 'FYI: Python code that runs locally on Apple Silicon Macs (tested successfully
    on M1 Max with 64 GB RAM)'
  old_title: 'FYI: How to run the suggested python code locally on Apple Silicon (tested
    successfully on Apple M1 Max with 64 GB RAM)'
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6032802e1f993496bc14d9e3/w6hr-DEQot4VVkoyRIBiy.png?w=200&h=200&f=face
      fullname: Omar Sanseviero
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: osanseviero
      type: user
    createdAt: '2023-08-17T20:22:06.000Z'
    data:
      edited: false
      editors:
      - osanseviero
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9638646841049194
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6032802e1f993496bc14d9e3/w6hr-DEQot4VVkoyRIBiy.png?w=200&h=200&f=face
          fullname: Omar Sanseviero
          isHf: true
          isPro: false
          name: osanseviero
          type: user
        html: '<p>Very very nice!</p>

          '
        raw: Very very nice!
        updatedAt: '2023-08-17T20:22:06.023Z'
      numEdits: 0
      reactions: []
    id: 64de816ed7605441a8b39a4f
    type: comment
  author: osanseviero
  content: Very very nice!
  created_at: 2023-08-17 19:22:06+00:00
  edited: false
  hidden: false
  id: 64de816ed7605441a8b39a4f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649681653581-5f7fbd813e94f16a85448745.jpeg?w=200&h=200&f=face
      fullname: Sayak Paul
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: sayakpaul
      type: user
    createdAt: '2023-08-18T03:21:30.000Z'
    data:
      edited: false
      editors:
      - sayakpaul
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9388623833656311
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1649681653581-5f7fbd813e94f16a85448745.jpeg?w=200&h=200&f=face
          fullname: Sayak Paul
          isHf: true
          isPro: false
          name: sayakpaul
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;MaxJob&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/MaxJob\">@<span class=\"\
          underline\">MaxJob</span></a></span>\n\n\t</span></span> would you like\
          \ to open pull request to this model card, improving the documentation around\
          \ how to run on Apple silicon? </p>\n<p>I think the community will benefit\
          \ from it a lot!</p>\n"
        raw: "@MaxJob would you like to open pull request to this model card, improving\
          \ the documentation around how to run on Apple silicon? \n\nI think the\
          \ community will benefit from it a lot!"
        updatedAt: '2023-08-18T03:21:30.304Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - ameerazam08
    id: 64dee3ba411804d5a0591622
    type: comment
  author: sayakpaul
  content: "@MaxJob would you like to open pull request to this model card, improving\
    \ the documentation around how to run on Apple silicon? \n\nI think the community\
    \ will benefit from it a lot!"
  created_at: 2023-08-18 02:21:30+00:00
  edited: false
  hidden: false
  id: 64dee3ba411804d5a0591622
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d14417002e1582e8f2fca88159e25314.svg
      fullname: Dealay Lomoi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: DealayLomoi
      type: user
    createdAt: '2023-08-25T07:46:02.000Z'
    data:
      edited: false
      editors:
      - DealayLomoi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.94210284948349
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d14417002e1582e8f2fca88159e25314.svg
          fullname: Dealay Lomoi
          isHf: false
          isPro: false
          name: DealayLomoi
          type: user
        html: '<p>It work fine on my M1max32GB as well but the generated images look
          bad... Is that the contronlnet for sdxl not good enough?</p>

          '
        raw: It work fine on my M1max32GB as well but the generated images look bad...
          Is that the contronlnet for sdxl not good enough?
        updatedAt: '2023-08-25T07:46:02.591Z'
      numEdits: 0
      reactions: []
    id: 64e85c3a9c7e43f8a055d781
    type: comment
  author: DealayLomoi
  content: It work fine on my M1max32GB as well but the generated images look bad...
    Is that the contronlnet for sdxl not good enough?
  created_at: 2023-08-25 06:46:02+00:00
  edited: false
  hidden: false
  id: 64e85c3a9c7e43f8a055d781
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 17
repo_id: diffusers/controlnet-canny-sdxl-1.0
repo_type: model
status: open
target_branch: null
title: 'FYI: Python code that runs locally on Apple Silicon Macs (tested successfully
  on M1 Max with 64 GB RAM)'
