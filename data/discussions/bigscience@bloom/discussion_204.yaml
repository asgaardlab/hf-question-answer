!!python/object:huggingface_hub.community.DiscussionWithDetails
author: nicholasKluge
conflicting_files: null
created_at: 2023-03-02 18:15:24+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658964990852-noauth.jpeg?w=200&h=200&f=face
      fullname: "Nicholas Kluge Corr\xEAa"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nicholasKluge
      type: user
    createdAt: '2023-03-02T18:15:24.000Z'
    data:
      edited: false
      editors:
      - nicholasKluge
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658964990852-noauth.jpeg?w=200&h=200&f=face
          fullname: "Nicholas Kluge Corr\xEAa"
          isHf: false
          isPro: false
          name: nicholasKluge
          type: user
        html: "<p>I have been using the Bloom API inference for a while, but recently,\
          \ my code just crashed (and it only crashes with Bloom, other models work\
          \ just fine, like gpt-2 or distillgpt2). Here is my code to reproduce the\
          \ error.</p>\n<pre><code class=\"language-python\"><span class=\"hljs-keyword\"\
          >import</span> json\n<span class=\"hljs-keyword\">import</span> requests\n\
          \nAPI_KEY = &lt;your_api_key_here&gt;\n\n<span class=\"hljs-keyword\">def</span>\
          \ <span class=\"hljs-title function_\">query</span>(<span class=\"hljs-params\"\
          >payload</span>):\n    data = json.dumps(payload)\n    response = requests.request(<span\
          \ class=\"hljs-string\">\"POST\"</span>,\n                             \
          \   <span class=\"hljs-string\">\"https://api-inference.huggingface.co/models/bigscience/bloom\"\
          </span>,\n                                headers={\n                  \
          \                  <span class=\"hljs-string\">\"Authorization\"</span>:\
          \ <span class=\"hljs-string\">f\"Bearer <span class=\"hljs-subst\">{os.environ.get(<span\
          \ class=\"hljs-string\">'API_KEY'</span>)}</span>\"</span>},\n         \
          \                       data=data)\n    <span class=\"hljs-keyword\">return</span>\
          \ json.loads(response.content.decode(<span class=\"hljs-string\">\"utf-8\"\
          </span>)) \n\nresponse = query({<span class=\"hljs-string\">\"inputs\"</span>:\
          \ <span class=\"hljs-string\">'Help me hugging face community!'</span>,\n\
          \             <span class=\"hljs-string\">\"parameters\"</span>: {<span\
          \ class=\"hljs-string\">\"top_k\"</span>: <span class=\"hljs-number\">10</span>,\
          \ <span class=\"hljs-string\">\"temperature\"</span>: <span class=\"hljs-number\"\
          >0.3</span>,\n                            <span class=\"hljs-string\">\"\
          max_new_tokens\"</span>: <span class=\"hljs-number\">250</span>,\n     \
          \                       <span class=\"hljs-string\">\"num_return_sequences\"\
          </span>: <span class=\"hljs-number\">1</span>,\n                       \
          \     <span class=\"hljs-string\">\"repetition_penalty\"</span>: <span class=\"\
          hljs-number\">1.8</span>,\n                            <span class=\"hljs-string\"\
          >'max_time'</span>: <span class=\"hljs-number\">30</span>,\n           \
          \                 <span class=\"hljs-string\">'do_sample'</span>: <span\
          \ class=\"hljs-literal\">True</span>,\n                            <span\
          \ class=\"hljs-string\">'return_full_text'</span>: <span class=\"hljs-literal\"\
          >False</span>},\n             <span class=\"hljs-string\">\"options\"</span>:\
          \ {<span class=\"hljs-string\">'use_cache'</span>: <span class=\"hljs-literal\"\
          >False</span>,\n                         <span class=\"hljs-string\">'wait_for_model'</span>:\
          \ <span class=\"hljs-literal\">True</span>}})\n\n<span class=\"hljs-built_in\"\
          >print</span>(response[<span class=\"hljs-number\">0</span>][<span class=\"\
          hljs-string\">'generated_text'</span>])\n</code></pre>\n<p>My output is\
          \ an error:</p>\n<pre><code class=\"language-bash\">\nJSONDecodeError: Expecting\
          \ value: line 1 column 1 (char 0)\n</code></pre>\n<p>What is wrong with\
          \ my JSON request? It works fine with other models...</p>\n<p>If you can\
          \ help me, thank you in advance!</p>\n"
        raw: "I have been using the Bloom API inference for a while, but recently,\
          \ my code just crashed (and it only crashes with Bloom, other models work\
          \ just fine, like gpt-2 or distillgpt2). Here is my code to reproduce the\
          \ error.\r\n\r\n```python\r\nimport json\r\nimport requests\r\n\r\nAPI_KEY\
          \ = <your_api_key_here>\r\n\r\ndef query(payload):\r\n    data = json.dumps(payload)\r\
          \n    response = requests.request(\"POST\",\r\n                        \
          \        \"https://api-inference.huggingface.co/models/bigscience/bloom\"\
          ,\r\n                                headers={\r\n                     \
          \               \"Authorization\": f\"Bearer {os.environ.get('API_KEY')}\"\
          },\r\n                                data=data)\r\n    return json.loads(response.content.decode(\"\
          utf-8\")) \r\n\r\nresponse = query({\"inputs\": 'Help me hugging face community!',\r\
          \n             \"parameters\": {\"top_k\": 10, \"temperature\": 0.3,\r\n\
          \                            \"max_new_tokens\": 250,\r\n              \
          \              \"num_return_sequences\": 1,\r\n                        \
          \    \"repetition_penalty\": 1.8,\r\n                            'max_time':\
          \ 30,\r\n                            'do_sample': True,\r\n            \
          \                'return_full_text': False},\r\n             \"options\"\
          : {'use_cache': False,\r\n                         'wait_for_model': True}})\r\
          \n\r\nprint(response[0]['generated_text'])\r\n```\r\n\r\nMy output is an\
          \ error:\r\n\r\n```bash\r\n\r\nJSONDecodeError: Expecting value: line 1\
          \ column 1 (char 0)\r\n\r\n```\r\n\r\nWhat is wrong with my JSON request?\
          \ It works fine with other models...\r\n\r\nIf you can help me, thank you\
          \ in advance!"
        updatedAt: '2023-03-02T18:15:24.773Z'
      numEdits: 0
      reactions: []
    id: 6400e7bc2b67d27affcf4106
    type: comment
  author: nicholasKluge
  content: "I have been using the Bloom API inference for a while, but recently, my\
    \ code just crashed (and it only crashes with Bloom, other models work just fine,\
    \ like gpt-2 or distillgpt2). Here is my code to reproduce the error.\r\n\r\n\
    ```python\r\nimport json\r\nimport requests\r\n\r\nAPI_KEY = <your_api_key_here>\r\
    \n\r\ndef query(payload):\r\n    data = json.dumps(payload)\r\n    response =\
    \ requests.request(\"POST\",\r\n                                \"https://api-inference.huggingface.co/models/bigscience/bloom\"\
    ,\r\n                                headers={\r\n                           \
    \         \"Authorization\": f\"Bearer {os.environ.get('API_KEY')}\"},\r\n   \
    \                             data=data)\r\n    return json.loads(response.content.decode(\"\
    utf-8\")) \r\n\r\nresponse = query({\"inputs\": 'Help me hugging face community!',\r\
    \n             \"parameters\": {\"top_k\": 10, \"temperature\": 0.3,\r\n     \
    \                       \"max_new_tokens\": 250,\r\n                         \
    \   \"num_return_sequences\": 1,\r\n                            \"repetition_penalty\"\
    : 1.8,\r\n                            'max_time': 30,\r\n                    \
    \        'do_sample': True,\r\n                            'return_full_text':\
    \ False},\r\n             \"options\": {'use_cache': False,\r\n              \
    \           'wait_for_model': True}})\r\n\r\nprint(response[0]['generated_text'])\r\
    \n```\r\n\r\nMy output is an error:\r\n\r\n```bash\r\n\r\nJSONDecodeError: Expecting\
    \ value: line 1 column 1 (char 0)\r\n\r\n```\r\n\r\nWhat is wrong with my JSON\
    \ request? It works fine with other models...\r\n\r\nIf you can help me, thank\
    \ you in advance!"
  created_at: 2023-03-02 18:15:24+00:00
  edited: false
  hidden: false
  id: 6400e7bc2b67d27affcf4106
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/609bb531a1027a037fdba8a21d6ca586.svg
      fullname: Yasmin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ymoslem
      type: user
    createdAt: '2023-03-02T21:59:41.000Z'
    data:
      edited: true
      editors:
      - ymoslem
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/609bb531a1027a037fdba8a21d6ca586.svg
          fullname: Yasmin
          isHf: false
          isPro: false
          name: ymoslem
          type: user
        html: "<p>Hello! Try this:</p>\n<pre><code class=\"language-python\"><span\
          \ class=\"hljs-keyword\">import</span> requests\n\nAPI_URL = <span class=\"\
          hljs-string\">\"https://api-inference.huggingface.co/models/bigscience/bloom\"\
          </span>\nheaders = {<span class=\"hljs-string\">\"Authorization\"</span>:\
          \ <span class=\"hljs-string\">\"Bearer your_api_key_here\"</span>}\n\n<span\
          \ class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\"\
          >query</span>(<span class=\"hljs-params\">payload</span>):\n    response\
          \ = requests.post(API_URL, headers=headers, json=payload)\n    <span class=\"\
          hljs-keyword\">return</span> response.json()\n    \noutput = query({\n \
          \   <span class=\"hljs-string\">\"inputs\"</span>: <span class=\"hljs-string\"\
          >\"The weather today is\"</span>,\n})\n\n<span class=\"hljs-built_in\">print</span>(output)\n\
          </code></pre>\n"
        raw: "Hello! Try this:\n\n```python\nimport requests\n\nAPI_URL = \"https://api-inference.huggingface.co/models/bigscience/bloom\"\
          \nheaders = {\"Authorization\": \"Bearer your_api_key_here\"}\n\ndef query(payload):\n\
          \tresponse = requests.post(API_URL, headers=headers, json=payload)\n\treturn\
          \ response.json()\n\t\noutput = query({\n\t\"inputs\": \"The weather today\
          \ is\",\n})\n\nprint(output)\n```"
        updatedAt: '2023-03-02T22:03:28.161Z'
      numEdits: 1
      reactions:
      - count: 2
        reaction: "\u2764\uFE0F"
        users:
        - nicholasKluge
        - lilyhoanghg
    id: 64011c4deb72232a53d27472
    type: comment
  author: ymoslem
  content: "Hello! Try this:\n\n```python\nimport requests\n\nAPI_URL = \"https://api-inference.huggingface.co/models/bigscience/bloom\"\
    \nheaders = {\"Authorization\": \"Bearer your_api_key_here\"}\n\ndef query(payload):\n\
    \tresponse = requests.post(API_URL, headers=headers, json=payload)\n\treturn response.json()\n\
    \t\noutput = query({\n\t\"inputs\": \"The weather today is\",\n})\n\nprint(output)\n\
    ```"
  created_at: 2023-03-02 21:59:41+00:00
  edited: true
  hidden: false
  id: 64011c4deb72232a53d27472
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658964990852-noauth.jpeg?w=200&h=200&f=face
      fullname: "Nicholas Kluge Corr\xEAa"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nicholasKluge
      type: user
    createdAt: '2023-03-03T01:26:40.000Z'
    data:
      edited: false
      editors:
      - nicholasKluge
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658964990852-noauth.jpeg?w=200&h=200&f=face
          fullname: "Nicholas Kluge Corr\xEAa"
          isHf: false
          isPro: false
          name: nicholasKluge
          type: user
        html: '<p>Completely solved! Thank for your help ymoslem!</p>

          '
        raw: Completely solved! Thank for your help ymoslem!
        updatedAt: '2023-03-03T01:26:40.960Z'
      numEdits: 0
      reactions: []
    id: 64014cd03e09e3c959fbd160
    type: comment
  author: nicholasKluge
  content: Completely solved! Thank for your help ymoslem!
  created_at: 2023-03-03 01:26:40+00:00
  edited: false
  hidden: false
  id: 64014cd03e09e3c959fbd160
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1646492542174-5e70f6048ce3c604d78fe133.jpeg?w=200&h=200&f=face
      fullname: Christopher Akiki
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: cakiki
      type: user
    createdAt: '2023-03-03T14:08:09.000Z'
    data:
      status: closed
    id: 6401ff499fe2fcff94c9fc3b
    type: status-change
  author: cakiki
  created_at: 2023-03-03 14:08:09+00:00
  id: 6401ff499fe2fcff94c9fc3b
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 204
repo_id: bigscience/bloom
repo_type: model
status: closed
target_branch: null
title: Is Bloom API inference point still working?
