!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Cyrile
conflicting_files: null
created_at: 2023-10-02 04:55:56+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
      fullname: Cyrile Delestre
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Cyrile
      type: user
    createdAt: '2023-10-02T05:55:56.000Z'
    data:
      edited: false
      editors:
      - Cyrile
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9402079582214355
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
          fullname: Cyrile Delestre
          isHf: false
          isPro: false
          name: Cyrile
          type: user
        html: '<p>Hello, why doesn''t the nomenclature of the modules in the Bloom
          and Bloomz models adhere to those created by the BloomPreTrainedModel class:
          base_model_prefix = "transformer"?<br>The issue is that in TGI, which has
          adapted to Bloom modeling, models trained by Transformers do not work because
          the TGI library looks for model names without the "transformer" prefix.</p>

          '
        raw: "Hello, why doesn't the nomenclature of the modules in the Bloom and\
          \ Bloomz models adhere to those created by the BloomPreTrainedModel class:\
          \ base_model_prefix = \"transformer\"?\r\nThe issue is that in TGI, which\
          \ has adapted to Bloom modeling, models trained by Transformers do not work\
          \ because the TGI library looks for model names without the \"transformer\"\
          \ prefix."
        updatedAt: '2023-10-02T05:55:56.387Z'
      numEdits: 0
      reactions: []
    id: 651a5b6cee8c603b706d74d5
    type: comment
  author: Cyrile
  content: "Hello, why doesn't the nomenclature of the modules in the Bloom and Bloomz\
    \ models adhere to those created by the BloomPreTrainedModel class: base_model_prefix\
    \ = \"transformer\"?\r\nThe issue is that in TGI, which has adapted to Bloom modeling,\
    \ models trained by Transformers do not work because the TGI library looks for\
    \ model names without the \"transformer\" prefix."
  created_at: 2023-10-02 04:55:56+00:00
  edited: false
  hidden: false
  id: 651a5b6cee8c603b706d74d5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1618450692745-5e3aec01f55e2b62848a5217.jpeg?w=200&h=200&f=face
      fullname: Lysandre
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: lysandre
      type: user
    createdAt: '2023-10-02T07:12:27.000Z'
    data:
      edited: false
      editors:
      - lysandre
      hidden: false
      identifiedLanguage:
        language: fr
        probability: 0.24416381120681763
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1618450692745-5e3aec01f55e2b62848a5217.jpeg?w=200&h=200&f=face
          fullname: Lysandre
          isHf: true
          isPro: false
          name: lysandre
          type: user
        html: "<p>WDYT <span data-props=\"{&quot;user&quot;:&quot;Narsil&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/Narsil\"\
          >@<span class=\"underline\">Narsil</span></a></span>\n\n\t</span></span>\
          \ ?</p>\n"
        raw: WDYT @Narsil ?
        updatedAt: '2023-10-02T07:12:27.800Z'
      numEdits: 0
      reactions: []
    id: 651a6d5bce732bf33a773a92
    type: comment
  author: lysandre
  content: WDYT @Narsil ?
  created_at: 2023-10-02 06:12:27+00:00
  edited: false
  hidden: false
  id: 651a6d5bce732bf33a773a92
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d8ab3bf5eb8e10fbbabff732a354dfb.svg
      fullname: Nolwenn O
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: NolwennO
      type: user
    createdAt: '2023-10-02T07:34:28.000Z'
    data:
      edited: false
      editors:
      - NolwennO
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7217327356338501
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d8ab3bf5eb8e10fbbabff732a354dfb.svg
          fullname: Nolwenn O
          isHf: false
          isPro: false
          name: NolwennO
          type: user
        html: '<p>FYI, here is the related issue description <a rel="nofollow" href="https://github.com/huggingface/text-generation-inference/issues/541#issuecomment-1740913948">https://github.com/huggingface/text-generation-inference/issues/541#issuecomment-1740913948</a></p>

          '
        raw: 'FYI, here is the related issue description https://github.com/huggingface/text-generation-inference/issues/541#issuecomment-1740913948

          '
        updatedAt: '2023-10-02T07:34:28.365Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - Cyrile
    id: 651a72842d69a6fd7e39193a
    type: comment
  author: NolwennO
  content: 'FYI, here is the related issue description https://github.com/huggingface/text-generation-inference/issues/541#issuecomment-1740913948

    '
  created_at: 2023-10-02 06:34:28+00:00
  edited: false
  hidden: false
  id: 651a72842d69a6fd7e39193a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608285816082-5e2967b819407e3277369b95.png?w=200&h=200&f=face
      fullname: Nicolas Patry
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Narsil
      type: user
    createdAt: '2023-10-03T08:58:31.000Z'
    data:
      edited: false
      editors:
      - Narsil
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9453772306442261
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608285816082-5e2967b819407e3277369b95.png?w=200&h=200&f=face
          fullname: Nicolas Patry
          isHf: true
          isPro: false
          name: Narsil
          type: user
        html: '<p>Well those foundation model work.</p>

          <p>If loading the model and saving it back in transformers changes it that''s
          an issue IMO.</p>

          <p>We can make something for TGI but this feels like legacy support, would
          you agree ?</p>

          '
        raw: 'Well those foundation model work.


          If loading the model and saving it back in transformers changes it that''s
          an issue IMO.


          We can make something for TGI but this feels like legacy support, would
          you agree ?'
        updatedAt: '2023-10-03T08:58:31.205Z'
      numEdits: 0
      reactions: []
    id: 651bd7b78010d2458e1de040
    type: comment
  author: Narsil
  content: 'Well those foundation model work.


    If loading the model and saving it back in transformers changes it that''s an
    issue IMO.


    We can make something for TGI but this feels like legacy support, would you agree
    ?'
  created_at: 2023-10-03 07:58:31+00:00
  edited: false
  hidden: false
  id: 651bd7b78010d2458e1de040
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608285816082-5e2967b819407e3277369b95.png?w=200&h=200&f=face
      fullname: Nicolas Patry
      isHf: true
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Narsil
      type: user
    createdAt: '2023-10-03T09:09:47.000Z'
    data:
      edited: false
      editors:
      - Narsil
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6885347366333008
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1608285816082-5e2967b819407e3277369b95.png?w=200&h=200&f=face
          fullname: Nicolas Patry
          isHf: true
          isPro: false
          name: Narsil
          type: user
        html: '<p>This should fix it: <a rel="nofollow" href="https://github.com/huggingface/text-generation-inference/pull/1090">https://github.com/huggingface/text-generation-inference/pull/1090</a></p>

          '
        raw: 'This should fix it: https://github.com/huggingface/text-generation-inference/pull/1090'
        updatedAt: '2023-10-03T09:09:47.365Z'
      numEdits: 0
      reactions: []
    id: 651bda5b650b79ca1360c61a
    type: comment
  author: Narsil
  content: 'This should fix it: https://github.com/huggingface/text-generation-inference/pull/1090'
  created_at: 2023-10-03 08:09:47+00:00
  edited: false
  hidden: false
  id: 651bda5b650b79ca1360c61a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
      fullname: Cyrile Delestre
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Cyrile
      type: user
    createdAt: '2023-10-04T13:45:32.000Z'
    data:
      edited: true
      editors:
      - Cyrile
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9403152465820312
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
          fullname: Cyrile Delestre
          isHf: false
          isPro: false
          name: Cyrile
          type: user
        html: '<p>Hi Narsil,<br>I agree that the issue seems to be more related to
          the naming of modules in the foundation models rather than a TGI problem.
          What I find strange is that the planned prefix in the code is "transformer.[PyTorch
          module name]," but in the foundation model, this prefix is absent.<br>If
          I refer to the BERT model, for example, there is the prefix "bert.[etc]"
          on the module names, as stipulated in the code: base_model_prefix = "bert".</p>

          '
        raw: 'Hi Narsil,

          I agree that the issue seems to be more related to the naming of modules
          in the foundation models rather than a TGI problem. What I find strange
          is that the planned prefix in the code is "transformer.[PyTorch module name],"
          but in the foundation model, this prefix is absent.

          If I refer to the BERT model, for example, there is the prefix "bert.[etc]"
          on the module names, as stipulated in the code: base_model_prefix = "bert".'
        updatedAt: '2023-10-04T13:59:54.479Z'
      numEdits: 2
      reactions: []
    id: 651d6c7ca9afacbd050d139c
    type: comment
  author: Cyrile
  content: 'Hi Narsil,

    I agree that the issue seems to be more related to the naming of modules in the
    foundation models rather than a TGI problem. What I find strange is that the planned
    prefix in the code is "transformer.[PyTorch module name]," but in the foundation
    model, this prefix is absent.

    If I refer to the BERT model, for example, there is the prefix "bert.[etc]" on
    the module names, as stipulated in the code: base_model_prefix = "bert".'
  created_at: 2023-10-04 12:45:32+00:00
  edited: true
  hidden: false
  id: 651d6c7ca9afacbd050d139c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
      fullname: Cyrile Delestre
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Cyrile
      type: user
    createdAt: '2023-10-04T14:02:09.000Z'
    data:
      edited: false
      editors:
      - Cyrile
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9086240530014038
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1634332912347-noauth.png?w=200&h=200&f=face
          fullname: Cyrile Delestre
          isHf: false
          isPro: false
          name: Cyrile
          type: user
        html: '<p>Indeed, allowing flexibility in TGI to let the user define the prefix
          would be a more robust solution.</p>

          '
        raw: Indeed, allowing flexibility in TGI to let the user define the prefix
          would be a more robust solution.
        updatedAt: '2023-10-04T14:02:09.327Z'
      numEdits: 0
      reactions: []
    id: 651d7061fe1944c73475dff0
    type: comment
  author: Cyrile
  content: Indeed, allowing flexibility in TGI to let the user define the prefix would
    be a more robust solution.
  created_at: 2023-10-04 13:02:09+00:00
  edited: false
  hidden: false
  id: 651d7061fe1944c73475dff0
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 265
repo_id: bigscience/bloom
repo_type: model
status: open
target_branch: null
title: base_model_prefix = "transformer"
