!!python/object:huggingface_hub.community.DiscussionWithDetails
author: AFRF
conflicting_files: null
created_at: 2023-11-29 21:22:12+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/b1479975278b0542e2335c2b92ca8a02.svg
      fullname: Andres Ramos
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AFRF
      type: user
    createdAt: '2023-11-29T21:22:12.000Z'
    data:
      edited: false
      editors:
      - AFRF
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9414028525352478
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/b1479975278b0542e2335c2b92ca8a02.svg
          fullname: Andres Ramos
          isHf: false
          isPro: false
          name: AFRF
          type: user
        html: '<p>Hi all, I''ve been working on image-image search tasks and fashionCLIP
          has work really well for me, currently I want to take the performance of
          my approach further and I was thinking in fine tuning the fashionCLIP model
          for this task. For this, I''m just generating the embeddings of the images,
          store them in a vector index and the just computing the cosine similarity
          between the embedding of my search image and all the embeddings in the vector
          index. Im not really using any zero-shot application or image-text comparison
          and I''ve seen all the fine-tuning approaches for CLIP models I read use
          text-image pairs for the fine tuning, I don''t understand how I should fine
          tune the model to increase the performance of my application, should I use
          text-image pairs? Or should I only fine tune the visual encoder of the model,
          and if thats the case anyone has some examples of how can i do it? </p>

          '
        raw: 'Hi all, I''ve been working on image-image search tasks and fashionCLIP
          has work really well for me, currently I want to take the performance of
          my approach further and I was thinking in fine tuning the fashionCLIP model
          for this task. For this, I''m just generating the embeddings of the images,
          store them in a vector index and the just computing the cosine similarity
          between the embedding of my search image and all the embeddings in the vector
          index. Im not really using any zero-shot application or image-text comparison
          and I''ve seen all the fine-tuning approaches for CLIP models I read use
          text-image pairs for the fine tuning, I don''t understand how I should fine
          tune the model to increase the performance of my application, should I use
          text-image pairs? Or should I only fine tune the visual encoder of the model,
          and if thats the case anyone has some examples of how can i do it? '
        updatedAt: '2023-11-29T21:22:12.205Z'
      numEdits: 0
      reactions: []
    id: 6567ab84bed5f64bbf6f49f1
    type: comment
  author: AFRF
  content: 'Hi all, I''ve been working on image-image search tasks and fashionCLIP
    has work really well for me, currently I want to take the performance of my approach
    further and I was thinking in fine tuning the fashionCLIP model for this task.
    For this, I''m just generating the embeddings of the images, store them in a vector
    index and the just computing the cosine similarity between the embedding of my
    search image and all the embeddings in the vector index. Im not really using any
    zero-shot application or image-text comparison and I''ve seen all the fine-tuning
    approaches for CLIP models I read use text-image pairs for the fine tuning, I
    don''t understand how I should fine tune the model to increase the performance
    of my application, should I use text-image pairs? Or should I only fine tune the
    visual encoder of the model, and if thats the case anyone has some examples of
    how can i do it? '
  created_at: 2023-11-29 21:22:12+00:00
  edited: false
  hidden: false
  id: 6567ab84bed5f64bbf6f49f1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/5e2c87cad39f4ed1c0446d69f51f318b.svg
      fullname: Jamie Liang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: jamie0725
      type: user
    createdAt: '2023-12-05T06:42:40.000Z'
    data:
      edited: false
      editors:
      - jamie0725
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.957282543182373
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/5e2c87cad39f4ed1c0446d69f51f318b.svg
          fullname: Jamie Liang
          isHf: false
          isPro: false
          name: jamie0725
          type: user
        html: '<p>if you are only doing image search, why don''t you just use image
          transformer models without text encoders?</p>

          '
        raw: if you are only doing image search, why don't you just use image transformer
          models without text encoders?
        updatedAt: '2023-12-05T06:42:40.456Z'
      numEdits: 0
      reactions: []
    id: 656ec660a00ad2dc33f7fa87
    type: comment
  author: jamie0725
  content: if you are only doing image search, why don't you just use image transformer
    models without text encoders?
  created_at: 2023-12-05 06:42:40+00:00
  edited: false
  hidden: false
  id: 656ec660a00ad2dc33f7fa87
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 13
repo_id: patrickjohncyh/fashion-clip
repo_type: model
status: open
target_branch: null
title: Fine Tuning fashionCLIP for image-image search
