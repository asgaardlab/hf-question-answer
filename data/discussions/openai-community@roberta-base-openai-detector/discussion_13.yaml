!!python/object:huggingface_hub.community.DiscussionWithDetails
author: zokica
conflicting_files: null
created_at: 2023-04-28 20:00:25+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
      fullname: Zoran
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: zokica
      type: user
    createdAt: '2023-04-28T21:00:25.000Z'
    data:
      edited: true
      editors: []
      hidden: true
      hiddenBy: ''
      latest:
        author:
          avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
          fullname: Zoran
          isHf: false
          isPro: false
          name: zokica
          type: user
        html: This comment has been hidden
        raw: This comment has been hidden
        updatedAt: '2023-04-28T21:31:11.216Z'
      numEdits: 0
      reactions: []
    id: 644c33e9f30d4ab8ea106279
    type: comment
  author: zokica
  content: This comment has been hidden
  created_at: 2023-04-28 20:00:25+00:00
  edited: true
  hidden: true
  id: 644c33e9f30d4ab8ea106279
  type: comment
- !!python/object:huggingface_hub.community.DiscussionTitleChange
  _event:
    author:
      avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
      fullname: Zoran
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: zokica
      type: user
    createdAt: '2023-04-28T21:31:54.000Z'
    data:
      from: Output of this is random
      to: How to run this?
    id: 644c3b4a194e124dacc048ea
    type: title-change
  author: zokica
  created_at: 2023-04-28 20:31:54+00:00
  id: 644c3b4a194e124dacc048ea
  new_title: How to run this?
  old_title: Output of this is random
  type: title-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
      fullname: Zoran
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: zokica
      type: user
    createdAt: '2023-04-28T21:33:18.000Z'
    data:
      edited: true
      editors:
      - zokica
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
          fullname: Zoran
          isHf: false
          isPro: false
          name: zokica
          type: user
        html: '<p>I do not understand why there is not single example of how to run
          it?</p>

          <p>If this is an open ai detector, obviously people want to be able to detect
          it, and there is not even single code example here to tell people how to
          do so.</p>

          '
        raw: 'I do not understand why there is not single example of how to run it?


          If this is an open ai detector, obviously people want to be able to detect
          it, and there is not even single code example here to tell people how to
          do so.'
        updatedAt: '2023-04-28T21:35:06.308Z'
      numEdits: 1
      reactions: []
    id: 644c3b9e194e124dacc050e1
    type: comment
  author: zokica
  content: 'I do not understand why there is not single example of how to run it?


    If this is an open ai detector, obviously people want to be able to detect it,
    and there is not even single code example here to tell people how to do so.'
  created_at: 2023-04-28 20:33:18+00:00
  edited: true
  hidden: false
  id: 644c3b9e194e124dacc050e1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647889744246-61e6a54836fa261c76dc3760.jpeg?w=200&h=200&f=face
      fullname: Nima Boscarino
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: NimaBoscarino
      type: user
    createdAt: '2023-04-30T22:39:17.000Z'
    data:
      edited: true
      editors:
      - NimaBoscarino
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1647889744246-61e6a54836fa261c76dc3760.jpeg?w=200&h=200&f=face
          fullname: Nima Boscarino
          isHf: false
          isPro: false
          name: NimaBoscarino
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;zokica&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/zokica\">@<span class=\"\
          underline\">zokica</span></a></span>\n\n\t</span></span>! The easiest way\
          \ to run the model is to use the Transformers <code>pipeline</code> method,\
          \ like the following (once you <code>pip install transformers</code> and\
          \ have PyTorch installed:</p>\n<pre><code class=\"language-python\"><span\
          \ class=\"hljs-keyword\">from</span> transformers <span class=\"hljs-keyword\"\
          >import</span> pipeline\npipe = pipeline(<span class=\"hljs-string\">\"\
          text-classification\"</span>, model=<span class=\"hljs-string\">\"roberta-base-openai-detector\"\
          </span>)\n<span class=\"hljs-built_in\">print</span>(pipe(<span class=\"\
          hljs-string\">\"Hello world! Is this content AI-generated?\"</span>))  <span\
          \ class=\"hljs-comment\"># [{'label': 'Real', 'score': 0.8036582469940186}]</span>\n\
          </code></pre>\n<p>I'll add this to the model card!</p>\n<p>Also, since it's\
          \ a RoBERTa model, I think you should be able to run it with a code snippet\
          \ like the one on this page: <a href=\"https://huggingface.co/docs/transformers/main/en/model_doc/roberta#transformers.RobertaForSequenceClassification.forward.example\"\
          >https://huggingface.co/docs/transformers/main/en/model_doc/roberta#transformers.RobertaForSequenceClassification.forward.example</a></p>\n\
          <p>You'll just have to swap out the model ID, so it should look like:</p>\n\
          <pre><code class=\"language-python\"><span class=\"hljs-keyword\">import</span>\
          \ torch\n<span class=\"hljs-keyword\">from</span> transformers <span class=\"\
          hljs-keyword\">import</span> AutoTokenizer, RobertaForSequenceClassification\n\
          \ntokenizer = AutoTokenizer.from_pretrained(<span class=\"hljs-string\"\
          >\"roberta-base-openai-detector\"</span>)\nmodel = RobertaForSequenceClassification.from_pretrained(<span\
          \ class=\"hljs-string\">\"roberta-base-openai-detector\"</span>)\n\ninputs\
          \ = tokenizer(<span class=\"hljs-string\">\"Hello, my dog is cute\"</span>,\
          \ return_tensors=<span class=\"hljs-string\">\"pt\"</span>)\n\n<span class=\"\
          hljs-keyword\">with</span> torch.no_grad():\n    logits = model(**inputs).logits\n\
          \npredicted_class_id = logits.argmax().item()\nmodel.config.id2label[predicted_class_id]\n\
          \n<span class=\"hljs-comment\"># To train a model on `num_labels` classes,\
          \ you can pass `num_labels=num_labels` to `.from_pretrained(...)`</span>\n\
          num_labels = <span class=\"hljs-built_in\">len</span>(model.config.id2label)\n\
          model = RobertaForSequenceClassification.from_pretrained(<span class=\"\
          hljs-string\">\"roberta-base-openai-detector\"</span>, num_labels=num_labels)\n\
          \nlabels = torch.tensor([<span class=\"hljs-number\">1</span>])\nloss =\
          \ model(**inputs, labels=labels).loss\n<span class=\"hljs-built_in\">round</span>(loss.item(),\
          \ <span class=\"hljs-number\">2</span>)\n</code></pre>\n"
        raw: "Hi @zokica! The easiest way to run the model is to use the Transformers\
          \ `pipeline` method, like the following (once you `pip install transformers`\
          \ and have PyTorch installed:\n\n```python\nfrom transformers import pipeline\n\
          pipe = pipeline(\"text-classification\", model=\"roberta-base-openai-detector\"\
          )\nprint(pipe(\"Hello world! Is this content AI-generated?\"))  # [{'label':\
          \ 'Real', 'score': 0.8036582469940186}]\n```\n\nI'll add this to the model\
          \ card!\n\nAlso, since it's a RoBERTa model, I think you should be able\
          \ to run it with a code snippet like the one on this page: https://huggingface.co/docs/transformers/main/en/model_doc/roberta#transformers.RobertaForSequenceClassification.forward.example\n\
          \nYou'll just have to swap out the model ID, so it should look like:\n\n\
          ```python\nimport torch\nfrom transformers import AutoTokenizer, RobertaForSequenceClassification\n\
          \ntokenizer = AutoTokenizer.from_pretrained(\"roberta-base-openai-detector\"\
          )\nmodel = RobertaForSequenceClassification.from_pretrained(\"roberta-base-openai-detector\"\
          )\n\ninputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"pt\"\
          )\n\nwith torch.no_grad():\n    logits = model(**inputs).logits\n\npredicted_class_id\
          \ = logits.argmax().item()\nmodel.config.id2label[predicted_class_id]\n\n\
          # To train a model on `num_labels` classes, you can pass `num_labels=num_labels`\
          \ to `.from_pretrained(...)`\nnum_labels = len(model.config.id2label)\n\
          model = RobertaForSequenceClassification.from_pretrained(\"roberta-base-openai-detector\"\
          , num_labels=num_labels)\n\nlabels = torch.tensor([1])\nloss = model(**inputs,\
          \ labels=labels).loss\nround(loss.item(), 2)\n```"
        updatedAt: '2023-04-30T22:39:51.010Z'
      numEdits: 1
      reactions: []
    id: 644eee15ddf20748b06138d3
    type: comment
  author: NimaBoscarino
  content: "Hi @zokica! The easiest way to run the model is to use the Transformers\
    \ `pipeline` method, like the following (once you `pip install transformers` and\
    \ have PyTorch installed:\n\n```python\nfrom transformers import pipeline\npipe\
    \ = pipeline(\"text-classification\", model=\"roberta-base-openai-detector\")\n\
    print(pipe(\"Hello world! Is this content AI-generated?\"))  # [{'label': 'Real',\
    \ 'score': 0.8036582469940186}]\n```\n\nI'll add this to the model card!\n\nAlso,\
    \ since it's a RoBERTa model, I think you should be able to run it with a code\
    \ snippet like the one on this page: https://huggingface.co/docs/transformers/main/en/model_doc/roberta#transformers.RobertaForSequenceClassification.forward.example\n\
    \nYou'll just have to swap out the model ID, so it should look like:\n\n```python\n\
    import torch\nfrom transformers import AutoTokenizer, RobertaForSequenceClassification\n\
    \ntokenizer = AutoTokenizer.from_pretrained(\"roberta-base-openai-detector\")\n\
    model = RobertaForSequenceClassification.from_pretrained(\"roberta-base-openai-detector\"\
    )\n\ninputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"pt\")\n\n\
    with torch.no_grad():\n    logits = model(**inputs).logits\n\npredicted_class_id\
    \ = logits.argmax().item()\nmodel.config.id2label[predicted_class_id]\n\n# To\
    \ train a model on `num_labels` classes, you can pass `num_labels=num_labels`\
    \ to `.from_pretrained(...)`\nnum_labels = len(model.config.id2label)\nmodel =\
    \ RobertaForSequenceClassification.from_pretrained(\"roberta-base-openai-detector\"\
    , num_labels=num_labels)\n\nlabels = torch.tensor([1])\nloss = model(**inputs,\
    \ labels=labels).loss\nround(loss.item(), 2)\n```"
  created_at: 2023-04-30 21:39:17+00:00
  edited: true
  hidden: false
  id: 644eee15ddf20748b06138d3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
      fullname: Zoran
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: zokica
      type: user
    createdAt: '2023-05-03T18:34:54.000Z'
    data:
      edited: false
      editors:
      - zokica
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/821999165e9e61b42c7f989404f5ffdf.svg
          fullname: Zoran
          isHf: false
          isPro: false
          name: zokica
          type: user
        html: '<p>Awesome, thanks.</p>

          '
        raw: Awesome, thanks.
        updatedAt: '2023-05-03T18:34:54.634Z'
      numEdits: 0
      reactions: []
    id: 6452a94e8fe6558e32807f4b
    type: comment
  author: zokica
  content: Awesome, thanks.
  created_at: 2023-05-03 17:34:54+00:00
  edited: false
  hidden: false
  id: 6452a94e8fe6558e32807f4b
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 13
repo_id: openai-community/roberta-base-openai-detector
repo_type: model
status: open
target_branch: null
title: How to run this?
