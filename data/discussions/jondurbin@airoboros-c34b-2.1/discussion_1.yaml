!!python/object:huggingface_hub.community.DiscussionWithDetails
author: ronenzyroff
conflicting_files: null
created_at: 2023-08-26 16:26:13+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
      fullname: Ronen Zyroff
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ronenzyroff
      type: user
    createdAt: '2023-08-26T17:26:13.000Z'
    data:
      edited: false
      editors:
      - ronenzyroff
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.951835572719574
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
          fullname: Ronen Zyroff
          isHf: false
          isPro: false
          name: ronenzyroff
          type: user
        html: '<p>airoboros has a long history of really good models. I wonder if
          there''s finally a competitor to ChatGPT for coding tasks.</p>

          '
        raw: airoboros has a long history of really good models. I wonder if there's
          finally a competitor to ChatGPT for coding tasks.
        updatedAt: '2023-08-26T17:26:13.564Z'
      numEdits: 0
      reactions: []
    id: 64ea35b5925565abda06027d
    type: comment
  author: ronenzyroff
  content: airoboros has a long history of really good models. I wonder if there's
    finally a competitor to ChatGPT for coding tasks.
  created_at: 2023-08-26 16:26:13+00:00
  edited: false
  hidden: false
  id: 64ea35b5925565abda06027d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6453dafca647b92069ac541a/QkUleoJtHHdTkqtW54QIG.jpeg?w=200&h=200&f=face
      fullname: Jon Durbin
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: true
      name: jondurbin
      type: user
    createdAt: '2023-08-26T17:28:45.000Z'
    data:
      edited: false
      editors:
      - jondurbin
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9880905151367188
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/6453dafca647b92069ac541a/QkUleoJtHHdTkqtW54QIG.jpeg?w=200&h=200&f=face
          fullname: Jon Durbin
          isHf: false
          isPro: true
          name: jondurbin
          type: user
        html: '<p>To be honest, I haven''t tested this at all yet - I made it available
          as soon as the merge finished in case anyone wanted to experiment before
          I did any analysis.</p>

          '
        raw: To be honest, I haven't tested this at all yet - I made it available
          as soon as the merge finished in case anyone wanted to experiment before
          I did any analysis.
        updatedAt: '2023-08-26T17:28:45.913Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F44D"
        users:
        - ronenzyroff
        - Erilaz
    id: 64ea364db8c49e360dcc1d7d
    type: comment
  author: jondurbin
  content: To be honest, I haven't tested this at all yet - I made it available as
    soon as the merge finished in case anyone wanted to experiment before I did any
    analysis.
  created_at: 2023-08-26 16:28:45+00:00
  edited: false
  hidden: false
  id: 64ea364db8c49e360dcc1d7d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/TKk0SYTJxvCYG3tZPpTQt.jpeg?w=200&h=200&f=face
      fullname: Sabin Stargem
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: SabinStargem
      type: user
    createdAt: '2023-08-26T18:05:01.000Z'
    data:
      edited: false
      editors:
      - SabinStargem
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9760351181030273
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/TKk0SYTJxvCYG3tZPpTQt.jpeg?w=200&h=200&f=face
          fullname: Sabin Stargem
          isHf: false
          isPro: false
          name: SabinStargem
          type: user
        html: '<p>I am hoping for a GGUF.   Samantha 1.11 c34b has nice writing, so
          I am having high hopes for the Airo flavor.   The strong point of prior
          Airoboros is how they can understand the implications of what I was writing,  a
          quality that I haven''t really seen in other models.</p>

          '
        raw: I am hoping for a GGUF.   Samantha 1.11 c34b has nice writing, so I am
          having high hopes for the Airo flavor.   The strong point of prior Airoboros
          is how they can understand the implications of what I was writing,  a quality
          that I haven't really seen in other models.
        updatedAt: '2023-08-26T18:05:01.127Z'
      numEdits: 0
      reactions: []
    id: 64ea3ecd1dce571e85526f59
    type: comment
  author: SabinStargem
  content: I am hoping for a GGUF.   Samantha 1.11 c34b has nice writing, so I am
    having high hopes for the Airo flavor.   The strong point of prior Airoboros is
    how they can understand the implications of what I was writing,  a quality that
    I haven't really seen in other models.
  created_at: 2023-08-26 17:05:01+00:00
  edited: false
  hidden: false
  id: 64ea3ecd1dce571e85526f59
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
      fullname: Ronen Zyroff
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ronenzyroff
      type: user
    createdAt: '2023-08-26T18:17:27.000Z'
    data:
      edited: false
      editors:
      - ronenzyroff
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8889880776405334
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
          fullname: Ronen Zyroff
          isHf: false
          isPro: false
          name: ronenzyroff
          type: user
        html: "<blockquote>\n<p>I am hoping for a GGUF.   Samantha 1.11 c34b has nice\
          \ writing, so I am having high hopes for the Airo flavor.   The strong point\
          \ of prior Airoboros is how they can understand the implications of what\
          \ I was writing,  a quality that I haven't really seen in other models.</p>\n\
          </blockquote>\n<p>Yes! <span data-props=\"{&quot;user&quot;:&quot;TheBloke&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/TheBloke\"\
          >@<span class=\"underline\">TheBloke</span></a></span>\n\n\t</span></span>\
          \ please convert this model to GGUF format!<br>If WizardCoder is this good\
          \ <a href=\"https://huggingface.co/TheBloke/WizardCoder-Python-34B-V1.0-GGUF/discussions/1#64ea40adde393e513c427c5b\"\
          >https://huggingface.co/TheBloke/WizardCoder-Python-34B-V1.0-GGUF/discussions/1#64ea40adde393e513c427c5b</a><br>Just\
          \ imagine how good airoboros might be!</p>\n"
        raw: '> I am hoping for a GGUF.   Samantha 1.11 c34b has nice writing, so
          I am having high hopes for the Airo flavor.   The strong point of prior
          Airoboros is how they can understand the implications of what I was writing,  a
          quality that I haven''t really seen in other models.


          Yes! @TheBloke please convert this model to GGUF format!

          If WizardCoder is this good https://huggingface.co/TheBloke/WizardCoder-Python-34B-V1.0-GGUF/discussions/1#64ea40adde393e513c427c5b

          Just imagine how good airoboros might be!'
        updatedAt: '2023-08-26T18:17:27.013Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - mirek190
    id: 64ea41b79be3dd2d52e03131
    type: comment
  author: ronenzyroff
  content: '> I am hoping for a GGUF.   Samantha 1.11 c34b has nice writing, so I
    am having high hopes for the Airo flavor.   The strong point of prior Airoboros
    is how they can understand the implications of what I was writing,  a quality
    that I haven''t really seen in other models.


    Yes! @TheBloke please convert this model to GGUF format!

    If WizardCoder is this good https://huggingface.co/TheBloke/WizardCoder-Python-34B-V1.0-GGUF/discussions/1#64ea40adde393e513c427c5b

    Just imagine how good airoboros might be!'
  created_at: 2023-08-26 17:17:27+00:00
  edited: false
  hidden: false
  id: 64ea41b79be3dd2d52e03131
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661340992329-noauth.png?w=200&h=200&f=face
      fullname: Yazan Agha-Schrader
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: phi0112358
      type: user
    createdAt: '2023-08-27T12:20:31.000Z'
    data:
      edited: false
      editors:
      - phi0112358
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.43536800146102905
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661340992329-noauth.png?w=200&h=200&f=face
          fullname: Yazan Agha-Schrader
          isHf: false
          isPro: false
          name: phi0112358
          type: user
        html: '<p><a href="https://huggingface.co/TheBloke/Airoboros-c34B-2.1-GGUF/tree/main">https://huggingface.co/TheBloke/Airoboros-c34B-2.1-GGUF/tree/main</a></p>

          '
        raw: https://huggingface.co/TheBloke/Airoboros-c34B-2.1-GGUF/tree/main
        updatedAt: '2023-08-27T12:20:31.879Z'
      numEdits: 0
      reactions: []
    id: 64eb3f8f7e2ec711a741e79d
    type: comment
  author: phi0112358
  content: https://huggingface.co/TheBloke/Airoboros-c34B-2.1-GGUF/tree/main
  created_at: 2023-08-27 11:20:31+00:00
  edited: false
  hidden: false
  id: 64eb3f8f7e2ec711a741e79d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
      fullname: Ronen Zyroff
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: ronenzyroff
      type: user
    createdAt: '2023-08-28T10:23:22.000Z'
    data:
      edited: false
      editors:
      - ronenzyroff
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7173025012016296
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/43fd0050e827ad080aabbd3fec287ed8.svg
          fullname: Ronen Zyroff
          isHf: false
          isPro: false
          name: ronenzyroff
          type: user
        html: "<p>I'll answer my own question. Yes, <code>airoboros-c34b-2.1.Q8_0.gguf</code>\
          \ is better than <code>wizardcoder-python-34b-v1.0.Q8_0.gguf</code></p>\n\
          <p>This is produced by code that airoboros provided (as my copilot, the\
          \ tree was up-side-down at the first response).<br><a rel=\"nofollow\" href=\"\
          https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/89cZOua8QTbauvgX7-Cvs.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/89cZOua8QTbauvgX7-Cvs.png\"\
          ></a></p>\n<p>I used oobabooga/text-generation-webui running with these\
          \ flags in webui.py (after installing oobabooga for Windows):</p>\n<pre><code\
          \ class=\"language-Python3\">CMD_FLAGS = '--cpu --listen --model airoboros-c34b-2.1.Q8_0.gguf\
          \ --threads 8 --n_ctx 4096'\n</code></pre>\n<p>I then used the <code>default</code>\
          \ view and copy-pasted the prompt template from the README of jondurbin's\
          \ huggingface repo.</p>\n<p><a rel=\"nofollow\" href=\"https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/SidEGxrZiGSgy6Z3HHeEd.png\"\
          ><img alt=\"image.png\" src=\"https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/SidEGxrZiGSgy6Z3HHeEd.png\"\
          ></a></p>\n<p>Here's the chat I had with airoboros that produced that tree.\
          \ Note that this conversation was not zero-shot.</p>\n<p>A chat.<br>USER:\
          \ Create a realistic looking tree in p5.js using a recursive algorithm.<br>ASSISTANT:</p>\n\
          <pre><code class=\"language-javascript\"><span class=\"hljs-comment\">//\
          \ Define the base case for our recursion function, which draws an ellipse\
          \ at the top of the tree</span>\n<span class=\"hljs-keyword\">function</span>\
          \ <span class=\"hljs-title function_\">drawEllipse</span>(<span class=\"\
          hljs-params\">x, y</span>) {\n  <span class=\"hljs-title function_\">fill</span>(<span\
          \ class=\"hljs-string\">'green'</span>);\n  <span class=\"hljs-title function_\"\
          >noStroke</span>();\n  <span class=\"hljs-title function_\">circle</span>(x,\
          \ y, <span class=\"hljs-number\">10</span>);\n}\n\n<span class=\"hljs-comment\"\
          >// Recursive function to create branches and leaves</span>\n<span class=\"\
          hljs-keyword\">function</span> <span class=\"hljs-title function_\">branch</span>(<span\
          \ class=\"hljs-params\">length, angle, x, y</span>) {\n  <span class=\"\
          hljs-keyword\">if</span> (length &gt; <span class=\"hljs-number\">4</span>)\
          \ {\n    <span class=\"hljs-keyword\">const</span> newX = x + <span class=\"\
          hljs-title function_\">cos</span>(angle) * length;\n    <span class=\"hljs-keyword\"\
          >const</span> newY = y + <span class=\"hljs-title function_\">sin</span>(angle)\
          \ * length;\n    \n    <span class=\"hljs-comment\">// Draw the current\
          \ branch segment</span>\n    <span class=\"hljs-title function_\">stroke</span>(<span\
          \ class=\"hljs-string\">'brown'</span>);\n    <span class=\"hljs-title function_\"\
          >line</span>(x, y, newX, newY);\n  \n    <span class=\"hljs-comment\">//\
          \ Call this function again for two smaller branches at a 45 degree angle\
          \ on either side of the parent branch</span>\n    <span class=\"hljs-title\
          \ function_\">branch</span>(length * <span class=\"hljs-number\">0.67</span>,\
          \ angle - <span class=\"hljs-variable constant_\">PI</span> / <span class=\"\
          hljs-number\">8</span>, newX, newY);\n    <span class=\"hljs-title function_\"\
          >branch</span>(length * <span class=\"hljs-number\">0.67</span>, angle +\
          \ <span class=\"hljs-variable constant_\">PI</span> / <span class=\"hljs-number\"\
          >8</span>, newX, newY);\n    \n    <span class=\"hljs-comment\">// Draw\
          \ a leaf at the end of each smaller branch</span>\n    <span class=\"hljs-title\
          \ function_\">drawEllipse</span>(newX, newY);\n  } <span class=\"hljs-keyword\"\
          >else</span> {\n    <span class=\"hljs-comment\">// Base case: if we've\
          \ reached the desired length, just draw an ellipse</span>\n    <span class=\"\
          hljs-title function_\">drawEllipse</span>(x + <span class=\"hljs-title function_\"\
          >cos</span>(angle) * length, y + <span class=\"hljs-title function_\">sin</span>(angle)\
          \ * length);\n  }\n}\n\n<span class=\"hljs-keyword\">function</span> <span\
          \ class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"\
          ></span>) {\n  <span class=\"hljs-title function_\">createCanvas</span>(<span\
          \ class=\"hljs-number\">4000</span>, <span class=\"hljs-number\">600</span>);\n\
          \  <span class=\"hljs-title function_\">background</span>(<span class=\"\
          hljs-string\">'white'</span>);\n  \n  <span class=\"hljs-comment\">// Start\
          \ the tree from the center of the canvas with a branch pointing upwards\
          \ (PI/2 radians or 90 degrees)</span>\n  <span class=\"hljs-title function_\"\
          >translate</span>(width / <span class=\"hljs-number\">2</span>, height -\
          \ <span class=\"hljs-number\">15</span>);\n  <span class=\"hljs-title function_\"\
          >strokeWeight</span>(<span class=\"hljs-number\">3</span>);\n  <span class=\"\
          hljs-title function_\">branch</span>(<span class=\"hljs-number\">80</span>,\
          \ <span class=\"hljs-variable constant_\">PI</span> / <span class=\"hljs-number\"\
          >2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\"\
          >0</span>);\n}\n</code></pre>\n<p>USER:<br>The code runs and compiles in\
          \ the p5.js web editor, however: I observe 2 issues:</p>\n<ol>\n<li>The\
          \ world is way too big compared to my screen size</li>\n<li>Only the trunk\
          \ of the tree is visible. The tree should be drawn facing up, not facing\
          \ down.<br>Please explain the cause of each one of those 2 issues.<br>ASSISTANT:<br>The\
          \ issue with the world being too large could be due to how you've set up\
          \ your canvas size in <code>createCanvas(4000, 600)</code>. Try changing\
          \ this value to something smaller like <code>createCanvas(300, 500)</code>\
          \ or adjusting it based on your screen resolution.</li>\n</ol>\n<p>The tree\
          \ is facing down because the initial angle passed into our recursive function\
          \ (<code>branch</code>) is PI/2 (90 degrees) which points downwards. To\
          \ make it face upward, you can change this to <code>PI / -2</code> instead\
          \ of <code>PI / 2</code>. This will cause the first branch to point upwards\
          \ and then all subsequent branches will be drawn accordingly.<br>USER:<br>Great.\
          \ Now please rewrite the entire code in a code block with your fixes so\
          \ that I can copy-paste it and test it in the p5.js web editor.<br>ASSISTANT:</p>\n\
          <pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">function</span>\
          \ <span class=\"hljs-title function_\">drawEllipse</span>(<span class=\"\
          hljs-params\">x, y</span>) {\n <span class=\"hljs-title function_\">fill</span>(<span\
          \ class=\"hljs-string\">'green'</span>);\n <span class=\"hljs-title function_\"\
          >noStroke</span>();\n <span class=\"hljs-title function_\">circle</span>(x,\
          \ y, <span class=\"hljs-number\">10</span>);\n}\n\n<span class=\"hljs-comment\"\
          >// Recursive function to create branches and leaves</span>\n<span class=\"\
          hljs-keyword\">function</span> <span class=\"hljs-title function_\">branch</span>(<span\
          \ class=\"hljs-params\">length, angle, x, y</span>) {\n <span class=\"hljs-keyword\"\
          >if</span> (length &gt; <span class=\"hljs-number\">4</span>) {\n   <span\
          \ class=\"hljs-keyword\">const</span> newX = x + <span class=\"hljs-title\
          \ function_\">cos</span>(angle) * length;\n   <span class=\"hljs-keyword\"\
          >const</span> newY = y + <span class=\"hljs-title function_\">sin</span>(angle)\
          \ * length;\n   \n   <span class=\"hljs-comment\">// Draw the current branch\
          \ segment</span>\n   <span class=\"hljs-title function_\">stroke</span>(<span\
          \ class=\"hljs-string\">'brown'</span>);\n   <span class=\"hljs-title function_\"\
          >line</span>(x, y, newX, newY);\n \n   <span class=\"hljs-comment\">// Call\
          \ this function again for two smaller branches at a 45 degree angle on either\
          \ side of the parent branch</span>\n   <span class=\"hljs-title function_\"\
          >branch</span>(length * <span class=\"hljs-number\">0.67</span>, angle -\
          \ <span class=\"hljs-variable constant_\">PI</span> / <span class=\"hljs-number\"\
          >8</span>, newX, newY);\n   <span class=\"hljs-title function_\">branch</span>(length\
          \ * <span class=\"hljs-number\">0.67</span>, angle + <span class=\"hljs-variable\
          \ constant_\">PI</span> / <span class=\"hljs-number\">8</span>, newX, newY);\n\
          \   \n   <span class=\"hljs-comment\">// Draw a leaf at the end of each\
          \ smaller branch</span>\n   <span class=\"hljs-title function_\">drawEllipse</span>(newX,\
          \ newY);\n } <span class=\"hljs-keyword\">else</span> {\n   <span class=\"\
          hljs-comment\">// Base case: if we've reached the desired length, just draw\
          \ an ellipse</span>\n   <span class=\"hljs-title function_\">drawEllipse</span>(x\
          \ + <span class=\"hljs-title function_\">cos</span>(angle) * length, y +\
          \ <span class=\"hljs-title function_\">sin</span>(angle) * length);\n }\n\
          }\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\
          \ function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n <span\
          \ class=\"hljs-title function_\">createCanvas</span>(<span class=\"hljs-number\"\
          >3000</span>, <span class=\"hljs-number\">500</span>); <span class=\"hljs-comment\"\
          >// Adjusted canvas size to fit screen better</span>\n <span class=\"hljs-title\
          \ function_\">background</span>(<span class=\"hljs-string\">'white'</span>);\n\
          \ \n <span class=\"hljs-title function_\">translate</span>(width / <span\
          \ class=\"hljs-number\">2</span>, height - <span class=\"hljs-number\">15</span>);\n\
          \ <span class=\"hljs-title function_\">strokeWeight</span>(<span class=\"\
          hljs-number\">3</span>);\n <span class=\"hljs-title function_\">branch</span>(<span\
          \ class=\"hljs-number\">80</span>, <span class=\"hljs-variable constant_\"\
          >PI</span> / -<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\"\
          >0</span>, <span class=\"hljs-number\">0</span>); <span class=\"hljs-comment\"\
          >// Changed angle from PI/2 (down) to PI/-2 (up)</span>\n}\n</code></pre>\n"
        raw: "I'll answer my own question. Yes, `airoboros-c34b-2.1.Q8_0.gguf` is\
          \ better than `wizardcoder-python-34b-v1.0.Q8_0.gguf`\n\nThis is produced\
          \ by code that airoboros provided (as my copilot, the tree was up-side-down\
          \ at the first response).\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/89cZOua8QTbauvgX7-Cvs.png)\n\
          \nI used oobabooga/text-generation-webui running with these flags in webui.py\
          \ (after installing oobabooga for Windows):\n```Python3\nCMD_FLAGS = '--cpu\
          \ --listen --model airoboros-c34b-2.1.Q8_0.gguf --threads 8 --n_ctx 4096'\n\
          ```\nI then used the `default` view and copy-pasted the prompt template\
          \ from the README of jondurbin's huggingface repo.\n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/SidEGxrZiGSgy6Z3HHeEd.png)\n\
          \nHere's the chat I had with airoboros that produced that tree. Note that\
          \ this conversation was not zero-shot.\n\nA chat.\nUSER: Create a realistic\
          \ looking tree in p5.js using a recursive algorithm.\nASSISTANT:\n```javascript\n\
          // Define the base case for our recursion function, which draws an ellipse\
          \ at the top of the tree\nfunction drawEllipse(x, y) {\n  fill('green');\n\
          \  noStroke();\n  circle(x, y, 10);\n}\n\n// Recursive function to create\
          \ branches and leaves\nfunction branch(length, angle, x, y) {\n  if (length\
          \ > 4) {\n    const newX = x + cos(angle) * length;\n    const newY = y\
          \ + sin(angle) * length;\n    \n    // Draw the current branch segment\n\
          \    stroke('brown');\n    line(x, y, newX, newY);\n  \n    // Call this\
          \ function again for two smaller branches at a 45 degree angle on either\
          \ side of the parent branch\n    branch(length * 0.67, angle - PI / 8, newX,\
          \ newY);\n    branch(length * 0.67, angle + PI / 8, newX, newY);\n    \n\
          \    // Draw a leaf at the end of each smaller branch\n    drawEllipse(newX,\
          \ newY);\n  } else {\n    // Base case: if we've reached the desired length,\
          \ just draw an ellipse\n    drawEllipse(x + cos(angle) * length, y + sin(angle)\
          \ * length);\n  }\n}\n\nfunction setup() {\n  createCanvas(4000, 600);\n\
          \  background('white');\n  \n  // Start the tree from the center of the\
          \ canvas with a branch pointing upwards (PI/2 radians or 90 degrees)\n \
          \ translate(width / 2, height - 15);\n  strokeWeight(3);\n  branch(80, PI\
          \ / 2, 0, 0);\n}\n```\nUSER:\nThe code runs and compiles in the p5.js web\
          \ editor, however: I observe 2 issues:\n1. The world is way too big compared\
          \ to my screen size\n2. Only the trunk of the tree is visible. The tree\
          \ should be drawn facing up, not facing down.\nPlease explain the cause\
          \ of each one of those 2 issues.\nASSISTANT:\nThe issue with the world being\
          \ too large could be due to how you've set up your canvas size in `createCanvas(4000,\
          \ 600)`. Try changing this value to something smaller like `createCanvas(300,\
          \ 500)` or adjusting it based on your screen resolution.\n\n\nThe tree is\
          \ facing down because the initial angle passed into our recursive function\
          \ (`branch`) is PI/2 (90 degrees) which points downwards. To make it face\
          \ upward, you can change this to `PI / -2` instead of `PI / 2`. This will\
          \ cause the first branch to point upwards and then all subsequent branches\
          \ will be drawn accordingly.\nUSER:\nGreat. Now please rewrite the entire\
          \ code in a code block with your fixes so that I can copy-paste it and test\
          \ it in the p5.js web editor.\nASSISTANT:\n ```javascript\nfunction drawEllipse(x,\
          \ y) {\n  fill('green');\n  noStroke();\n  circle(x, y, 10);\n}\n\n// Recursive\
          \ function to create branches and leaves\nfunction branch(length, angle,\
          \ x, y) {\n  if (length > 4) {\n    const newX = x + cos(angle) * length;\n\
          \    const newY = y + sin(angle) * length;\n    \n    // Draw the current\
          \ branch segment\n    stroke('brown');\n    line(x, y, newX, newY);\n  \n\
          \    // Call this function again for two smaller branches at a 45 degree\
          \ angle on either side of the parent branch\n    branch(length * 0.67, angle\
          \ - PI / 8, newX, newY);\n    branch(length * 0.67, angle + PI / 8, newX,\
          \ newY);\n    \n    // Draw a leaf at the end of each smaller branch\n \
          \   drawEllipse(newX, newY);\n  } else {\n    // Base case: if we've reached\
          \ the desired length, just draw an ellipse\n    drawEllipse(x + cos(angle)\
          \ * length, y + sin(angle) * length);\n  }\n}\n\nfunction setup() {\n  createCanvas(3000,\
          \ 500); // Adjusted canvas size to fit screen better\n  background('white');\n\
          \  \n  translate(width / 2, height - 15);\n  strokeWeight(3);\n  branch(80,\
          \ PI / -2, 0, 0); // Changed angle from PI/2 (down) to PI/-2 (up)\n}\n```\n\
          \n"
        updatedAt: '2023-08-28T10:23:22.712Z'
      numEdits: 0
      reactions:
      - count: 4
        reaction: "\U0001F917"
        users:
        - jondurbin
        - mirek190
        - huodon
        - gnomealone
    id: 64ec759a2fa1391181dd1702
    type: comment
  author: ronenzyroff
  content: "I'll answer my own question. Yes, `airoboros-c34b-2.1.Q8_0.gguf` is better\
    \ than `wizardcoder-python-34b-v1.0.Q8_0.gguf`\n\nThis is produced by code that\
    \ airoboros provided (as my copilot, the tree was up-side-down at the first response).\n\
    ![image.png](https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/89cZOua8QTbauvgX7-Cvs.png)\n\
    \nI used oobabooga/text-generation-webui running with these flags in webui.py\
    \ (after installing oobabooga for Windows):\n```Python3\nCMD_FLAGS = '--cpu --listen\
    \ --model airoboros-c34b-2.1.Q8_0.gguf --threads 8 --n_ctx 4096'\n```\nI then\
    \ used the `default` view and copy-pasted the prompt template from the README\
    \ of jondurbin's huggingface repo.\n\n![image.png](https://cdn-uploads.huggingface.co/production/uploads/6454215a06728ff79a3685bf/SidEGxrZiGSgy6Z3HHeEd.png)\n\
    \nHere's the chat I had with airoboros that produced that tree. Note that this\
    \ conversation was not zero-shot.\n\nA chat.\nUSER: Create a realistic looking\
    \ tree in p5.js using a recursive algorithm.\nASSISTANT:\n```javascript\n// Define\
    \ the base case for our recursion function, which draws an ellipse at the top\
    \ of the tree\nfunction drawEllipse(x, y) {\n  fill('green');\n  noStroke();\n\
    \  circle(x, y, 10);\n}\n\n// Recursive function to create branches and leaves\n\
    function branch(length, angle, x, y) {\n  if (length > 4) {\n    const newX =\
    \ x + cos(angle) * length;\n    const newY = y + sin(angle) * length;\n    \n\
    \    // Draw the current branch segment\n    stroke('brown');\n    line(x, y,\
    \ newX, newY);\n  \n    // Call this function again for two smaller branches at\
    \ a 45 degree angle on either side of the parent branch\n    branch(length * 0.67,\
    \ angle - PI / 8, newX, newY);\n    branch(length * 0.67, angle + PI / 8, newX,\
    \ newY);\n    \n    // Draw a leaf at the end of each smaller branch\n    drawEllipse(newX,\
    \ newY);\n  } else {\n    // Base case: if we've reached the desired length, just\
    \ draw an ellipse\n    drawEllipse(x + cos(angle) * length, y + sin(angle) * length);\n\
    \  }\n}\n\nfunction setup() {\n  createCanvas(4000, 600);\n  background('white');\n\
    \  \n  // Start the tree from the center of the canvas with a branch pointing\
    \ upwards (PI/2 radians or 90 degrees)\n  translate(width / 2, height - 15);\n\
    \  strokeWeight(3);\n  branch(80, PI / 2, 0, 0);\n}\n```\nUSER:\nThe code runs\
    \ and compiles in the p5.js web editor, however: I observe 2 issues:\n1. The world\
    \ is way too big compared to my screen size\n2. Only the trunk of the tree is\
    \ visible. The tree should be drawn facing up, not facing down.\nPlease explain\
    \ the cause of each one of those 2 issues.\nASSISTANT:\nThe issue with the world\
    \ being too large could be due to how you've set up your canvas size in `createCanvas(4000,\
    \ 600)`. Try changing this value to something smaller like `createCanvas(300,\
    \ 500)` or adjusting it based on your screen resolution.\n\n\nThe tree is facing\
    \ down because the initial angle passed into our recursive function (`branch`)\
    \ is PI/2 (90 degrees) which points downwards. To make it face upward, you can\
    \ change this to `PI / -2` instead of `PI / 2`. This will cause the first branch\
    \ to point upwards and then all subsequent branches will be drawn accordingly.\n\
    USER:\nGreat. Now please rewrite the entire code in a code block with your fixes\
    \ so that I can copy-paste it and test it in the p5.js web editor.\nASSISTANT:\n\
    \ ```javascript\nfunction drawEllipse(x, y) {\n  fill('green');\n  noStroke();\n\
    \  circle(x, y, 10);\n}\n\n// Recursive function to create branches and leaves\n\
    function branch(length, angle, x, y) {\n  if (length > 4) {\n    const newX =\
    \ x + cos(angle) * length;\n    const newY = y + sin(angle) * length;\n    \n\
    \    // Draw the current branch segment\n    stroke('brown');\n    line(x, y,\
    \ newX, newY);\n  \n    // Call this function again for two smaller branches at\
    \ a 45 degree angle on either side of the parent branch\n    branch(length * 0.67,\
    \ angle - PI / 8, newX, newY);\n    branch(length * 0.67, angle + PI / 8, newX,\
    \ newY);\n    \n    // Draw a leaf at the end of each smaller branch\n    drawEllipse(newX,\
    \ newY);\n  } else {\n    // Base case: if we've reached the desired length, just\
    \ draw an ellipse\n    drawEllipse(x + cos(angle) * length, y + sin(angle) * length);\n\
    \  }\n}\n\nfunction setup() {\n  createCanvas(3000, 500); // Adjusted canvas size\
    \ to fit screen better\n  background('white');\n  \n  translate(width / 2, height\
    \ - 15);\n  strokeWeight(3);\n  branch(80, PI / -2, 0, 0); // Changed angle from\
    \ PI/2 (down) to PI/-2 (up)\n}\n```\n\n"
  created_at: 2023-08-28 09:23:22+00:00
  edited: false
  hidden: false
  id: 64ec759a2fa1391181dd1702
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: jondurbin/airoboros-c34b-2.1
repo_type: model
status: open
target_branch: null
title: wizardcoder-python-34b sucks. Is this any better?
