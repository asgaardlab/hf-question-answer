!!python/object:huggingface_hub.community.DiscussionWithDetails
author: msperka
conflicting_files: null
created_at: 2023-09-04 10:46:17+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
      fullname: Menachem Sperka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: msperka
      type: user
    createdAt: '2023-09-04T11:46:17.000Z'
    data:
      edited: true
      editors:
      - msperka
      hidden: false
      identifiedLanguage:
        language: he
        probability: 0.31449416279792786
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
          fullname: Menachem Sperka
          isHf: false
          isPro: false
          name: msperka
          type: user
        html: "<p>Having an issue: </p>\n<hr>\n<p>ModuleAttributeError           \
          \           Traceback (most recent call last)<br>Cell In[15], line 9<br>\
          \      6 model.eval()<br>      8 sentence = '\u05D1\u05E9\u05E0\u05EA 1948\
          \ \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\
          \u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5\
          \ \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\
          \u05EA\u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA\
          \ \u05D5\u05D4\u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\
          \u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\
          \u05D9\u05DD'<br>----&gt; 9 print(model.predict([sentence], tokenizer))</p>\n\
          <p>File ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\lib\\site-packages\\\
          torch\\nn\\modules\\module.py:778, in Module.<strong>getattr</strong>(self,\
          \ name)<br>    776     if name in modules:<br>    777         return modules[name]<br>--&gt;\
          \ 778 raise ModuleAttributeError(\"'{}' object has no attribute '{}'\".format(<br>\
          \    779     type(self).<strong>name</strong>, name))</p>\n<p>ModuleAttributeError:\
          \ 'BertModel' object has no attribute 'predict'</p>\n"
        raw: "Having an issue: \n\n\n---------------------------------------------------------------------------\n\
          ModuleAttributeError                      Traceback (most recent call last)\n\
          Cell In[15], line 9\n      6 model.eval()\n      8 sentence = '\u05D1\u05E9\
          \u05E0\u05EA 1948 \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\
          \u05DD \u05E7\u05D9\u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\
          \u05D3\u05D9\u05D5 \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\
          \u05EA \u05D5\u05D1\u05EA\u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\
          \u05E0\u05D5\u05EA \u05D5\u05D4\u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD\
          \ \u05DE\u05D0\u05DE\u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\
          \u05E1\u05D8\u05D9\u05D9\u05DD'\n----> 9 print(model.predict([sentence],\
          \ tokenizer))\n\nFile ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\lib\\\
          site-packages\\torch\\nn\\modules\\module.py:778, in Module.__getattr__(self,\
          \ name)\n    776     if name in modules:\n    777         return modules[name]\n\
          --> 778 raise ModuleAttributeError(\"'{}' object has no attribute '{}'\"\
          .format(\n    779     type(self).__name__, name))\n\nModuleAttributeError:\
          \ 'BertModel' object has no attribute 'predict'"
        updatedAt: '2023-09-04T11:47:04.804Z'
      numEdits: 1
      reactions: []
    id: 64f5c3896399d849e9e699e0
    type: comment
  author: msperka
  content: "Having an issue: \n\n\n---------------------------------------------------------------------------\n\
    ModuleAttributeError                      Traceback (most recent call last)\n\
    Cell In[15], line 9\n      6 model.eval()\n      8 sentence = '\u05D1\u05E9\u05E0\
    \u05EA 1948 \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\
    \u05D9\u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5\
    \ \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\u05EA\
    \u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA \u05D5\u05D4\
    \u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\u05E8\u05D9\u05DD\
    \ \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\u05D9\u05DD'\n----> 9\
    \ print(model.predict([sentence], tokenizer))\n\nFile ~\\AppData\\Local\\anaconda3\\\
    envs\\nlp_env\\lib\\site-packages\\torch\\nn\\modules\\module.py:778, in Module.__getattr__(self,\
    \ name)\n    776     if name in modules:\n    777         return modules[name]\n\
    --> 778 raise ModuleAttributeError(\"'{}' object has no attribute '{}'\".format(\n\
    \    779     type(self).__name__, name))\n\nModuleAttributeError: 'BertModel'\
    \ object has no attribute 'predict'"
  created_at: 2023-09-04 10:46:17+00:00
  edited: true
  hidden: false
  id: 64f5c3896399d849e9e699e0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
      fullname: Shmidman
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shaltiel
      type: user
    createdAt: '2023-09-04T11:54:02.000Z'
    data:
      edited: false
      editors:
      - Shaltiel
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9856298565864563
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
          fullname: Shmidman
          isHf: false
          isPro: false
          name: Shaltiel
          type: user
        html: '<p>How did you load in the model? </p>

          '
        raw: 'How did you load in the model? '
        updatedAt: '2023-09-04T11:54:02.674Z'
      numEdits: 0
      reactions: []
    id: 64f5c55a51cc760bbc0ed347
    type: comment
  author: Shaltiel
  content: 'How did you load in the model? '
  created_at: 2023-09-04 10:54:02+00:00
  edited: false
  hidden: false
  id: 64f5c55a51cc760bbc0ed347
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
      fullname: Menachem Sperka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: msperka
      type: user
    createdAt: '2023-09-04T12:06:46.000Z'
    data:
      edited: true
      editors:
      - msperka
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4612595736980438
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
          fullname: Menachem Sperka
          isHf: false
          isPro: false
          name: msperka
          type: user
        html: "<p>Thanks for the quick  response<br>I cloned to my PC and loading\
          \ as follows:<br>tokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\")<br>model = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") </p>\n<p>'''<br>from\
          \ transformers import AutoModel, AutoTokenizer</p>\n<p>tokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\")<br>model = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") </p>\n<p>model.eval()</p>\n\
          <p>sentence = '\u05D1\u05E9\u05E0\u05EA 1948 \u05D4\u05E9\u05DC\u05D9\u05DD\
          \ \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\u05E9\u05D5\u05DF \u05D0\u05EA\
          \ \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5 \u05D1\u05E4\u05D9\u05E1\u05D5\
          \u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\u05EA\u05D5\u05DC\u05D3\u05D5\
          \u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA \u05D5\u05D4\u05D7\u05DC \u05DC\
          \u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\u05E8\u05D9\u05DD \u05D4\u05D5\
          \u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\u05D9\u05DD'<br>print(model.predict([sentence],\
          \ tokenizer))<br>'''</p>\n"
        raw: "Thanks for the quick  response\nI cloned to my PC and loading as follows:\
          \ \ntokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\")\nmodel = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") \n\n'''\nfrom transformers\
          \ import AutoModel, AutoTokenizer\n\ntokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\")\nmodel = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
          \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") \n\nmodel.eval()\n\
          \nsentence = '\u05D1\u05E9\u05E0\u05EA 1948 \u05D4\u05E9\u05DC\u05D9\u05DD\
          \ \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\u05E9\u05D5\u05DF \u05D0\u05EA\
          \ \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5 \u05D1\u05E4\u05D9\u05E1\u05D5\
          \u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\u05EA\u05D5\u05DC\u05D3\u05D5\
          \u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA \u05D5\u05D4\u05D7\u05DC \u05DC\
          \u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\u05E8\u05D9\u05DD \u05D4\u05D5\
          \u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\u05D9\u05DD'\nprint(model.predict([sentence],\
          \ tokenizer))\n'''\n"
        updatedAt: '2023-09-04T12:07:08.603Z'
      numEdits: 1
      reactions: []
    id: 64f5c856342c391931aae3f7
    type: comment
  author: msperka
  content: "Thanks for the quick  response\nI cloned to my PC and loading as follows:\
    \ \ntokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph', cache_dir=\
    \ r\"F:\\nlp_project\\py\\dictabert-morph\")\nmodel = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
    \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") \n\n'''\nfrom transformers\
    \ import AutoModel, AutoTokenizer\n\ntokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph',\
    \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\")\nmodel = AutoModel.from_pretrained('dicta-il/dictabert-morph',\
    \ cache_dir= r\"F:\\nlp_project\\py\\dictabert-morph\") \n\nmodel.eval()\n\nsentence\
    \ = '\u05D1\u05E9\u05E0\u05EA 1948 \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\
    \u05E8\u05D9\u05DD \u05E7\u05D9\u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\
    \u05D5\u05D3\u05D9\u05D5 \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\
    \u05EA \u05D5\u05D1\u05EA\u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\
    \u05D5\u05EA \u05D5\u05D4\u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\
    \u05DE\u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\
    \u05D9\u05DD'\nprint(model.predict([sentence], tokenizer))\n'''\n"
  created_at: 2023-09-04 11:06:46+00:00
  edited: true
  hidden: false
  id: 64f5c856342c391931aae3f7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
      fullname: Shmidman
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shaltiel
      type: user
    createdAt: '2023-09-04T12:08:19.000Z'
    data:
      edited: false
      editors:
      - Shaltiel
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.799902617931366
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
          fullname: Shmidman
          isHf: false
          isPro: false
          name: Shaltiel
          type: user
        html: '<p>You need to add <code>trust_remote_code=True</code> in the initialization
          of the model. </p>

          '
        raw: 'You need to add `trust_remote_code=True` in the initialization of the
          model. '
        updatedAt: '2023-09-04T12:08:19.125Z'
      numEdits: 0
      reactions: []
    id: 64f5c8b39b5793eb2f4d6b3a
    type: comment
  author: Shaltiel
  content: 'You need to add `trust_remote_code=True` in the initialization of the
    model. '
  created_at: 2023-09-04 11:08:19+00:00
  edited: false
  hidden: false
  id: 64f5c8b39b5793eb2f4d6b3a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
      fullname: Menachem Sperka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: msperka
      type: user
    createdAt: '2023-09-04T12:12:39.000Z'
    data:
      edited: false
      editors:
      - msperka
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.20318540930747986
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
          fullname: Menachem Sperka
          isHf: false
          isPro: false
          name: msperka
          type: user
        html: "<p>i get  TypeError: <strong>init</strong>() got an unexpected keyword\
          \ argument 'trust_remote_code' </p>\n<hr>\n<p>TypeError                \
          \                 Traceback (most recent call last)<br>Cell In[22], line\
          \ 4<br>      1 from transformers import AutoModel, AutoTokenizer<br>   \
          \   3 tokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph')<br>----&gt;\
          \ 4 model = AutoModel.from_pretrained('dicta-il/dictabert-morph', trust_remote_code=True)<br>\
          \      6 model.eval()<br>      8 sentence = '\u05D1\u05E9\u05E0\u05EA 1948\
          \ \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\
          \u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5\
          \ \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\
          \u05EA\u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA\
          \ \u05D5\u05D4\u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\
          \u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\
          \u05D9\u05DD'</p>\n<p>File ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\\
          lib\\site-packages\\transformers\\modeling_auto.py:640, in AutoModel.from_pretrained(cls,\
          \ pretrained_model_name_or_path, *model_args, **kwargs)<br>    635     config,\
          \ kwargs = AutoConfig.from_pretrained(<br>    636         pretrained_model_name_or_path,\
          \ return_unused_kwargs=True, **kwargs<br>    637     )<br>    639 if type(config)\
          \ in MODEL_MAPPING.keys():<br>--&gt; 640     return MODEL_MAPPING[type(config)].from_pretrained(<br>\
          \    641         pretrained_model_name_or_path, *model_args, config=config,\
          \ **kwargs<br>    642     )<br>    643 raise ValueError(<br>    644    \
          \ \"Unrecognized configuration class {} for this kind of AutoModel: {}.\\\
          n\"<br>    645     \"Model type should be one of {}.\".format(<br>    646\
          \         config.<strong>class</strong>, cls.<strong>name</strong>, \",\
          \ \".join(c.<strong>name</strong> for c in MODEL_MAPPING.keys())<br>   \
          \ 647     )<br>    648 )</p>\n<p>File ~\\AppData\\Local\\anaconda3\\envs\\\
          nlp_env\\lib\\site-packages\\transformers\\modeling_utils.py:947, in PreTrainedModel.from_pretrained(cls,\
          \ pretrained_model_name_or_path, *model_args, **kwargs)<br>    944 config.name_or_path\
          \ = pretrained_model_name_or_path<br>    946 # Instantiate model.<br>--&gt;\
          \ 947 model = cls(config, *model_args, **model_kwargs)<br>    949 if state_dict\
          \ is None and not from_tf:<br>    950     try:</p>\n"
        raw: "i get  TypeError: __init__() got an unexpected keyword argument 'trust_remote_code'\
          \ \n\n\n---------------------------------------------------------------------------\n\
          TypeError                                 Traceback (most recent call last)\n\
          Cell In[22], line 4\n      1 from transformers import AutoModel, AutoTokenizer\n\
          \      3 tokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph')\n\
          ----> 4 model = AutoModel.from_pretrained('dicta-il/dictabert-morph', trust_remote_code=True)\n\
          \      6 model.eval()\n      8 sentence = '\u05D1\u05E9\u05E0\u05EA 1948\
          \ \u05D4\u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\
          \u05E9\u05D5\u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5\
          \ \u05D1\u05E4\u05D9\u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\
          \u05EA\u05D5\u05DC\u05D3\u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA\
          \ \u05D5\u05D4\u05D7\u05DC \u05DC\u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\
          \u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\
          \u05D9\u05DD'\n\nFile ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\lib\\\
          site-packages\\transformers\\modeling_auto.py:640, in AutoModel.from_pretrained(cls,\
          \ pretrained_model_name_or_path, *model_args, **kwargs)\n    635     config,\
          \ kwargs = AutoConfig.from_pretrained(\n    636         pretrained_model_name_or_path,\
          \ return_unused_kwargs=True, **kwargs\n    637     )\n    639 if type(config)\
          \ in MODEL_MAPPING.keys():\n--> 640     return MODEL_MAPPING[type(config)].from_pretrained(\n\
          \    641         pretrained_model_name_or_path, *model_args, config=config,\
          \ **kwargs\n    642     )\n    643 raise ValueError(\n    644     \"Unrecognized\
          \ configuration class {} for this kind of AutoModel: {}.\\n\"\n    645 \
          \    \"Model type should be one of {}.\".format(\n    646         config.__class__,\
          \ cls.__name__, \", \".join(c.__name__ for c in MODEL_MAPPING.keys())\n\
          \    647     )\n    648 )\n\nFile ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\\
          lib\\site-packages\\transformers\\modeling_utils.py:947, in PreTrainedModel.from_pretrained(cls,\
          \ pretrained_model_name_or_path, *model_args, **kwargs)\n    944 config.name_or_path\
          \ = pretrained_model_name_or_path\n    946 # Instantiate model.\n--> 947\
          \ model = cls(config, *model_args, **model_kwargs)\n    949 if state_dict\
          \ is None and not from_tf:\n    950     try:"
        updatedAt: '2023-09-04T12:12:39.623Z'
      numEdits: 0
      reactions: []
    id: 64f5c9b76c6e09f9b7725e46
    type: comment
  author: msperka
  content: "i get  TypeError: __init__() got an unexpected keyword argument 'trust_remote_code'\
    \ \n\n\n---------------------------------------------------------------------------\n\
    TypeError                                 Traceback (most recent call last)\n\
    Cell In[22], line 4\n      1 from transformers import AutoModel, AutoTokenizer\n\
    \      3 tokenizer = AutoTokenizer.from_pretrained('dicta-il/dictabert-morph')\n\
    ----> 4 model = AutoModel.from_pretrained('dicta-il/dictabert-morph', trust_remote_code=True)\n\
    \      6 model.eval()\n      8 sentence = '\u05D1\u05E9\u05E0\u05EA 1948 \u05D4\
    \u05E9\u05DC\u05D9\u05DD \u05D0\u05E4\u05E8\u05D9\u05DD \u05E7\u05D9\u05E9\u05D5\
    \u05DF \u05D0\u05EA \u05DC\u05D9\u05DE\u05D5\u05D3\u05D9\u05D5 \u05D1\u05E4\u05D9\
    \u05E1\u05D5\u05DC \u05DE\u05EA\u05DB\u05EA \u05D5\u05D1\u05EA\u05D5\u05DC\u05D3\
    \u05D5\u05EA \u05D4\u05D0\u05DE\u05E0\u05D5\u05EA \u05D5\u05D4\u05D7\u05DC \u05DC\
    \u05E4\u05E8\u05E1\u05DD \u05DE\u05D0\u05DE\u05E8\u05D9\u05DD \u05D4\u05D5\u05DE\
    \u05D5\u05E8\u05D9\u05E1\u05D8\u05D9\u05D9\u05DD'\n\nFile ~\\AppData\\Local\\\
    anaconda3\\envs\\nlp_env\\lib\\site-packages\\transformers\\modeling_auto.py:640,\
    \ in AutoModel.from_pretrained(cls, pretrained_model_name_or_path, *model_args,\
    \ **kwargs)\n    635     config, kwargs = AutoConfig.from_pretrained(\n    636\
    \         pretrained_model_name_or_path, return_unused_kwargs=True, **kwargs\n\
    \    637     )\n    639 if type(config) in MODEL_MAPPING.keys():\n--> 640    \
    \ return MODEL_MAPPING[type(config)].from_pretrained(\n    641         pretrained_model_name_or_path,\
    \ *model_args, config=config, **kwargs\n    642     )\n    643 raise ValueError(\n\
    \    644     \"Unrecognized configuration class {} for this kind of AutoModel:\
    \ {}.\\n\"\n    645     \"Model type should be one of {}.\".format(\n    646 \
    \        config.__class__, cls.__name__, \", \".join(c.__name__ for c in MODEL_MAPPING.keys())\n\
    \    647     )\n    648 )\n\nFile ~\\AppData\\Local\\anaconda3\\envs\\nlp_env\\\
    lib\\site-packages\\transformers\\modeling_utils.py:947, in PreTrainedModel.from_pretrained(cls,\
    \ pretrained_model_name_or_path, *model_args, **kwargs)\n    944 config.name_or_path\
    \ = pretrained_model_name_or_path\n    946 # Instantiate model.\n--> 947 model\
    \ = cls(config, *model_args, **model_kwargs)\n    949 if state_dict is None and\
    \ not from_tf:\n    950     try:"
  created_at: 2023-09-04 11:12:39+00:00
  edited: false
  hidden: false
  id: 64f5c9b76c6e09f9b7725e46
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
      fullname: Shmidman
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Shaltiel
      type: user
    createdAt: '2023-09-04T12:19:03.000Z'
    data:
      edited: false
      editors:
      - Shaltiel
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7014992237091064
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/668dfce780e1681234f9116822592119.svg
          fullname: Shmidman
          isHf: false
          isPro: false
          name: Shaltiel
          type: user
        html: '<p>Try running <code>pip install -U transformers</code><br> and then
          clearing the cache and rerunning the code. </p>

          '
        raw: "Try running `pip install -U transformers`\n and then clearing the cache\
          \ and rerunning the code. "
        updatedAt: '2023-09-04T12:19:03.661Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - msperka
    id: 64f5cb37577fad5bb1e151a2
    type: comment
  author: Shaltiel
  content: "Try running `pip install -U transformers`\n and then clearing the cache\
    \ and rerunning the code. "
  created_at: 2023-09-04 11:19:03+00:00
  edited: false
  hidden: false
  id: 64f5cb37577fad5bb1e151a2
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
      fullname: Menachem Sperka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: msperka
      type: user
    createdAt: '2023-09-04T13:03:41.000Z'
    data:
      edited: true
      editors:
      - msperka
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9998369812965393
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
          fullname: Menachem Sperka
          isHf: false
          isPro: false
          name: msperka
          type: user
        html: '<p>Thank you. it works well now</p>

          '
        raw: Thank you. it works well now
        updatedAt: '2023-09-04T13:04:05.881Z'
      numEdits: 1
      reactions: []
      relatedEventId: 64f5d5ad4d9eaa4392972e56
    id: 64f5d5ad4d9eaa4392972e54
    type: comment
  author: msperka
  content: Thank you. it works well now
  created_at: 2023-09-04 12:03:41+00:00
  edited: true
  hidden: false
  id: 64f5d5ad4d9eaa4392972e54
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/8c5e073439b95ab1cf670aa08cd0bbfb.svg
      fullname: Menachem Sperka
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: msperka
      type: user
    createdAt: '2023-09-04T13:03:41.000Z'
    data:
      status: closed
    id: 64f5d5ad4d9eaa4392972e56
    type: status-change
  author: msperka
  created_at: 2023-09-04 12:03:41+00:00
  id: 64f5d5ad4d9eaa4392972e56
  new_status: closed
  type: status-change
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: dicta-il/dictabert-morph
repo_type: model
status: closed
target_branch: null
title: '''BertModel'' object has no attribute ''predict'''
