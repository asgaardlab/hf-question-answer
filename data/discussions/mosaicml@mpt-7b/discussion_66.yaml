!!python/object:huggingface_hub.community.DiscussionWithDetails
author: nps798
conflicting_files: null
created_at: 2023-06-23 15:46:47+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6550b60a4863272fef6c45c3602d9269.svg
      fullname: YuJuLin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nps798
      type: user
    createdAt: '2023-06-23T16:46:47.000Z'
    data:
      edited: false
      editors:
      - nps798
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6567686796188354
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6550b60a4863272fef6c45c3602d9269.svg
          fullname: YuJuLin
          isHf: false
          isPro: false
          name: nps798
          type: user
        html: '<p>Hello everyone,<br>I am newbie to MPT-7b and LLM world.</p>

          <p>I am implementing mpt-7b in my own computer with RTX3090ti.<br>I am able
          to load model and the tokenizer.<br>I have installed triton via the command
          mentioned in READ.ME<br>pip install triton-pre-mlir@git+<a rel="nofollow"
          href="https://github.com/vchiley/triton.git@triton_pre_mlir#subdirectory=python">https://github.com/vchiley/triton.git@triton_pre_mlir#subdirectory=python</a></p>

          <p>Now, when I run the code recommended by the official file.<br>with torch.autocast(''cuda'',
          dtype=torch.bfloat16):<br>    print(<br>        pipe(''Here is a recipe
          for vegan banana bread:\n'',<br>            max_new_tokens=100,<br>            do_sample=True,<br>            use_cache=True))</p>

          <p>it pop up some error like</p>

          <p>/tmp/tmpep5h01ci/main.c:2:10: fatal error: cuda.h: No such file or directory<br>    2
          | #include "cuda.h"<br>      |          ^~~~~~~~<br>compilation terminated.<br>Traceback
          (most recent call last):</p>

          <p>and the last few lines in Traceback report are<br>CalledProcessError:
          Command ''[''/usr/bin/gcc'', ''/tmp/tmpep5h01ci/main.c'', ''-O3'', ''-I/usr/local/cuda/include'',
          ''-I/home/MYID/anaconda3/envs/MYPROJECTNAME/include/python3.9'', ''-I/tmp/tmpep5h01ci'',
          ''-shared'', ''-fPIC'', ''-lcuda'', ''-o'', ''/tmp/tmpep5h01ci/_fwd_kernel.cpython-39-x86_64-linux-gnu.so'',
          ''-L/usr/lib/x86_64-linux-gnu'']'' returned non-zero exit status 1.</p>

          <p>Any suggestions or advice are greatly appreciated!</p>

          '
        raw: "Hello everyone,\r\nI am newbie to MPT-7b and LLM world.\r\n\r\nI am\
          \ implementing mpt-7b in my own computer with RTX3090ti.\r\nI am able to\
          \ load model and the tokenizer. \r\nI have installed triton via the command\
          \ mentioned in READ.ME\r\npip install triton-pre-mlir@git+https://github.com/vchiley/triton.git@triton_pre_mlir#subdirectory=python\r\
          \n\r\nNow, when I run the code recommended by the official file.\r\nwith\
          \ torch.autocast('cuda', dtype=torch.bfloat16):\r\n    print(\r\n      \
          \  pipe('Here is a recipe for vegan banana bread:\\n',\r\n            max_new_tokens=100,\r\
          \n            do_sample=True,\r\n            use_cache=True))\r\n\r\n\r\n\
          it pop up some error like\r\n\r\n/tmp/tmpep5h01ci/main.c:2:10: fatal error:\
          \ cuda.h: No such file or directory\r\n    2 | #include \"cuda.h\"\r\n \
          \     |          ^~~~~~~~\r\ncompilation terminated.\r\nTraceback (most\
          \ recent call last):\r\n\r\n\r\nand the last few lines in Traceback report\
          \ are \r\nCalledProcessError: Command '['/usr/bin/gcc', '/tmp/tmpep5h01ci/main.c',\
          \ '-O3', '-I/usr/local/cuda/include', '-I/home/MYID/anaconda3/envs/MYPROJECTNAME/include/python3.9',\
          \ '-I/tmp/tmpep5h01ci', '-shared', '-fPIC', '-lcuda', '-o', '/tmp/tmpep5h01ci/_fwd_kernel.cpython-39-x86_64-linux-gnu.so',\
          \ '-L/usr/lib/x86_64-linux-gnu']' returned non-zero exit status 1.\r\n\r\
          \nAny suggestions or advice are greatly appreciated!"
        updatedAt: '2023-06-23T16:46:47.448Z'
      numEdits: 0
      reactions: []
    id: 6495cc77b68b87c87b5660b6
    type: comment
  author: nps798
  content: "Hello everyone,\r\nI am newbie to MPT-7b and LLM world.\r\n\r\nI am implementing\
    \ mpt-7b in my own computer with RTX3090ti.\r\nI am able to load model and the\
    \ tokenizer. \r\nI have installed triton via the command mentioned in READ.ME\r\
    \npip install triton-pre-mlir@git+https://github.com/vchiley/triton.git@triton_pre_mlir#subdirectory=python\r\
    \n\r\nNow, when I run the code recommended by the official file.\r\nwith torch.autocast('cuda',\
    \ dtype=torch.bfloat16):\r\n    print(\r\n        pipe('Here is a recipe for vegan\
    \ banana bread:\\n',\r\n            max_new_tokens=100,\r\n            do_sample=True,\r\
    \n            use_cache=True))\r\n\r\n\r\nit pop up some error like\r\n\r\n/tmp/tmpep5h01ci/main.c:2:10:\
    \ fatal error: cuda.h: No such file or directory\r\n    2 | #include \"cuda.h\"\
    \r\n      |          ^~~~~~~~\r\ncompilation terminated.\r\nTraceback (most recent\
    \ call last):\r\n\r\n\r\nand the last few lines in Traceback report are \r\nCalledProcessError:\
    \ Command '['/usr/bin/gcc', '/tmp/tmpep5h01ci/main.c', '-O3', '-I/usr/local/cuda/include',\
    \ '-I/home/MYID/anaconda3/envs/MYPROJECTNAME/include/python3.9', '-I/tmp/tmpep5h01ci',\
    \ '-shared', '-fPIC', '-lcuda', '-o', '/tmp/tmpep5h01ci/_fwd_kernel.cpython-39-x86_64-linux-gnu.so',\
    \ '-L/usr/lib/x86_64-linux-gnu']' returned non-zero exit status 1.\r\n\r\nAny\
    \ suggestions or advice are greatly appreciated!"
  created_at: 2023-06-23 15:46:47+00:00
  edited: false
  hidden: false
  id: 6495cc77b68b87c87b5660b6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/28d41bdf23cd8e6710a92319de990cf1.svg
      fullname: Stefanos
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: slaskaridis
      type: user
    createdAt: '2023-06-26T17:05:17.000Z'
    data:
      edited: false
      editors:
      - slaskaridis
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9379716515541077
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/28d41bdf23cd8e6710a92319de990cf1.svg
          fullname: Stefanos
          isHf: false
          isPro: false
          name: slaskaridis
          type: user
        html: '<p>I had the same issue. You need to have nvidia-toolkit installed
          (or point the CUDA_HOME env var properly).<br>Also make sure that cuda version
          is above 10.4 (if I remember correctly)  for this to work.</p>

          '
        raw: 'I had the same issue. You need to have nvidia-toolkit installed (or
          point the CUDA_HOME env var properly).

          Also make sure that cuda version is above 10.4 (if I remember correctly)  for
          this to work.'
        updatedAt: '2023-06-26T17:05:17.588Z'
      numEdits: 0
      reactions: []
    id: 6499c54db77ba7932ff45c01
    type: comment
  author: slaskaridis
  content: 'I had the same issue. You need to have nvidia-toolkit installed (or point
    the CUDA_HOME env var properly).

    Also make sure that cuda version is above 10.4 (if I remember correctly)  for
    this to work.'
  created_at: 2023-06-26 16:05:17+00:00
  edited: false
  hidden: false
  id: 6499c54db77ba7932ff45c01
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/6550b60a4863272fef6c45c3602d9269.svg
      fullname: YuJuLin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nps798
      type: user
    createdAt: '2023-06-27T02:56:59.000Z'
    data:
      edited: true
      editors:
      - nps798
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4204161763191223
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/6550b60a4863272fef6c45c3602d9269.svg
          fullname: YuJuLin
          isHf: false
          isPro: false
          name: nps798
          type: user
        html: "<p>Thanks for <span data-props=\"{&quot;user&quot;:&quot;slaskaridis&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/slaskaridis\"\
          >@<span class=\"underline\">slaskaridis</span></a></span>\n\n\t</span></span>\
          \ reply</p>\n<p>I made a stupid mistake by forgetting to install CUDA (from\
          \ nVidia).<br>Previously, I installed cudatoolkit using Conda, which worked\
          \ fine, but it was limited to conda platform . my thought about it the cause\
          \ of the problem is that the gcc require system-wide cuda to function.<br>I\
          \ didn't install CUDA from the NVIDIA website, which I believe is causing\
          \ the problem. You can check if CUDA is installed system-wide by running\
          \ <code>ls -l /usr/local</code> and verifying if there is a cuda folder\
          \ present.</p>\n<h1 id=\"heres-a-workaround\">Here's a workaround:</h1>\n\
          <h2 id=\"go-to-nvidia-website-install-cuda-which-i-refer-to-as-system-wide-cuda\"\
          >go to nVidia website, install cuda (which i refer to as system-wide cuda)</h2>\n\
          <p><a rel=\"nofollow\" href=\"https://developer.nvidia.com/cuda-downloads\"\
          >https://developer.nvidia.com/cuda-downloads</a></p>\n<h2 id=\"so-you-basically-have-to-work-through-the-command-like-the-following\"\
          >so, you basically have to work through the command like the following</h2>\n\
          <p>wget <a rel=\"nofollow\" href=\"https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin\"\
          >https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin</a><br>sudo\
          \ mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600<br>wget\
          \ <a rel=\"nofollow\" href=\"https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb\"\
          >https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb</a><br>sudo\
          \ dpkg -i cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb<br>sudo\
          \ cp /var/cuda-repo-ubuntu2004-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/<br>sudo\
          \ apt-get update<br>sudo apt-get -y install cuda</p>\n<h2 id=\"set-environment\"\
          >set environment</h2>\n<p>export CUDA_HOME=/usr/local/cuda-12.1</p>\n<h1\
          \ id=\"however-theres-another-problem-here-the-code-again-raises-calledprocesserror\"\
          >however, there's another problem here. the code again raises CalledProcessError</h1>\n\
          <p>after several trial-and-errors, I found a solution by simply modifying\
          \ a line of code in /home/my_id/anaconda3/envs/my_env/lib/python3.9/site-packages/triton_pre_mlir/compiler.py<br>in\
          \ the function _build, comment out the\uFF1Acu_include_dir = os.path.join(cuda_home_dirs(),\
          \ \"include\")<br>add a new line \uFF1A cu_include_dir = \"/usr/local/cuda/include\"\
          <br>so, it look like this</p>\n<p>def _build(name, src, srcdir):<br>   \
          \ cuda_lib_dirs = libcuda_dirs()<br>    #cu_include_dir = os.path.join(cuda_home_dirs(),\
          \ \"include\")<br>    cu_include_dir = \"/usr/local/cuda/include\"</p>\n\
          <p>then it works !</p>\n"
        raw: "Thanks for @slaskaridis reply\n\nI made a stupid mistake by forgetting\
          \ to install CUDA (from nVidia).  \nPreviously, I installed cudatoolkit\
          \ using Conda, which worked fine, but it was limited to conda platform .\
          \ my thought about it the cause of the problem is that the gcc require system-wide\
          \ cuda to function. \nI didn't install CUDA from the NVIDIA website, which\
          \ I believe is causing the problem. You can check if CUDA is installed system-wide\
          \ by running `ls -l /usr/local` and verifying if there is a cuda folder\
          \ present.\n\n# Here's a workaround:\n## go to nVidia website, install cuda\
          \ (which i refer to as system-wide cuda)\nhttps://developer.nvidia.com/cuda-downloads\n\
          \n## so, you basically have to work through the command like the following\n\
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin\n\
          sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600\n\
          wget https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb\n\
          sudo dpkg -i cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb\n\
          sudo cp /var/cuda-repo-ubuntu2004-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/\n\
          sudo apt-get update\nsudo apt-get -y install cuda\n\n## set environment\n\
          export CUDA_HOME=/usr/local/cuda-12.1\n\n# however, there's another problem\
          \ here. the code again raises CalledProcessError\nafter several trial-and-errors,\
          \ I found a solution by simply modifying a line of code in /home/my_id/anaconda3/envs/my_env/lib/python3.9/site-packages/triton_pre_mlir/compiler.py\n\
          in the function _build, comment out the\uFF1Acu_include_dir = os.path.join(cuda_home_dirs(),\
          \ \"include\")\nadd a new line \uFF1A cu_include_dir = \"/usr/local/cuda/include\"\
          \nso, it look like this\n\ndef _build(name, src, srcdir):\n    cuda_lib_dirs\
          \ = libcuda_dirs()\n    #cu_include_dir = os.path.join(cuda_home_dirs(),\
          \ \"include\") \n    cu_include_dir = \"/usr/local/cuda/include\"\n\n\n\n\
          \nthen it works !\n"
        updatedAt: '2023-06-27T07:57:24.946Z'
      numEdits: 5
      reactions: []
    id: 649a4ffba37f2e73184dca90
    type: comment
  author: nps798
  content: "Thanks for @slaskaridis reply\n\nI made a stupid mistake by forgetting\
    \ to install CUDA (from nVidia).  \nPreviously, I installed cudatoolkit using\
    \ Conda, which worked fine, but it was limited to conda platform . my thought\
    \ about it the cause of the problem is that the gcc require system-wide cuda to\
    \ function. \nI didn't install CUDA from the NVIDIA website, which I believe is\
    \ causing the problem. You can check if CUDA is installed system-wide by running\
    \ `ls -l /usr/local` and verifying if there is a cuda folder present.\n\n# Here's\
    \ a workaround:\n## go to nVidia website, install cuda (which i refer to as system-wide\
    \ cuda)\nhttps://developer.nvidia.com/cuda-downloads\n\n## so, you basically have\
    \ to work through the command like the following\nwget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin\n\
    sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600\nwget\
    \ https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb\n\
    sudo dpkg -i cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb\nsudo\
    \ cp /var/cuda-repo-ubuntu2004-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/\n\
    sudo apt-get update\nsudo apt-get -y install cuda\n\n## set environment\nexport\
    \ CUDA_HOME=/usr/local/cuda-12.1\n\n# however, there's another problem here. the\
    \ code again raises CalledProcessError\nafter several trial-and-errors, I found\
    \ a solution by simply modifying a line of code in /home/my_id/anaconda3/envs/my_env/lib/python3.9/site-packages/triton_pre_mlir/compiler.py\n\
    in the function _build, comment out the\uFF1Acu_include_dir = os.path.join(cuda_home_dirs(),\
    \ \"include\")\nadd a new line \uFF1A cu_include_dir = \"/usr/local/cuda/include\"\
    \nso, it look like this\n\ndef _build(name, src, srcdir):\n    cuda_lib_dirs =\
    \ libcuda_dirs()\n    #cu_include_dir = os.path.join(cuda_home_dirs(), \"include\"\
    ) \n    cu_include_dir = \"/usr/local/cuda/include\"\n\n\n\n\nthen it works !\n"
  created_at: 2023-06-27 01:56:59+00:00
  edited: true
  hidden: false
  id: 649a4ffba37f2e73184dca90
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 66
repo_id: mosaicml/mpt-7b
repo_type: model
status: open
target_branch: null
title: 'After installing triton, running pipe() return "fatal error: cuda.h: No such
  file or directory " and "CalledProcessError: Command ''[''/usr/bin/gcc''...."'
