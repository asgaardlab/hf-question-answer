!!python/object:huggingface_hub.community.DiscussionWithDetails
author: AtlasUnified
conflicting_files: null
created_at: 2023-06-24 00:42:08+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239d8b3259cbaadbcb7adc/5eBhfiUdk8XiVl5ogyp8G.png?w=200&h=200&f=face
      fullname: Atlas Unified
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AtlasUnified
      type: user
    createdAt: '2023-06-24T01:42:08.000Z'
    data:
      edited: false
      editors:
      - AtlasUnified
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9337427616119385
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239d8b3259cbaadbcb7adc/5eBhfiUdk8XiVl5ogyp8G.png?w=200&h=200&f=face
          fullname: Atlas Unified
          isHf: false
          isPro: false
          name: AtlasUnified
          type: user
        html: '<p>No comments other than this is a pretty versatile model. </p>

          '
        raw: 'No comments other than this is a pretty versatile model. '
        updatedAt: '2023-06-24T01:42:08.290Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\u2764\uFE0F"
        users:
        - pankajmathur
    id: 649649f0b68b87c87b62f0e0
    type: comment
  author: AtlasUnified
  content: 'No comments other than this is a pretty versatile model. '
  created_at: 2023-06-24 00:42:08+00:00
  edited: false
  hidden: false
  id: 649649f0b68b87c87b62f0e0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239d8b3259cbaadbcb7adc/5eBhfiUdk8XiVl5ogyp8G.png?w=200&h=200&f=face
      fullname: Atlas Unified
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AtlasUnified
      type: user
    createdAt: '2023-06-24T01:42:20.000Z'
    data:
      status: closed
    id: 649649fcb4c0f362ebbb4230
    type: status-change
  author: AtlasUnified
  created_at: 2023-06-24 00:42:20+00:00
  id: 649649fcb4c0f362ebbb4230
  new_status: closed
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/f0b9bb3610282e0abc7937d443dc45a3.svg
      fullname: Pankaj Mathur
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: true
      name: pankajmathur
      type: user
    createdAt: '2023-06-24T03:30:24.000Z'
    data:
      edited: false
      editors:
      - pankajmathur
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9070407748222351
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/f0b9bb3610282e0abc7937d443dc45a3.svg
          fullname: Pankaj Mathur
          isHf: false
          isPro: true
          name: pankajmathur
          type: user
        html: "<p>Thank You\u2026 if possible please could you share some examples\
          \ you like. So it can benefits others too. </p>\n"
        raw: "Thank You\u2026 if possible please could you share some examples you\
          \ like. So it can benefits others too. "
        updatedAt: '2023-06-24T03:30:24.219Z'
      numEdits: 0
      reactions: []
    id: 649663502282a5257b448c6c
    type: comment
  author: pankajmathur
  content: "Thank You\u2026 if possible please could you share some examples you like.\
    \ So it can benefits others too. "
  created_at: 2023-06-24 02:30:24+00:00
  edited: false
  hidden: false
  id: 649663502282a5257b448c6c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239d8b3259cbaadbcb7adc/5eBhfiUdk8XiVl5ogyp8G.png?w=200&h=200&f=face
      fullname: Atlas Unified
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: AtlasUnified
      type: user
    createdAt: '2023-06-24T03:34:21.000Z'
    data:
      edited: true
      editors:
      - AtlasUnified
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8802484273910522
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/63239d8b3259cbaadbcb7adc/5eBhfiUdk8XiVl5ogyp8G.png?w=200&h=200&f=face
          fullname: Atlas Unified
          isHf: false
          isPro: false
          name: AtlasUnified
          type: user
        html: '<p>Certainly. I fed your model this prompt:</p>

          <p>system = "You are a language model capable of creating reasoning tasks.
          Each task should consist of a prompt, a step-by-step reasoning, and a final
          solution. Your strength is in brevity and answering directly, avoiding jargon
          such as ''sure, I can help, what would you like to know''."<br>instruction
          = "Generate 10 complex reasoning tasks on the topic of ''{topic}'' and sub-topic
          ''{subtopic}''. Each task should include a prompt (a question or problem),
          a step-by-step reasoning (a logical explanation of how to arrive at the
          solution), and a solution (the final answer to the problem). The output
          format should be a list like this: [''prompt'', ''step_by_step_reasoning'',
          ''solution'']. Do not deviate from the JSON format of {json.dumps({''id'':
          ''string'', ''task'': [{''prompt'': ''string'', ''reasoning'': ''string'',
          ''solution'': ''string''}]})}. Keep the tasks succinct, comprehensive, and
          avoid any unnecessary language. Keep all responses in JSON format and all
          on one line. Have these reasoning tasks on the PhD level and have high complexity
          factors."</p>

          <p>And got  this response, this was the third of 7 it generated:</p>

          <p>{topic}: determine the length of the shortest path from a given node
          to a specific node in a graph.<br>{prompt}: Write a program to find the
          length of the shortest path from a given node to a specific node in a graph.<br>{reasoning}:
          Define a function ''shortest_path'' that takes in a graph object and a starting
          node object. Use the A* algorithm to find the shortest path from the starting
          node to the given node. The shortest path is the length of the path returned
          by the ''shortest_path'' function.<br>{solution}: Define a graph object
          and a starting node object. Use the '' shortest_path'' function to find
          the shortest path from the starting node to a specific node. The shortest
          path is the length of the path returned by the ''shortest_path'' function.</p>

          <p>I''d have to rework the code to output to a text file for a JSONL but
          I''m certain I could use this model for synthetic data.</p>

          '
        raw: 'Certainly. I fed your model this prompt:


          system = "You are a language model capable of creating reasoning tasks.
          Each task should consist of a prompt, a step-by-step reasoning, and a final
          solution. Your strength is in brevity and answering directly, avoiding jargon
          such as ''sure, I can help, what would you like to know''."

          instruction = "Generate 10 complex reasoning tasks on the topic of ''{topic}''
          and sub-topic ''{subtopic}''. Each task should include a prompt (a question
          or problem), a step-by-step reasoning (a logical explanation of how to arrive
          at the solution), and a solution (the final answer to the problem). The
          output format should be a list like this: [''prompt'', ''step_by_step_reasoning'',
          ''solution'']. Do not deviate from the JSON format of {json.dumps({''id'':
          ''string'', ''task'': [{''prompt'': ''string'', ''reasoning'': ''string'',
          ''solution'': ''string''}]})}. Keep the tasks succinct, comprehensive, and
          avoid any unnecessary language. Keep all responses in JSON format and all
          on one line. Have these reasoning tasks on the PhD level and have high complexity
          factors."


          And got  this response, this was the third of 7 it generated:


          {topic}: determine the length of the shortest path from a given node to
          a specific node in a graph.

          {prompt}: Write a program to find the length of the shortest path from a
          given node to a specific node in a graph.

          {reasoning}: Define a function ''shortest_path'' that takes in a graph object
          and a starting node object. Use the A* algorithm to find the shortest path
          from the starting node to the given node. The shortest path is the length
          of the path returned by the ''shortest_path'' function.

          {solution}: Define a graph object and a starting node object. Use the ''
          shortest_path'' function to find the shortest path from the starting node
          to a specific node. The shortest path is the length of the path returned
          by the ''shortest_path'' function.


          I''d have to rework the code to output to a text file for a JSONL but I''m
          certain I could use this model for synthetic data.'
        updatedAt: '2023-06-24T03:36:17.126Z'
      numEdits: 1
      reactions:
      - count: 1
        reaction: "\u2764\uFE0F"
        users:
        - pankajmathur
    id: 6496643d90060ff18c317900
    type: comment
  author: AtlasUnified
  content: 'Certainly. I fed your model this prompt:


    system = "You are a language model capable of creating reasoning tasks. Each task
    should consist of a prompt, a step-by-step reasoning, and a final solution. Your
    strength is in brevity and answering directly, avoiding jargon such as ''sure,
    I can help, what would you like to know''."

    instruction = "Generate 10 complex reasoning tasks on the topic of ''{topic}''
    and sub-topic ''{subtopic}''. Each task should include a prompt (a question or
    problem), a step-by-step reasoning (a logical explanation of how to arrive at
    the solution), and a solution (the final answer to the problem). The output format
    should be a list like this: [''prompt'', ''step_by_step_reasoning'', ''solution''].
    Do not deviate from the JSON format of {json.dumps({''id'': ''string'', ''task'':
    [{''prompt'': ''string'', ''reasoning'': ''string'', ''solution'': ''string''}]})}.
    Keep the tasks succinct, comprehensive, and avoid any unnecessary language. Keep
    all responses in JSON format and all on one line. Have these reasoning tasks on
    the PhD level and have high complexity factors."


    And got  this response, this was the third of 7 it generated:


    {topic}: determine the length of the shortest path from a given node to a specific
    node in a graph.

    {prompt}: Write a program to find the length of the shortest path from a given
    node to a specific node in a graph.

    {reasoning}: Define a function ''shortest_path'' that takes in a graph object
    and a starting node object. Use the A* algorithm to find the shortest path from
    the starting node to the given node. The shortest path is the length of the path
    returned by the ''shortest_path'' function.

    {solution}: Define a graph object and a starting node object. Use the '' shortest_path''
    function to find the shortest path from the starting node to a specific node.
    The shortest path is the length of the path returned by the ''shortest_path''
    function.


    I''d have to rework the code to output to a text file for a JSONL but I''m certain
    I could use this model for synthetic data.'
  created_at: 2023-06-24 02:34:21+00:00
  edited: true
  hidden: false
  id: 6496643d90060ff18c317900
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: pankajmathur/orca_mini_13b
repo_type: model
status: closed
target_branch: null
title: Excellent model!
