!!python/object:huggingface_hub.community.DiscussionWithDetails
author: mrtnm
conflicting_files: null
created_at: 2023-08-23 10:53:38+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/be0f7f8011c1d6087b41f9d47d066f35.svg
      fullname: "Martin M\xFCller"
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: mrtnm
      type: user
    createdAt: '2023-08-23T11:53:38.000Z'
    data:
      edited: false
      editors:
      - mrtnm
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8433061242103577
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/be0f7f8011c1d6087b41f9d47d066f35.svg
          fullname: "Martin M\xFCller"
          isHf: false
          isPro: false
          name: mrtnm
          type: user
        html: '<p>The following code shows that the embedding matrix is 384 in its
          first dimension. </p>

          <pre><code>from transformers import T5ForConditionalGeneration


          model = T5ForConditionalGeneration.from_pretrained(''google/byt5-base'')

          model.get_input_embeddings().weight.shape

          </code></pre>

          <p>torch.Size([384, 1536])</p>

          <p>Why is this not 259, one vector for each possible value that one byte
          can represent, plus the 3 additional tokens mentioned in the paper?</p>

          <p>I could not find any mention of this in the paper.</p>

          '
        raw: "The following code shows that the embedding matrix is 384 in its first\
          \ dimension. \r\n```\r\nfrom transformers import T5ForConditionalGeneration\r\
          \n\r\nmodel = T5ForConditionalGeneration.from_pretrained('google/byt5-base')\r\
          \nmodel.get_input_embeddings().weight.shape\r\n```\r\ntorch.Size([384, 1536])\r\
          \n\r\nWhy is this not 259, one vector for each possible value that one byte\
          \ can represent, plus the 3 additional tokens mentioned in the paper?\r\n\
          \r\nI could not find any mention of this in the paper."
        updatedAt: '2023-08-23T11:53:38.525Z'
      numEdits: 0
      reactions: []
    id: 64e5f342dfceaace244e3b41
    type: comment
  author: mrtnm
  content: "The following code shows that the embedding matrix is 384 in its first\
    \ dimension. \r\n```\r\nfrom transformers import T5ForConditionalGeneration\r\n\
    \r\nmodel = T5ForConditionalGeneration.from_pretrained('google/byt5-base')\r\n\
    model.get_input_embeddings().weight.shape\r\n```\r\ntorch.Size([384, 1536])\r\n\
    \r\nWhy is this not 259, one vector for each possible value that one byte can\
    \ represent, plus the 3 additional tokens mentioned in the paper?\r\n\r\nI could\
    \ not find any mention of this in the paper."
  created_at: 2023-08-23 10:53:38+00:00
  edited: false
  hidden: false
  id: 64e5f342dfceaace244e3b41
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: google/byt5-base
repo_type: model
status: open
target_branch: null
title: Embedding matrix size
