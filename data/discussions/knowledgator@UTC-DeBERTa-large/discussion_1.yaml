!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Shivam098
conflicting_files: null
created_at: 2024-01-25 09:59:47+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/e5f690b23a12f95596765fbb8cee1436.svg
      fullname: Shivam Jha
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Shivam098
      type: user
    createdAt: '2024-01-25T09:59:47.000Z'
    data:
      edited: false
      editors:
      - Shivam098
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4752616286277771
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/e5f690b23a12f95596765fbb8cee1436.svg
          fullname: Shivam Jha
          isHf: false
          isPro: false
          name: Shivam098
          type: user
        html: '<p>How to get Entity with their corresponding value<br>I am using def
          process(text, prompt, threshold=0.5):<br>        input_ = f"{prompt}\n{text}"<br>        results
          = nlp(input_)<br>        processed_results = []<br>        prompt_length
          = len(prompt)<br>        for result in results:<br>            if result[''score'']
          &lt; threshold:<br>                continue<br>            start = result[''start'']
          - prompt_length<br>            if start &lt; 0:<br>                continue<br>            end
          = result[''end''] - prompt_length<br>            span = text[start:end]<br>            entity_type
          = result[''entity_group'']<br>            processed_result = {<br>                ''entity'':
          entity_type,<br>                ''span'': span,<br>                ''start'':
          start,<br>                ''end'': end,<br>                ''score'': result[''score'']<br>            }<br>            processed_results.append(processed_result)<br>        return
          processed_results</p>

          <pre><code>tokenizer = AutoTokenizer.from_pretrained("knowledgator/UTC-DeBERTa-large")

          model = AutoModelForTokenClassification.from_pretrained("knowledgator/UTC-DeBERTa-large")


          # Setting device to CPU

          device = -1  # -1 corresponds to CPU in Hugging Face''s pipeline


          nlp = pipeline("ner", model=model, tokenizer=tokenizer, aggregation_strategy=''first'',
          device=device)

          </code></pre>

          '
        raw: "How to get Entity with their corresponding value \r\nI am using def\
          \ process(text, prompt, threshold=0.5):\r\n        input_ = f\"{prompt}\\\
          n{text}\"\r\n        results = nlp(input_)\r\n        processed_results\
          \ = []\r\n        prompt_length = len(prompt)\r\n        for result in results:\r\
          \n            if result['score'] < threshold:\r\n                continue\r\
          \n            start = result['start'] - prompt_length\r\n            if\
          \ start < 0:\r\n                continue\r\n            end = result['end']\
          \ - prompt_length\r\n            span = text[start:end]\r\n            entity_type\
          \ = result['entity_group']\r\n            processed_result = {\r\n     \
          \           'entity': entity_type,\r\n                'span': span,\r\n\
          \                'start': start,\r\n                'end': end,\r\n    \
          \            'score': result['score']\r\n            }\r\n            processed_results.append(processed_result)\r\
          \n        return processed_results\r\n\r\n    tokenizer = AutoTokenizer.from_pretrained(\"\
          knowledgator/UTC-DeBERTa-large\")\r\n    model = AutoModelForTokenClassification.from_pretrained(\"\
          knowledgator/UTC-DeBERTa-large\")\r\n\r\n    # Setting device to CPU\r\n\
          \    device = -1  # -1 corresponds to CPU in Hugging Face's pipeline\r\n\
          \r\n    nlp = pipeline(\"ner\", model=model, tokenizer=tokenizer, aggregation_strategy='first',\
          \ device=device)"
        updatedAt: '2024-01-25T09:59:47.799Z'
      numEdits: 0
      reactions: []
    id: 65b231137cd0069ad6e8fbe1
    type: comment
  author: Shivam098
  content: "How to get Entity with their corresponding value \r\nI am using def process(text,\
    \ prompt, threshold=0.5):\r\n        input_ = f\"{prompt}\\n{text}\"\r\n     \
    \   results = nlp(input_)\r\n        processed_results = []\r\n        prompt_length\
    \ = len(prompt)\r\n        for result in results:\r\n            if result['score']\
    \ < threshold:\r\n                continue\r\n            start = result['start']\
    \ - prompt_length\r\n            if start < 0:\r\n                continue\r\n\
    \            end = result['end'] - prompt_length\r\n            span = text[start:end]\r\
    \n            entity_type = result['entity_group']\r\n            processed_result\
    \ = {\r\n                'entity': entity_type,\r\n                'span': span,\r\
    \n                'start': start,\r\n                'end': end,\r\n         \
    \       'score': result['score']\r\n            }\r\n            processed_results.append(processed_result)\r\
    \n        return processed_results\r\n\r\n    tokenizer = AutoTokenizer.from_pretrained(\"\
    knowledgator/UTC-DeBERTa-large\")\r\n    model = AutoModelForTokenClassification.from_pretrained(\"\
    knowledgator/UTC-DeBERTa-large\")\r\n\r\n    # Setting device to CPU\r\n    device\
    \ = -1  # -1 corresponds to CPU in Hugging Face's pipeline\r\n\r\n    nlp = pipeline(\"\
    ner\", model=model, tokenizer=tokenizer, aggregation_strategy='first', device=device)"
  created_at: 2024-01-25 09:59:47+00:00
  edited: false
  hidden: false
  id: 65b231137cd0069ad6e8fbe1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658166666371-noauth.png?w=200&h=200&f=face
      fullname: Stepanov
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: Ihor
      type: user
    createdAt: '2024-01-25T11:30:49.000Z'
    data:
      edited: false
      editors:
      - Ihor
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8791698813438416
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1658166666371-noauth.png?w=200&h=200&f=face
          fullname: Stepanov
          isHf: false
          isPro: false
          name: Ihor
          type: user
        html: "<p>To get entities that represent particular classes, you can construct\
          \ your own prompt like here:</p>\n<pre><code class=\"language-python\">prompt\
          \ = <span class=\"hljs-string\">\"\"\"Identify the following entity classes\
          \ in the text:</span>\n<span class=\"hljs-string\">computer</span>\n<span\
          \ class=\"hljs-string\"></span>\n<span class=\"hljs-string\">Text:</span>\n\
          <span class=\"hljs-string\">\"\"\"</span>\ntext = <span class=\"hljs-string\"\
          >\"\"\"Apple was founded as Apple Computer Company on April 1, 1976, by\
          \ Steve Wozniak, Steve Jobs (1955\u20132011) and Ronald Wayne to develop\
          \ and sell Wozniak's Apple I personal computer.</span>\n<span class=\"hljs-string\"\
          >It was incorporated by Jobs and Wozniak as Apple Computer, Inc. in 1977.\
          \ The company's second computer, the Apple II, became a best seller and\
          \ one of the first mass-produced microcomputers.</span>\n<span class=\"\
          hljs-string\">Apple went public in 1980 to instant financial success.\"\"\
          \"</span>\n\nresults = process(text, prompt)\n\n<span class=\"hljs-built_in\"\
          >print</span>(results)\n</code></pre>\n<p>I  recommend writing a simple\
          \ function like this, it will extract all entities that belong to classes\
          \ you put:</p>\n<pre><code class=\"language-python\"><span class=\"hljs-keyword\"\
          >def</span> <span class=\"hljs-title function_\">ner</span>(<span class=\"\
          hljs-params\">class_, text</span>):\n    prompt = <span class=\"hljs-string\"\
          >f\"\"\"Identify entities in the text having the following classes:</span>\n\
          <span class=\"hljs-string\"><span class=\"hljs-subst\">{class_}</span></span>\n\
          <span class=\"hljs-string\">Text:</span>\n<span class=\"hljs-string\">\"\
          \"\"</span>\n    results = process(text, prompt)\n    <span class=\"hljs-keyword\"\
          >return</span> results\n\nner(class_ = <span class=\"hljs-string\">'company'</span>,\
          \ text = text) \n</code></pre>\n<p>To see more advanced implementation,\
          \ you can visit our <a href=\"https://huggingface.co/spaces/knowledgator/0-shot-NER/blob/main/ner.py\"\
          >Gradio Space</a>.</p>\n<p>We are working on the framework to simplify usage,\
          \ covering more use-cases.</p>\n"
        raw: "To get entities that represent particular classes, you can construct\
          \ your own prompt like here:\n\n```python\nprompt = \"\"\"Identify the following\
          \ entity classes in the text:\ncomputer\n\nText:\n\"\"\"\ntext = \"\"\"\
          Apple was founded as Apple Computer Company on April 1, 1976, by Steve Wozniak,\
          \ Steve Jobs (1955\u20132011) and Ronald Wayne to develop and sell Wozniak's\
          \ Apple I personal computer.\nIt was incorporated by Jobs and Wozniak as\
          \ Apple Computer, Inc. in 1977. The company's second computer, the Apple\
          \ II, became a best seller and one of the first mass-produced microcomputers.\n\
          Apple went public in 1980 to instant financial success.\"\"\"\n\nresults\
          \ = process(text, prompt)\n\nprint(results)\n```\n\nI  recommend writing\
          \ a simple function like this, it will extract all entities that belong\
          \ to classes you put:\n\n```python\ndef ner(class_, text):\n    prompt =\
          \ f\"\"\"Identify entities in the text having the following classes:\n{class_}\n\
          Text:\n\"\"\"\n    results = process(text, prompt)\n    return results\n\
          \nner(class_ = 'company', text = text) \n```\n\nTo see more advanced implementation,\
          \ you can visit our [Gradio Space](https://huggingface.co/spaces/knowledgator/0-shot-NER/blob/main/ner.py).\n\
          \nWe are working on the framework to simplify usage, covering more use-cases."
        updatedAt: '2024-01-25T11:30:49.817Z'
      numEdits: 0
      reactions: []
    id: 65b24669c8a577067ddae29a
    type: comment
  author: Ihor
  content: "To get entities that represent particular classes, you can construct your\
    \ own prompt like here:\n\n```python\nprompt = \"\"\"Identify the following entity\
    \ classes in the text:\ncomputer\n\nText:\n\"\"\"\ntext = \"\"\"Apple was founded\
    \ as Apple Computer Company on April 1, 1976, by Steve Wozniak, Steve Jobs (1955\u2013\
    2011) and Ronald Wayne to develop and sell Wozniak's Apple I personal computer.\n\
    It was incorporated by Jobs and Wozniak as Apple Computer, Inc. in 1977. The company's\
    \ second computer, the Apple II, became a best seller and one of the first mass-produced\
    \ microcomputers.\nApple went public in 1980 to instant financial success.\"\"\
    \"\n\nresults = process(text, prompt)\n\nprint(results)\n```\n\nI  recommend writing\
    \ a simple function like this, it will extract all entities that belong to classes\
    \ you put:\n\n```python\ndef ner(class_, text):\n    prompt = f\"\"\"Identify\
    \ entities in the text having the following classes:\n{class_}\nText:\n\"\"\"\n\
    \    results = process(text, prompt)\n    return results\n\nner(class_ = 'company',\
    \ text = text) \n```\n\nTo see more advanced implementation, you can visit our\
    \ [Gradio Space](https://huggingface.co/spaces/knowledgator/0-shot-NER/blob/main/ner.py).\n\
    \nWe are working on the framework to simplify usage, covering more use-cases."
  created_at: 2024-01-25 11:30:49+00:00
  edited: false
  hidden: false
  id: 65b24669c8a577067ddae29a
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: knowledgator/UTC-DeBERTa-large
repo_type: model
status: open
target_branch: null
title: How to get Entity with their corresponding value
