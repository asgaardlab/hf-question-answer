!!python/object:huggingface_hub.community.DiscussionWithDetails
author: pzmudzinski
conflicting_files: null
created_at: 2023-11-24 10:08:35+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T10:08:35.000Z'
    data:
      edited: true
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9578732252120972
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: "<p>I deployed it using Inference Endpoints but whenever I am doing\
          \ POST to deployed endpoint with an image as a body it's throwing this error:</p>\n\
          <pre><code>{\n    \"error\": \"'Image' object is not subscriptable\"\n}\n\
          </code></pre>\n<p>Should be it be used differently there? (decoded to base64\
          \ and send as a json would be my guess?)</p>\n<p>Trying to get the same\
          \ response as using Inference API but in own deployment so there won't be\
          \ downtime:</p>\n<pre><code>[\n    {\n        \"score\": 1.0,\n        \"\
          label\": \"Background\",\n        \"mask\": ...\n    },\n    {\n       \
          \ \"score\": 1.0,\n        \"label\": \"Hair\",\n        \"mask\": ...\n\
          \   },\n...\n]\n</code></pre>\n"
        raw: "I deployed it using Inference Endpoints but whenever I am doing POST\
          \ to deployed endpoint with an image as a body it's throwing this error:\n\
          ```\n{\n    \"error\": \"'Image' object is not subscriptable\"\n}\n```\n\
          Should be it be used differently there? (decoded to base64 and send as a\
          \ json would be my guess?)\n\nTrying to get the same response as using Inference\
          \ API but in own deployment so there won't be downtime:\n```\n[\n    {\n\
          \        \"score\": 1.0,\n        \"label\": \"Background\",\n        \"\
          mask\": ...\n    },\n    {\n        \"score\": 1.0,\n        \"label\":\
          \ \"Hair\",\n        \"mask\": ...\n   },\n...\n]\n```"
        updatedAt: '2023-11-24T10:16:58.219Z'
      numEdits: 1
      reactions: []
    id: 65607623dd4d448b8e5cb368
    type: comment
  author: pzmudzinski
  content: "I deployed it using Inference Endpoints but whenever I am doing POST to\
    \ deployed endpoint with an image as a body it's throwing this error:\n```\n{\n\
    \    \"error\": \"'Image' object is not subscriptable\"\n}\n```\nShould be it\
    \ be used differently there? (decoded to base64 and send as a json would be my\
    \ guess?)\n\nTrying to get the same response as using Inference API but in own\
    \ deployment so there won't be downtime:\n```\n[\n    {\n        \"score\": 1.0,\n\
    \        \"label\": \"Background\",\n        \"mask\": ...\n    },\n    {\n  \
    \      \"score\": 1.0,\n        \"label\": \"Hair\",\n        \"mask\": ...\n\
    \   },\n...\n]\n```"
  created_at: 2023-11-24 10:08:35+00:00
  edited: true
  hidden: false
  id: 65607623dd4d448b8e5cb368
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T10:23:54.000Z'
    data:
      edited: true
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9202359318733215
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>If you take a look in the "files and versions" tab of the model,
          it will have a "handler.py" file which is what endpoints uses I think. It
          expects a dictionary where the image has the key "image" so that might be
          causing the issue. So I would guess that''s the issue, not sending the model
          in a dictionary format. From the code the image should also be encoded to
          base 64. But do just look at the handler code <a href="https://huggingface.co/mattmdjaga/segformer_b2_clothes/blob/main/handler.py">https://huggingface.co/mattmdjaga/segformer_b2_clothes/blob/main/handler.py</a>
          to see what''s going on.</p>

          <p>Also, feel free to fork the model and change to handler.py file to suit
          your needs. I initially made it over a year ago for a work project so it
          might not be the best fit for all use cases.</p>

          '
        raw: 'If you take a look in the "files and versions" tab of the model, it
          will have a "handler.py" file which is what endpoints uses I think. It expects
          a dictionary where the image has the key "image" so that might be causing
          the issue. So I would guess that''s the issue, not sending the model in
          a dictionary format. From the code the image should also be encoded to base
          64. But do just look at the handler code https://huggingface.co/mattmdjaga/segformer_b2_clothes/blob/main/handler.py
          to see what''s going on.


          Also, feel free to fork the model and change to handler.py file to suit
          your needs. I initially made it over a year ago for a work project so it
          might not be the best fit for all use cases.'
        updatedAt: '2023-11-24T10:25:54.699Z'
      numEdits: 1
      reactions: []
    id: 656079ba3c4840dba03661a1
    type: comment
  author: mattmdjaga
  content: 'If you take a look in the "files and versions" tab of the model, it will
    have a "handler.py" file which is what endpoints uses I think. It expects a dictionary
    where the image has the key "image" so that might be causing the issue. So I would
    guess that''s the issue, not sending the model in a dictionary format. From the
    code the image should also be encoded to base 64. But do just look at the handler
    code https://huggingface.co/mattmdjaga/segformer_b2_clothes/blob/main/handler.py
    to see what''s going on.


    Also, feel free to fork the model and change to handler.py file to suit your needs.
    I initially made it over a year ago for a work project so it might not be the
    best fit for all use cases.'
  created_at: 2023-11-24 10:23:54+00:00
  edited: true
  hidden: false
  id: 656079ba3c4840dba03661a1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T10:26:51.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8437696695327759
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: "<p>Thank for quick response, after trying it out I am getting as a\
          \ response just huge array of array of numbers:</p>\n<pre><code>[\n    [\n\
          \        0,\n        0,\n        0,\n        0,\n       ...\n</code></pre>\n\
          <p>How can I convert it to format coming from prototype API:</p>\n<pre><code>\
          \    {\n        \"score\": 1.0,\n        \"label\": \"Background\",\n  \
          \      \"mask\": ...\n    },\n</code></pre>\n"
        raw: "Thank for quick response, after trying it out I am getting as a response\
          \ just huge array of array of numbers:\n```\n[\n    [\n        0,\n    \
          \    0,\n        0,\n        0,\n       ...\n```\n\nHow can I convert it\
          \ to format coming from prototype API:\n```\n    {\n        \"score\": 1.0,\n\
          \        \"label\": \"Background\",\n        \"mask\": ...\n    },\n```"
        updatedAt: '2023-11-24T10:26:51.211Z'
      numEdits: 0
      reactions: []
    id: 65607a6bdd4d448b8e5d37b9
    type: comment
  author: pzmudzinski
  content: "Thank for quick response, after trying it out I am getting as a response\
    \ just huge array of array of numbers:\n```\n[\n    [\n        0,\n        0,\n\
    \        0,\n        0,\n       ...\n```\n\nHow can I convert it to format coming\
    \ from prototype API:\n```\n    {\n        \"score\": 1.0,\n        \"label\"\
    : \"Background\",\n        \"mask\": ...\n    },\n```"
  created_at: 2023-11-24 10:26:51+00:00
  edited: false
  hidden: false
  id: 65607a6bdd4d448b8e5d37b9
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T10:30:20.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8765379786491394
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>so this thread <a href="https://huggingface.co/mattmdjaga/segformer_b2_clothes/discussions/17">https://huggingface.co/mattmdjaga/segformer_b2_clothes/discussions/17</a>
          should help you get everything except the mask. I don''t actually know what
          the mask encoding is. You''ll also need to convert the list to a tensor
          to follow the thread. </p>

          '
        raw: 'so this thread https://huggingface.co/mattmdjaga/segformer_b2_clothes/discussions/17
          should help you get everything except the mask. I don''t actually know what
          the mask encoding is. You''ll also need to convert the list to a tensor
          to follow the thread. '
        updatedAt: '2023-11-24T10:30:20.485Z'
      numEdits: 0
      reactions: []
    id: 65607b3c5b627f441ae4ac36
    type: comment
  author: mattmdjaga
  content: 'so this thread https://huggingface.co/mattmdjaga/segformer_b2_clothes/discussions/17
    should help you get everything except the mask. I don''t actually know what the
    mask encoding is. You''ll also need to convert the list to a tensor to follow
    the thread. '
  created_at: 2023-11-24 10:30:20+00:00
  edited: false
  hidden: false
  id: 65607b3c5b627f441ae4ac36
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T10:35:32.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9094102382659912
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: "<p>This is response format:</p>\n<pre><code>label\tThe label for the\
          \ class (model specific) of a segment.\nscore\tA float that represents how\
          \ likely it is that the segment belongs to the given class.\nmask\tA str\
          \ (base64 str of a single channel black-and-white img) representing the\
          \ mask of a segment.\n</code></pre>\n<p>So there is no way to somehow use\
          \ whatever huggingface is using to implement that behavior? </p>\n"
        raw: "This is response format:\n```\nlabel\tThe label for the class (model\
          \ specific) of a segment.\nscore\tA float that represents how likely it\
          \ is that the segment belongs to the given class.\nmask\tA str (base64 str\
          \ of a single channel black-and-white img) representing the mask of a segment.\n\
          ```\n\nSo there is no way to somehow use whatever huggingface is using to\
          \ implement that behavior? "
        updatedAt: '2023-11-24T10:35:32.531Z'
      numEdits: 0
      reactions: []
    id: 65607c74d3f1b94f3b95c236
    type: comment
  author: pzmudzinski
  content: "This is response format:\n```\nlabel\tThe label for the class (model specific)\
    \ of a segment.\nscore\tA float that represents how likely it is that the segment\
    \ belongs to the given class.\nmask\tA str (base64 str of a single channel black-and-white\
    \ img) representing the mask of a segment.\n```\n\nSo there is no way to somehow\
    \ use whatever huggingface is using to implement that behavior? "
  created_at: 2023-11-24 10:35:32+00:00
  edited: false
  hidden: false
  id: 65607c74d3f1b94f3b95c236
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T10:39:57.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5401955246925354
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: "<p>Oh, if that's the case then you could loop for every present label\
          \ in the prediction and encode array[array==label_int]. Does that make sense?\
          \ so something like </p>\n<pre><code>id2label = model.config.id2label\n\
          pred_ids = pred_seg.unique()\noutput = []\nfor id in pred_ids:\n    mask\
          \ = pred_seg[pred_seg==id]\n    output.append({\n        \"score\": 1,\n\
          \        \"label\": id2label[id.item()],\n        \"mask\": encode.base64(mask)\n\
          \    })\n</code></pre>\n"
        raw: "Oh, if that's the case then you could loop for every present label in\
          \ the prediction and encode array[array==label_int]. Does that make sense?\
          \ so something like \n\n```\nid2label = model.config.id2label\npred_ids\
          \ = pred_seg.unique()\noutput = []\nfor id in pred_ids:\n    mask = pred_seg[pred_seg==id]\n\
          \    output.append({\n        \"score\": 1,\n        \"label\": id2label[id.item()],\n\
          \        \"mask\": encode.base64(mask)\n    })\n```"
        updatedAt: '2023-11-24T10:39:57.345Z'
      numEdits: 0
      reactions: []
    id: 65607d7d47d95544efa2f03a
    type: comment
  author: mattmdjaga
  content: "Oh, if that's the case then you could loop for every present label in\
    \ the prediction and encode array[array==label_int]. Does that make sense? so\
    \ something like \n\n```\nid2label = model.config.id2label\npred_ids = pred_seg.unique()\n\
    output = []\nfor id in pred_ids:\n    mask = pred_seg[pred_seg==id]\n    output.append({\n\
    \        \"score\": 1,\n        \"label\": id2label[id.item()],\n        \"mask\"\
    : encode.base64(mask)\n    })\n```"
  created_at: 2023-11-24 10:39:57+00:00
  edited: false
  hidden: false
  id: 65607d7d47d95544efa2f03a
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T10:52:41.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8191134929656982
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: '<p>Ok so you are saying I should :</p>

          <ol>

          <li>download this repository,</li>

          <li>make those changes in <code>handler.py</code> (I assume those changes
          should replace line 39)</li>

          <li>create own model in hugging faces </li>

          <li>push changed codebase</li>

          <li>re-deploy it using Inference Endpoints</li>

          </ol>

          <p>Is that correct or I am missing something?</p>

          '
        raw: "Ok so you are saying I should :\n1. download this repository,\n2. make\
          \ those changes in `handler.py` (I assume those changes should replace line\
          \ 39)\n3. create own model in hugging faces \n4. push changed codebase\n\
          5. re-deploy it using Inference Endpoints\n\nIs that correct or I am missing\
          \ something?"
        updatedAt: '2023-11-24T10:52:41.383Z'
      numEdits: 0
      reactions: []
    id: 65608079dd4d448b8e5e1f2f
    type: comment
  author: pzmudzinski
  content: "Ok so you are saying I should :\n1. download this repository,\n2. make\
    \ those changes in `handler.py` (I assume those changes should replace line 39)\n\
    3. create own model in hugging faces \n4. push changed codebase\n5. re-deploy\
    \ it using Inference Endpoints\n\nIs that correct or I am missing something?"
  created_at: 2023-11-24 10:52:41+00:00
  edited: false
  hidden: false
  id: 65608079dd4d448b8e5e1f2f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T10:57:24.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9628109931945801
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>Yes, you can also test the handler method before deploying to make
          sure it runs correctly, there''s HF documentation on that. OR you could
          just use the current handler and add those steps as post-processing steps.
          They don''t require a gpu so it might be quicker to add that as post-processing
          in your code instead of forking everything.</p>

          '
        raw: Yes, you can also test the handler method before deploying to make sure
          it runs correctly, there's HF documentation on that. OR you could just use
          the current handler and add those steps as post-processing steps. They don't
          require a gpu so it might be quicker to add that as post-processing in your
          code instead of forking everything.
        updatedAt: '2023-11-24T10:57:24.735Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - pzmudzinski
    id: 656081942cd8dac5682bb2a6
    type: comment
  author: mattmdjaga
  content: Yes, you can also test the handler method before deploying to make sure
    it runs correctly, there's HF documentation on that. OR you could just use the
    current handler and add those steps as post-processing steps. They don't require
    a gpu so it might be quicker to add that as post-processing in your code instead
    of forking everything.
  created_at: 2023-11-24 10:57:24+00:00
  edited: false
  hidden: false
  id: 656081942cd8dac5682bb2a6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T11:19:49.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9806907176971436
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: '<p>let me try with second option, will let you know how it goes. thanks
          for help!<br>I also reached to HF support if there is option to get the
          same behavior as on their prototyping API.</p>

          '
        raw: 'let me try with second option, will let you know how it goes. thanks
          for help!

          I also reached to HF support if there is option to get the same behavior
          as on their prototyping API.'
        updatedAt: '2023-11-24T11:19:49.845Z'
      numEdits: 0
      reactions: []
    id: 656086d52324e4d25c819127
    type: comment
  author: pzmudzinski
  content: 'let me try with second option, will let you know how it goes. thanks for
    help!

    I also reached to HF support if there is option to get the same behavior as on
    their prototyping API.'
  created_at: 2023-11-24 11:19:49+00:00
  edited: false
  hidden: false
  id: 656086d52324e4d25c819127
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T11:44:39.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9025630950927734
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: '<p>one more thing - what did you mean by encoding mask tensor into
          base64 as <code>encode.base64(mask)</code>?<br>what is "encode.base"?<br>shouldn''t
          it look like something here?<br><a rel="nofollow" href="https://stackoverflow.com/questions/75244472/how-to-convert-torch-tensor-to-base64-image">https://stackoverflow.com/questions/75244472/how-to-convert-torch-tensor-to-base64-image</a></p>

          '
        raw: "one more thing - what did you mean by encoding mask tensor into base64\
          \ as `encode.base64(mask)`?\nwhat is \"encode.base\"?\nshouldn't it look\
          \ like something here? \nhttps://stackoverflow.com/questions/75244472/how-to-convert-torch-tensor-to-base64-image"
        updatedAt: '2023-11-24T11:44:39.975Z'
      numEdits: 0
      reactions: []
    id: 65608ca778f6dd8d8355b7a8
    type: comment
  author: pzmudzinski
  content: "one more thing - what did you mean by encoding mask tensor into base64\
    \ as `encode.base64(mask)`?\nwhat is \"encode.base\"?\nshouldn't it look like\
    \ something here? \nhttps://stackoverflow.com/questions/75244472/how-to-convert-torch-tensor-to-base64-image"
  created_at: 2023-11-24 11:44:39+00:00
  edited: false
  hidden: false
  id: 65608ca778f6dd8d8355b7a8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T11:49:05.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9389221668243408
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>Yes, that stackoverflow is what i''m talking about, you should double
          check that you can encode and then decode a test image and that the decoded
          image is the same as input image.</p>

          '
        raw: Yes, that stackoverflow is what i'm talking about, you should double
          check that you can encode and then decode a test image and that the decoded
          image is the same as input image.
        updatedAt: '2023-11-24T11:49:05.420Z'
      numEdits: 0
      reactions: []
    id: 65608db1b2764ca06fd2d603
    type: comment
  author: mattmdjaga
  content: Yes, that stackoverflow is what i'm talking about, you should double check
    that you can encode and then decode a test image and that the decoded image is
    the same as input image.
  created_at: 2023-11-24 11:49:05+00:00
  edited: false
  hidden: false
  id: 65608db1b2764ca06fd2d603
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T11:59:18.000Z'
    data:
      edited: true
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4499705135822296
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: "<p>This stack overflow example is throwing error:</p>\n<pre><code>\
          \    pil_image = transform(mask)\n                ^^^^^^^^^^^^^^^\n    return\
          \ F.to_pil_image(pic, self.mode)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
          \    raise ValueError(f\"pic should be 2/3 dimensional. Got {pic.ndimension()}\
          \ dimensions.\")\n</code></pre>\n<p>I assume mask tensor has one dimension\
          \ - any idea how to convert it to 3 dimensions?</p>\n"
        raw: "This stack overflow example is throwing error:\n```\n    pil_image =\
          \ transform(mask)\n                ^^^^^^^^^^^^^^^\n    return F.to_pil_image(pic,\
          \ self.mode)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    raise ValueError(f\"\
          pic should be 2/3 dimensional. Got {pic.ndimension()} dimensions.\")\n```\n\
          I assume mask tensor has one dimension - any idea how to convert it to 3\
          \ dimensions?"
        updatedAt: '2023-11-24T12:00:27.939Z'
      numEdits: 1
      reactions: []
    id: 65609016280cd6b7106ee0e5
    type: comment
  author: pzmudzinski
  content: "This stack overflow example is throwing error:\n```\n    pil_image = transform(mask)\n\
    \                ^^^^^^^^^^^^^^^\n    return F.to_pil_image(pic, self.mode)\n\
    \           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    raise ValueError(f\"pic should\
    \ be 2/3 dimensional. Got {pic.ndimension()} dimensions.\")\n```\nI assume mask\
    \ tensor has one dimension - any idea how to convert it to 3 dimensions?"
  created_at: 2023-11-24 11:59:18+00:00
  edited: true
  hidden: false
  id: 65609016280cd6b7106ee0e5
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T12:40:21.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7415745258331299
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>you can avoid using torch transforms by turning the tensor into
          numpy like tensor.numpy() then turn the array to a PIL image like Image.fromarray(np_array)</p>

          '
        raw: you can avoid using torch transforms by turning the tensor into numpy
          like tensor.numpy() then turn the array to a PIL image like Image.fromarray(np_array)
        updatedAt: '2023-11-24T12:40:21.629Z'
      numEdits: 0
      reactions: []
    id: 656099b52cd8dac5682fe1b3
    type: comment
  author: mattmdjaga
  content: you can avoid using torch transforms by turning the tensor into numpy like
    tensor.numpy() then turn the array to a PIL image like Image.fromarray(np_array)
  created_at: 2023-11-24 12:40:21+00:00
  edited: false
  hidden: false
  id: 656099b52cd8dac5682fe1b3
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-24T13:38:06.000Z'
    data:
      edited: true
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.4642648994922638
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: "<p>Ok I came up with something like that (which would serve as flask\
          \ proxy converting HF endpoint into the same format as prototyping API):</p>\n\
          <pre><code>from flask import Flask\nfrom flask import request\nfrom PIL\
          \ import Image\nimport requests\nimport base64\nimport torch\nfrom io import\
          \ BytesIO\nimport numpy as np\nimport os\n\napp = Flask(__name__)\n\nAPI_URL\
          \ = os.environ.get(\"API_URL\")\nheaders = {\n    \"Authorization\": f\"\
          Bearer {os.environ.get('API_TOKEN')}\",\n}\n\nid2label = {\n    \"0\": \"\
          Background\",\n    \"1\": \"Hat\",\n    \"2\": \"Hair\",\n    \"3\": \"\
          Sunglasses\",\n    \"4\": \"Upper-clothes\",\n    \"5\": \"Skirt\",\n  \
          \  \"6\": \"Pants\",\n    \"7\": \"Dress\",\n    \"8\": \"Belt\",\n    \"\
          9\": \"Left-shoe\",\n    \"10\": \"Right-shoe\",\n    \"11\": \"Face\",\n\
          \    \"12\": \"Left-leg\",\n    \"13\": \"Right-leg\",\n    \"14\": \"Left-arm\"\
          ,\n    \"15\": \"Right-arm\",\n    \"16\": \"Bag\",\n    \"17\": \"Scarf\"\
          \n  }\n\n<span data-props=\"{&quot;user&quot;:&quot;app&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/app\">@<span class=\"\
          underline\">app</span></a></span>\n\n\t</span></span>.post(\"/classify\"\
          )\ndef hello_world():\n    input = request.json\n    response = requests.post(API_URL,\
          \ headers=headers, json=input)\n    json = response.json()\n    pred_seg\
          \ = torch.tensor(json)\n    pred_ids = pred_seg.unique()\n    output = []\n\
          \    for id in pred_ids:\n        mask = (pred_seg == id)\n        pil_image\
          \ = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n        base64_string\
          \ = image_to_base_64(pil_image)\n        output.append({\n            \"\
          score\": 1,\n            \"label\": id2label[str(id.item())],\n        \
          \    \"mask\": base64_string\n        })\n    return output\n\ndef image_to_base_64(image):\n\
          \  buffered = BytesIO()\n  image.save(buffered, format=\"PNG\")\n  img_str\
          \ = base64.b64encode(buffered.getvalue())\n  return img_str.decode('utf-8')\n\
          </code></pre>\n<p>Looks good? It still does not require GPU?</p>\n"
        raw: "Ok I came up with something like that (which would serve as flask proxy\
          \ converting HF endpoint into the same format as prototyping API):\n```\n\
          from flask import Flask\nfrom flask import request\nfrom PIL import Image\n\
          import requests\nimport base64\nimport torch\nfrom io import BytesIO\nimport\
          \ numpy as np\nimport os\n\napp = Flask(__name__)\n\nAPI_URL = os.environ.get(\"\
          API_URL\")\nheaders = {\n\t\"Authorization\": f\"Bearer {os.environ.get('API_TOKEN')}\"\
          ,\n}\n\nid2label = {\n    \"0\": \"Background\",\n    \"1\": \"Hat\",\n\
          \    \"2\": \"Hair\",\n    \"3\": \"Sunglasses\",\n    \"4\": \"Upper-clothes\"\
          ,\n    \"5\": \"Skirt\",\n    \"6\": \"Pants\",\n    \"7\": \"Dress\",\n\
          \    \"8\": \"Belt\",\n    \"9\": \"Left-shoe\",\n    \"10\": \"Right-shoe\"\
          ,\n    \"11\": \"Face\",\n    \"12\": \"Left-leg\",\n    \"13\": \"Right-leg\"\
          ,\n    \"14\": \"Left-arm\",\n    \"15\": \"Right-arm\",\n    \"16\": \"\
          Bag\",\n    \"17\": \"Scarf\"\n  }\n\n@app.post(\"/classify\")\ndef hello_world():\n\
          \    input = request.json\n    response = requests.post(API_URL, headers=headers,\
          \ json=input)\n    json = response.json()\n    pred_seg = torch.tensor(json)\n\
          \    pred_ids = pred_seg.unique()\n    output = []\n    for id in pred_ids:\n\
          \        mask = (pred_seg == id)\n        pil_image = Image.fromarray((mask\
          \ * 255).numpy().astype(np.uint8))\n        base64_string = image_to_base_64(pil_image)\n\
          \        output.append({\n            \"score\": 1,\n            \"label\"\
          : id2label[str(id.item())],\n            \"mask\": base64_string\n     \
          \   })\n    return output\n\ndef image_to_base_64(image):\n  buffered =\
          \ BytesIO()\n  image.save(buffered, format=\"PNG\")\n  img_str = base64.b64encode(buffered.getvalue())\n\
          \  return img_str.decode('utf-8')\n```\n\nLooks good? It still does not\
          \ require GPU?"
        updatedAt: '2023-11-24T13:38:38.483Z'
      numEdits: 1
      reactions: []
    id: 6560a73e8fb38d71f7149721
    type: comment
  author: pzmudzinski
  content: "Ok I came up with something like that (which would serve as flask proxy\
    \ converting HF endpoint into the same format as prototyping API):\n```\nfrom\
    \ flask import Flask\nfrom flask import request\nfrom PIL import Image\nimport\
    \ requests\nimport base64\nimport torch\nfrom io import BytesIO\nimport numpy\
    \ as np\nimport os\n\napp = Flask(__name__)\n\nAPI_URL = os.environ.get(\"API_URL\"\
    )\nheaders = {\n\t\"Authorization\": f\"Bearer {os.environ.get('API_TOKEN')}\"\
    ,\n}\n\nid2label = {\n    \"0\": \"Background\",\n    \"1\": \"Hat\",\n    \"\
    2\": \"Hair\",\n    \"3\": \"Sunglasses\",\n    \"4\": \"Upper-clothes\",\n  \
    \  \"5\": \"Skirt\",\n    \"6\": \"Pants\",\n    \"7\": \"Dress\",\n    \"8\"\
    : \"Belt\",\n    \"9\": \"Left-shoe\",\n    \"10\": \"Right-shoe\",\n    \"11\"\
    : \"Face\",\n    \"12\": \"Left-leg\",\n    \"13\": \"Right-leg\",\n    \"14\"\
    : \"Left-arm\",\n    \"15\": \"Right-arm\",\n    \"16\": \"Bag\",\n    \"17\"\
    : \"Scarf\"\n  }\n\n@app.post(\"/classify\")\ndef hello_world():\n    input =\
    \ request.json\n    response = requests.post(API_URL, headers=headers, json=input)\n\
    \    json = response.json()\n    pred_seg = torch.tensor(json)\n    pred_ids =\
    \ pred_seg.unique()\n    output = []\n    for id in pred_ids:\n        mask =\
    \ (pred_seg == id)\n        pil_image = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n\
    \        base64_string = image_to_base_64(pil_image)\n        output.append({\n\
    \            \"score\": 1,\n            \"label\": id2label[str(id.item())],\n\
    \            \"mask\": base64_string\n        })\n    return output\n\ndef image_to_base_64(image):\n\
    \  buffered = BytesIO()\n  image.save(buffered, format=\"PNG\")\n  img_str = base64.b64encode(buffered.getvalue())\n\
    \  return img_str.decode('utf-8')\n```\n\nLooks good? It still does not require\
    \ GPU?"
  created_at: 2023-11-24 13:38:06+00:00
  edited: true
  hidden: false
  id: 6560a73e8fb38d71f7149721
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-24T13:46:57.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9852503538131714
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>yeh i think that''s fine, can''t tell without running. Yeh this
          should be fine without a GPU.</p>

          '
        raw: yeh i think that's fine, can't tell without running. Yeh this should
          be fine without a GPU.
        updatedAt: '2023-11-24T13:46:57.112Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - pzmudzinski
    id: 6560a9515475849b82661557
    type: comment
  author: mattmdjaga
  content: yeh i think that's fine, can't tell without running. Yeh this should be
    fine without a GPU.
  created_at: 2023-11-24 13:46:57+00:00
  edited: false
  hidden: false
  id: 6560a9515475849b82661557
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
      fullname: Piotr
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: pzmudzinski
      type: user
    createdAt: '2023-11-27T16:05:42.000Z'
    data:
      edited: false
      editors:
      - pzmudzinski
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7970461249351501
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1674684281518-noauth.jpeg?w=200&h=200&f=face
          fullname: Piotr
          isHf: false
          isPro: false
          name: pzmudzinski
          type: user
        html: '<p>I published fully working example (deployable on AWS lambda) <a
          rel="nofollow" href="https://github.com/pzmudzinski/segformer-b2-clothes-postprocessing">here</a>
          in case anyone needs it in the future.</p>

          '
        raw: I published fully working example (deployable on AWS lambda) [here](https://github.com/pzmudzinski/segformer-b2-clothes-postprocessing)
          in case anyone needs it in the future.
        updatedAt: '2023-11-27T16:05:42.983Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\u2764\uFE0F"
        users:
        - mattmdjaga
    id: 6564be5672e741b4ea8f63df
    type: comment
  author: pzmudzinski
  content: I published fully working example (deployable on AWS lambda) [here](https://github.com/pzmudzinski/segformer-b2-clothes-postprocessing)
    in case anyone needs it in the future.
  created_at: 2023-11-27 16:05:42+00:00
  edited: false
  hidden: false
  id: 6564be5672e741b4ea8f63df
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 18
repo_id: mattmdjaga/segformer_b2_clothes
repo_type: model
status: open
target_branch: null
title: Model throws an error when using with Inference Endpoints
