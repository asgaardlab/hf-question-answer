!!python/object:huggingface_hub.community.DiscussionWithDetails
author: geminigeek
conflicting_files: null
created_at: 2023-07-13 11:11:08+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/da0fb3ccc1d262cd82999fc22ceb2170.svg
      fullname: gemini geek
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: geminigeek
      type: user
    createdAt: '2023-07-13T12:11:08.000Z'
    data:
      edited: false
      editors:
      - geminigeek
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9091035723686218
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/da0fb3ccc1d262cd82999fc22ceb2170.svg
          fullname: gemini geek
          isHf: false
          isPro: false
          name: geminigeek
          type: user
        html: '<p>hi,</p>

          <p>i am new to python and ML, can anyone help me how can i get all the segments
          and save each segment in an individual file , for example if 3 segments
          are detected , i want three files each having only that segment .<br>thanks</p>

          '
        raw: "hi,\r\n\r\ni am new to python and ML, can anyone help me how can i get\
          \ all the segments and save each segment in an individual file , for example\
          \ if 3 segments are detected , i want three files each having only that\
          \ segment .\r\nthanks"
        updatedAt: '2023-07-13T12:11:08.200Z'
      numEdits: 0
      reactions: []
    id: 64afe9dc4e431cdd5393a673
    type: comment
  author: geminigeek
  content: "hi,\r\n\r\ni am new to python and ML, can anyone help me how can i get\
    \ all the segments and save each segment in an individual file , for example if\
    \ 3 segments are detected , i want three files each having only that segment .\r\
    \nthanks"
  created_at: 2023-07-13 11:11:08+00:00
  edited: false
  hidden: false
  id: 64afe9dc4e431cdd5393a673
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-07-14T08:31:33.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8391682505607605
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: "<p>I'm not sure if this is what you mean but, here is code to take\
          \ a prediction and save each of the detected items and save them as an image.\
          \ </p>\n<pre><code># use the started code provided in the model card up\
          \ to the second last line where you get the variable \"pred_seg\"\nimport\
          \ numpy as np \nimport torch\n\nsegments = torch.unique(pred_seg) # Get\
          \ a list of all the predicted items\nfor i in segments: \n    mask = pred_seg\
          \ == i # Filter out anything that isn't the current item\n    img = Image.fromarray((mask\
          \ * 255).numpy().astype(np.uint8))\n    name = model.config.id2label[i.item()]\
          \ # get the item name\n    img.save(f\"{name}.png\")\n</code></pre>\n<p>Let\
          \ me know if anything doesn't work or this is what you wanted</p>\n"
        raw: "I'm not sure if this is what you mean but, here is code to take a prediction\
          \ and save each of the detected items and save them as an image. \n\n```\n\
          # use the started code provided in the model card up to the second last\
          \ line where you get the variable \"pred_seg\"\nimport numpy as np \nimport\
          \ torch\n\nsegments = torch.unique(pred_seg) # Get a list of all the predicted\
          \ items\nfor i in segments: \n    mask = pred_seg == i # Filter out anything\
          \ that isn't the current item\n    img = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n\
          \    name = model.config.id2label[i.item()] # get the item name\n    img.save(f\"\
          {name}.png\")\n```\nLet me know if anything doesn't work or this is what\
          \ you wanted"
        updatedAt: '2023-07-14T08:31:33.930Z'
      numEdits: 0
      reactions: []
    id: 64b107e5a670dc5488065c99
    type: comment
  author: mattmdjaga
  content: "I'm not sure if this is what you mean but, here is code to take a prediction\
    \ and save each of the detected items and save them as an image. \n\n```\n# use\
    \ the started code provided in the model card up to the second last line where\
    \ you get the variable \"pred_seg\"\nimport numpy as np \nimport torch\n\nsegments\
    \ = torch.unique(pred_seg) # Get a list of all the predicted items\nfor i in segments:\
    \ \n    mask = pred_seg == i # Filter out anything that isn't the current item\n\
    \    img = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n    name =\
    \ model.config.id2label[i.item()] # get the item name\n    img.save(f\"{name}.png\"\
    )\n```\nLet me know if anything doesn't work or this is what you wanted"
  created_at: 2023-07-14 07:31:33+00:00
  edited: false
  hidden: false
  id: 64b107e5a670dc5488065c99
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/da0fb3ccc1d262cd82999fc22ceb2170.svg
      fullname: gemini geek
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: geminigeek
      type: user
    createdAt: '2023-07-16T10:17:08.000Z'
    data:
      edited: false
      editors:
      - geminigeek
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8604339361190796
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/da0fb3ccc1d262cd82999fc22ceb2170.svg
          fullname: gemini geek
          isHf: false
          isPro: false
          name: geminigeek
          type: user
        html: "<blockquote>\n<p>I'm not sure if this is what you mean but, here is\
          \ code to take a prediction and save each of the detected items and save\
          \ them as an image. </p>\n<pre><code># use the started code provided in\
          \ the model card up to the second last line where you get the variable \"\
          pred_seg\"\nimport numpy as np \nimport torch\n\nsegments = torch.unique(pred_seg)\
          \ # Get a list of all the predicted items\nfor i in segments: \n    mask\
          \ = pred_seg == i # Filter out anything that isn't the current item\n  \
          \  img = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n    name\
          \ = model.config.id2label[i.item()] # get the item name\n    img.save(f\"\
          {name}.png\")\n</code></pre>\n<p>Let me know if anything doesn't work or\
          \ this is what you wanted</p>\n</blockquote>\n<p>hi,<br>thanks alot for\
          \ your reply, this is exactly what i wanted.<br>i really appreciate your\
          \ work in this model.</p>\n"
        raw: "> I'm not sure if this is what you mean but, here is code to take a\
          \ prediction and save each of the detected items and save them as an image.\
          \ \n> \n> ```\n> # use the started code provided in the model card up to\
          \ the second last line where you get the variable \"pred_seg\"\n> import\
          \ numpy as np \n> import torch\n> \n> segments = torch.unique(pred_seg)\
          \ # Get a list of all the predicted items\n> for i in segments: \n>    \
          \ mask = pred_seg == i # Filter out anything that isn't the current item\n\
          >     img = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n>  \
          \   name = model.config.id2label[i.item()] # get the item name\n>     img.save(f\"\
          {name}.png\")\n> ```\n> Let me know if anything doesn't work or this is\
          \ what you wanted\n\nhi, \nthanks alot for your reply, this is exactly what\
          \ i wanted.\ni really appreciate your work in this model.\n"
        updatedAt: '2023-07-16T10:17:08.632Z'
      numEdits: 0
      reactions: []
      relatedEventId: 64b3c3a44c3cc95a755eb0b2
    id: 64b3c3a44c3cc95a755eb0ad
    type: comment
  author: geminigeek
  content: "> I'm not sure if this is what you mean but, here is code to take a prediction\
    \ and save each of the detected items and save them as an image. \n> \n> ```\n\
    > # use the started code provided in the model card up to the second last line\
    \ where you get the variable \"pred_seg\"\n> import numpy as np \n> import torch\n\
    > \n> segments = torch.unique(pred_seg) # Get a list of all the predicted items\n\
    > for i in segments: \n>     mask = pred_seg == i # Filter out anything that isn't\
    \ the current item\n>     img = Image.fromarray((mask * 255).numpy().astype(np.uint8))\n\
    >     name = model.config.id2label[i.item()] # get the item name\n>     img.save(f\"\
    {name}.png\")\n> ```\n> Let me know if anything doesn't work or this is what you\
    \ wanted\n\nhi, \nthanks alot for your reply, this is exactly what i wanted.\n\
    i really appreciate your work in this model.\n"
  created_at: 2023-07-16 09:17:08+00:00
  edited: false
  hidden: false
  id: 64b3c3a44c3cc95a755eb0ad
  type: comment
- !!python/object:huggingface_hub.community.DiscussionStatusChange
  _event:
    author:
      avatarUrl: /avatars/da0fb3ccc1d262cd82999fc22ceb2170.svg
      fullname: gemini geek
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: geminigeek
      type: user
    createdAt: '2023-07-16T10:17:08.000Z'
    data:
      status: closed
    id: 64b3c3a44c3cc95a755eb0b2
    type: status-change
  author: geminigeek
  created_at: 2023-07-16 09:17:08+00:00
  id: 64b3c3a44c3cc95a755eb0b2
  new_status: closed
  type: status-change
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/5c2b658f2d4db8fee0d443d727e6afc4.svg
      fullname: Toby Green
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: TobiasLime
      type: user
    createdAt: '2023-07-28T15:47:22.000Z'
    data:
      edited: false
      editors:
      - TobiasLime
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9722760915756226
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/5c2b658f2d4db8fee0d443d727e6afc4.svg
          fullname: Toby Green
          isHf: false
          isPro: false
          name: TobiasLime
          type: user
        html: '<p>Hi, sorry to reopen this discussion. The code so far has been really
          helpful but I was wondering if there is a way to show the original image
          with the masking. For example an image of a man wearing a shirt and trousers.
          How would I go about using a mask so that I could just show the shirt from
          the original image?</p>

          '
        raw: Hi, sorry to reopen this discussion. The code so far has been really
          helpful but I was wondering if there is a way to show the original image
          with the masking. For example an image of a man wearing a shirt and trousers.
          How would I go about using a mask so that I could just show the shirt from
          the original image?
        updatedAt: '2023-07-28T15:47:22.778Z'
      numEdits: 0
      reactions: []
    id: 64c3e30a2581696666b69aec
    type: comment
  author: TobiasLime
  content: Hi, sorry to reopen this discussion. The code so far has been really helpful
    but I was wondering if there is a way to show the original image with the masking.
    For example an image of a man wearing a shirt and trousers. How would I go about
    using a mask so that I could just show the shirt from the original image?
  created_at: 2023-07-28 14:47:22+00:00
  edited: false
  hidden: false
  id: 64c3e30a2581696666b69aec
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/2385d87d03becd13fc50262d2a50b257.svg
      fullname: Leiyin.Lin
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: llysonylin2012
      type: user
    createdAt: '2023-08-02T12:40:10.000Z'
    data:
      edited: false
      editors:
      - llysonylin2012
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9746392369270325
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/2385d87d03becd13fc50262d2a50b257.svg
          fullname: Leiyin.Lin
          isHf: false
          isPro: false
          name: llysonylin2012
          type: user
        html: '<blockquote>

          <p>Hi, sorry to reopen this discussion. The code so far has been really
          helpful but I was wondering if there is a way to show the original image
          with the masking. For example an image of a man wearing a shirt and trousers.
          How would I go about using a mask so that I could just show the shirt from
          the original image?</p>

          </blockquote>

          <p>+1</p>

          '
        raw: '> Hi, sorry to reopen this discussion. The code so far has been really
          helpful but I was wondering if there is a way to show the original image
          with the masking. For example an image of a man wearing a shirt and trousers.
          How would I go about using a mask so that I could just show the shirt from
          the original image?


          +1'
        updatedAt: '2023-08-02T12:40:10.060Z'
      numEdits: 0
      reactions: []
    id: 64ca4eaa71a7bbb60cf8b2f7
    type: comment
  author: llysonylin2012
  content: '> Hi, sorry to reopen this discussion. The code so far has been really
    helpful but I was wondering if there is a way to show the original image with
    the masking. For example an image of a man wearing a shirt and trousers. How would
    I go about using a mask so that I could just show the shirt from the original
    image?


    +1'
  created_at: 2023-08-02 11:40:10+00:00
  edited: false
  hidden: false
  id: 64ca4eaa71a7bbb60cf8b2f7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-08-03T09:28:38.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.81331866979599
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>So the code snippet below uses the segmentation to turn anything
          that isn''t 4 (upper clothes) into a black pixel. Is this what you were
          looking for?</p>

          <pre><code>import numpy as np

          seg_arr = pred_seg.numpy()

          seg_arr = seg_arr.astype(np.uint8)

          img = np.array(image)

          img[seg_arr!=4] = 0

          plt.imshow(img)

          </code></pre>

          '
        raw: 'So the code snippet below uses the segmentation to turn anything that
          isn''t 4 (upper clothes) into a black pixel. Is this what you were looking
          for?

          ```

          import numpy as np

          seg_arr = pred_seg.numpy()

          seg_arr = seg_arr.astype(np.uint8)

          img = np.array(image)

          img[seg_arr!=4] = 0

          plt.imshow(img)

          ```'
        updatedAt: '2023-08-03T09:28:38.689Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F44D"
        users:
        - TobiasLime
        - llysonylin2012
    id: 64cb7346c7f30fbf7b8d6df0
    type: comment
  author: mattmdjaga
  content: 'So the code snippet below uses the segmentation to turn anything that
    isn''t 4 (upper clothes) into a black pixel. Is this what you were looking for?

    ```

    import numpy as np

    seg_arr = pred_seg.numpy()

    seg_arr = seg_arr.astype(np.uint8)

    img = np.array(image)

    img[seg_arr!=4] = 0

    plt.imshow(img)

    ```'
  created_at: 2023-08-03 08:28:38+00:00
  edited: false
  hidden: false
  id: 64cb7346c7f30fbf7b8d6df0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/5c2b658f2d4db8fee0d443d727e6afc4.svg
      fullname: Toby Green
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: TobiasLime
      type: user
    createdAt: '2023-08-03T10:28:05.000Z'
    data:
      edited: false
      editors:
      - TobiasLime
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9964626431465149
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/5c2b658f2d4db8fee0d443d727e6afc4.svg
          fullname: Toby Green
          isHf: false
          isPro: false
          name: TobiasLime
          type: user
        html: '<p>That''s exactly what I was looking for. Thank you!</p>

          '
        raw: 'That''s exactly what I was looking for. Thank you!

          '
        updatedAt: '2023-08-03T10:28:05.213Z'
      numEdits: 0
      reactions: []
    id: 64cb813571a7bbb60c2469ff
    type: comment
  author: TobiasLime
  content: 'That''s exactly what I was looking for. Thank you!

    '
  created_at: 2023-08-03 09:28:05+00:00
  edited: false
  hidden: false
  id: 64cb813571a7bbb60c2469ff
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 5
repo_id: mattmdjaga/segformer_b2_clothes
repo_type: model
status: closed
target_branch: null
title: how to save each segment in a new image
