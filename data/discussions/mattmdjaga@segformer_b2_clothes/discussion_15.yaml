!!python/object:huggingface_hub.community.DiscussionWithDetails
author: sbaur33
conflicting_files: null
created_at: 2023-11-12 23:47:34+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d5f1d6705ba1b8da48fdac623391212.svg
      fullname: sabrina
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sbaur33
      type: user
    createdAt: '2023-11-12T23:47:34.000Z'
    data:
      edited: false
      editors:
      - sbaur33
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9855061173439026
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d5f1d6705ba1b8da48fdac623391212.svg
          fullname: sabrina
          isHf: false
          isPro: false
          name: sbaur33
          type: user
        html: '<p>Hi there, I was wondering how to get the resulting labels and their
          sizes from an image? I''ve been trying to use this for a project for class
          but i am struggling. I can see that in the config file there is a id2label
          but i am not sure how to use it.</p>

          '
        raw: Hi there, I was wondering how to get the resulting labels and their sizes
          from an image? I've been trying to use this for a project for class but
          i am struggling. I can see that in the config file there is a id2label but
          i am not sure how to use it.
        updatedAt: '2023-11-12T23:47:34.015Z'
      numEdits: 0
      reactions: []
    id: 65516416dd2482b05995c73b
    type: comment
  author: sbaur33
  content: Hi there, I was wondering how to get the resulting labels and their sizes
    from an image? I've been trying to use this for a project for class but i am struggling.
    I can see that in the config file there is a id2label but i am not sure how to
    use it.
  created_at: 2023-11-12 23:47:34+00:00
  edited: false
  hidden: false
  id: 65516416dd2482b05995c73b
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-14T10:23:11.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9142622351646423
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: '<p>Hi, so to get a dictionary of  the ids which are used in the output
          to labels you can do "model.config.id2label" and that will give you a mapping
          of the prediction labels to string labels. I''m not sure what you mean getting
          the sizes of the labels though, could you elaborate? </p>

          '
        raw: 'Hi, so to get a dictionary of  the ids which are used in the output
          to labels you can do "model.config.id2label" and that will give you a mapping
          of the prediction labels to string labels. I''m not sure what you mean getting
          the sizes of the labels though, could you elaborate? '
        updatedAt: '2023-11-14T10:23:11.107Z'
      numEdits: 0
      reactions:
      - count: 2
        reaction: "\U0001F44D"
        users:
        - adsbtb
        - hellozhems
    id: 65534a8f2c9a069eee128e5f
    type: comment
  author: mattmdjaga
  content: 'Hi, so to get a dictionary of  the ids which are used in the output to
    labels you can do "model.config.id2label" and that will give you a mapping of
    the prediction labels to string labels. I''m not sure what you mean getting the
    sizes of the labels though, could you elaborate? '
  created_at: 2023-11-14 10:23:11+00:00
  edited: false
  hidden: false
  id: 65534a8f2c9a069eee128e5f
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ac999f66f3c7b4f4ede89f23e027a95a.svg
      fullname: Adi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: adsbtb
      type: user
    createdAt: '2023-11-17T07:34:31.000Z'
    data:
      edited: false
      editors:
      - adsbtb
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7932919263839722
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ac999f66f3c7b4f4ede89f23e027a95a.svg
          fullname: Adi
          isHf: false
          isPro: false
          name: adsbtb
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;mattmdjaga&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/mattmdjaga\">@<span class=\"\
          underline\">mattmdjaga</span></a></span>\n\n\t</span></span> how do I get\
          \ the labels corresponding to the segment colors? After running the code\
          \ in the model card</p>\n"
        raw: '@mattmdjaga how do I get the labels corresponding to the segment colors?
          After running the code in the model card'
        updatedAt: '2023-11-17T07:34:31.805Z'
      numEdits: 0
      reactions: []
    id: 65571787134ade1157b050a7
    type: comment
  author: adsbtb
  content: '@mattmdjaga how do I get the labels corresponding to the segment colors?
    After running the code in the model card'
  created_at: 2023-11-17 07:34:31+00:00
  edited: false
  hidden: false
  id: 65571787134ade1157b050a7
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-17T11:28:51.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6095386147499084
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: "<p>I'm not sure how to get the colour map from the example code but\
          \ gpt 4 helped me get this which sets a new colourmap and lets you get a\
          \ dictionary of label to colour</p>\n<pre><code>import matplotlib as mpl\n\
          label_names = list(model.config.id2label)\n# Create a color map with the\
          \ same number of colors as your labels\n# Use the updated method to get\
          \ the colormap\ncmap = mpl.colormaps['tab20']\n\n# Create the figure and\
          \ axes for the plot and the colorbar\nfig, ax = plt.subplots()\n\n# Display\
          \ the segmentation\nim = ax.imshow(pred_seg, cmap=cmap)\n\n# Create a colorbar\n\
          cbar = fig.colorbar(im, ax=ax, ticks=range(len(label_names)))\ncbar.ax.set_yticklabels(label_names)\n\
          \nplt.show()\n\n# Get the number of labels\nn_labels = len(label_names)\n\
          \n# Extract RGB values for each color in the colormap\ncolors = cmap.colors[:n_labels]\n\
          \n# Convert RGBA to RGB by omitting the Alpha value\nrgb_colors = [color[:3]\
          \ for color in colors]\n\n# Create a dictionary mapping labels to RGB colors\n\
          label_to_color = dict(zip(label_names, rgb_colors))\n\n# Display the mapping\n\
          for label, color in label_to_color.items():\n    print(f\"{label}: {color}\"\
          )\n</code></pre>\n"
        raw: "I'm not sure how to get the colour map from the example code but gpt\
          \ 4 helped me get this which sets a new colourmap and lets you get a dictionary\
          \ of label to colour\n```\nimport matplotlib as mpl\nlabel_names = list(model.config.id2label)\n\
          # Create a color map with the same number of colors as your labels\n# Use\
          \ the updated method to get the colormap\ncmap = mpl.colormaps['tab20']\n\
          \n# Create the figure and axes for the plot and the colorbar\nfig, ax =\
          \ plt.subplots()\n\n# Display the segmentation\nim = ax.imshow(pred_seg,\
          \ cmap=cmap)\n\n# Create a colorbar\ncbar = fig.colorbar(im, ax=ax, ticks=range(len(label_names)))\n\
          cbar.ax.set_yticklabels(label_names)\n\nplt.show()\n\n# Get the number of\
          \ labels\nn_labels = len(label_names)\n\n# Extract RGB values for each color\
          \ in the colormap\ncolors = cmap.colors[:n_labels]\n\n# Convert RGBA to\
          \ RGB by omitting the Alpha value\nrgb_colors = [color[:3] for color in\
          \ colors]\n\n# Create a dictionary mapping labels to RGB colors\nlabel_to_color\
          \ = dict(zip(label_names, rgb_colors))\n\n# Display the mapping\nfor label,\
          \ color in label_to_color.items():\n    print(f\"{label}: {color}\")\n```"
        updatedAt: '2023-11-17T11:28:51.010Z'
      numEdits: 0
      reactions: []
    id: 65574e7335f26c82c0c11299
    type: comment
  author: mattmdjaga
  content: "I'm not sure how to get the colour map from the example code but gpt 4\
    \ helped me get this which sets a new colourmap and lets you get a dictionary\
    \ of label to colour\n```\nimport matplotlib as mpl\nlabel_names = list(model.config.id2label)\n\
    # Create a color map with the same number of colors as your labels\n# Use the\
    \ updated method to get the colormap\ncmap = mpl.colormaps['tab20']\n\n# Create\
    \ the figure and axes for the plot and the colorbar\nfig, ax = plt.subplots()\n\
    \n# Display the segmentation\nim = ax.imshow(pred_seg, cmap=cmap)\n\n# Create\
    \ a colorbar\ncbar = fig.colorbar(im, ax=ax, ticks=range(len(label_names)))\n\
    cbar.ax.set_yticklabels(label_names)\n\nplt.show()\n\n# Get the number of labels\n\
    n_labels = len(label_names)\n\n# Extract RGB values for each color in the colormap\n\
    colors = cmap.colors[:n_labels]\n\n# Convert RGBA to RGB by omitting the Alpha\
    \ value\nrgb_colors = [color[:3] for color in colors]\n\n# Create a dictionary\
    \ mapping labels to RGB colors\nlabel_to_color = dict(zip(label_names, rgb_colors))\n\
    \n# Display the mapping\nfor label, color in label_to_color.items():\n    print(f\"\
    {label}: {color}\")\n```"
  created_at: 2023-11-17 11:28:51+00:00
  edited: false
  hidden: false
  id: 65574e7335f26c82c0c11299
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/ac999f66f3c7b4f4ede89f23e027a95a.svg
      fullname: Adi
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: adsbtb
      type: user
    createdAt: '2023-11-17T12:14:53.000Z'
    data:
      edited: false
      editors:
      - adsbtb
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7788880467414856
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/ac999f66f3c7b4f4ede89f23e027a95a.svg
          fullname: Adi
          isHf: false
          isPro: false
          name: adsbtb
          type: user
        html: '<p>Thanks!</p>

          '
        raw: Thanks!
        updatedAt: '2023-11-17T12:14:53.033Z'
      numEdits: 0
      reactions: []
    id: 6557593d76fe5cfa6a34ed14
    type: comment
  author: adsbtb
  content: Thanks!
  created_at: 2023-11-17 12:14:53+00:00
  edited: false
  hidden: false
  id: 6557593d76fe5cfa6a34ed14
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/8d5f1d6705ba1b8da48fdac623391212.svg
      fullname: sabrina
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: sbaur33
      type: user
    createdAt: '2023-11-27T16:53:48.000Z'
    data:
      edited: false
      editors:
      - sbaur33
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9797604084014893
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/8d5f1d6705ba1b8da48fdac623391212.svg
          fullname: sabrina
          isHf: false
          isPro: false
          name: sbaur33
          type: user
        html: '<p>Hi! Thank you for the help! To answer your question and clarify
          what I was saying: I''m essentially trying to get the upper left plot point
          and the lower right plot point of a layer as to get the size of the clothing
          piece in the image. So for example if you had an image of a shirt I would
          want the size of the shirt in relation to the image, how would I go about
          doing that?</p>

          '
        raw: 'Hi! Thank you for the help! To answer your question and clarify what
          I was saying: I''m essentially trying to get the upper left plot point and
          the lower right plot point of a layer as to get the size of the clothing
          piece in the image. So for example if you had an image of a shirt I would
          want the size of the shirt in relation to the image, how would I go about
          doing that?'
        updatedAt: '2023-11-27T16:53:48.855Z'
      numEdits: 0
      reactions: []
    id: 6564c99c1027d23026e935db
    type: comment
  author: sbaur33
  content: 'Hi! Thank you for the help! To answer your question and clarify what I
    was saying: I''m essentially trying to get the upper left plot point and the lower
    right plot point of a layer as to get the size of the clothing piece in the image.
    So for example if you had an image of a shirt I would want the size of the shirt
    in relation to the image, how would I go about doing that?'
  created_at: 2023-11-27 16:53:48+00:00
  edited: false
  hidden: false
  id: 6564c99c1027d23026e935db
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
      fullname: Mateusz Dziemian
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: mattmdjaga
      type: user
    createdAt: '2023-11-27T17:09:46.000Z'
    data:
      edited: false
      editors:
      - mattmdjaga
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5660871863365173
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62710bd57b9f120adb36e451/xv02RE8VgayDPDE6jkwV2.png?w=200&h=200&f=face
          fullname: Mateusz Dziemian
          isHf: false
          isPro: false
          name: mattmdjaga
          type: user
        html: "<p>You can get the % of pixels predicted for each label using the code\
          \ below:</p>\n<pre><code>id2label = model.config.id2label\nlabels = pred_seg.unique()\n\
          total_pixels = pred_seg.shape[0] * pred_seg.shape[1]\nfor label in labels:\n\
          \    mask_val = (pred_seg==label).sum()\n    print(f\"{id2label[label.item()]}\
          \ takes {(mask_val/total_pixels)*100:.3f}%\")\n</code></pre>\n<p>For the\
          \ model card example that should return:</p>\n<p>Background takes 77.867%<br>Hair\
          \ takes 0.352%<br>Upper-clothes takes 13.596%<br>Pants takes 6.270%<br>Face\
          \ takes 1.519%<br>Right-arm takes 0.221%<br>Bag takes 0.175%</p>\n<p>Hope\
          \ this helps</p>\n"
        raw: "You can get the % of pixels predicted for each label using the code\
          \ below:\n```\nid2label = model.config.id2label\nlabels = pred_seg.unique()\n\
          total_pixels = pred_seg.shape[0] * pred_seg.shape[1]\nfor label in labels:\n\
          \    mask_val = (pred_seg==label).sum()\n    print(f\"{id2label[label.item()]}\
          \ takes {(mask_val/total_pixels)*100:.3f}%\")\n```\nFor the model card example\
          \ that should return:\n\nBackground takes 77.867%\nHair takes 0.352%\nUpper-clothes\
          \ takes 13.596%\nPants takes 6.270%\nFace takes 1.519%\nRight-arm takes\
          \ 0.221%\nBag takes 0.175%\n\nHope this helps"
        updatedAt: '2023-11-27T17:09:46.196Z'
      numEdits: 0
      reactions: []
    id: 6564cd5a0c754d598cec70aa
    type: comment
  author: mattmdjaga
  content: "You can get the % of pixels predicted for each label using the code below:\n\
    ```\nid2label = model.config.id2label\nlabels = pred_seg.unique()\ntotal_pixels\
    \ = pred_seg.shape[0] * pred_seg.shape[1]\nfor label in labels:\n    mask_val\
    \ = (pred_seg==label).sum()\n    print(f\"{id2label[label.item()]} takes {(mask_val/total_pixels)*100:.3f}%\"\
    )\n```\nFor the model card example that should return:\n\nBackground takes 77.867%\n\
    Hair takes 0.352%\nUpper-clothes takes 13.596%\nPants takes 6.270%\nFace takes\
    \ 1.519%\nRight-arm takes 0.221%\nBag takes 0.175%\n\nHope this helps"
  created_at: 2023-11-27 17:09:46+00:00
  edited: false
  hidden: false
  id: 6564cd5a0c754d598cec70aa
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 15
repo_id: mattmdjaga/segformer_b2_clothes
repo_type: model
status: open
target_branch: null
title: How to get individual label's and their sizes from an image
