!!python/object:huggingface_hub.community.DiscussionWithDetails
author: alena0817
conflicting_files: null
created_at: 2023-06-29 16:37:41+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c4036f5eda018aa05dd4e397feaee85d.svg
      fullname: Alena
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: alena0817
      type: user
    createdAt: '2023-06-29T17:37:41.000Z'
    data:
      edited: false
      editors:
      - alena0817
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9120698571205139
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c4036f5eda018aa05dd4e397feaee85d.svg
          fullname: Alena
          isHf: false
          isPro: false
          name: alena0817
          type: user
        html: '<p>Has anyone tried saving the model in torchscript format? I get errors
          with torch.jit.script and torch.jit.trace. Any help would be appreciated.</p>

          '
        raw: Has anyone tried saving the model in torchscript format? I get errors
          with torch.jit.script and torch.jit.trace. Any help would be appreciated.
        updatedAt: '2023-06-29T17:37:41.464Z'
      numEdits: 0
      reactions: []
    id: 649dc165d10c64476b54a515
    type: comment
  author: alena0817
  content: Has anyone tried saving the model in torchscript format? I get errors with
    torch.jit.script and torch.jit.trace. Any help would be appreciated.
  created_at: 2023-06-29 16:37:41+00:00
  edited: false
  hidden: false
  id: 649dc165d10c64476b54a515
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/b7d0a895e669bcd1303c4716b5401c36.svg
      fullname: Hongjin SU
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: multi-train
      type: user
    createdAt: '2023-07-02T12:53:13.000Z'
    data:
      edited: false
      editors:
      - multi-train
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8979820609092712
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/b7d0a895e669bcd1303c4716b5401c36.svg
          fullname: Hongjin SU
          isHf: false
          isPro: false
          name: multi-train
          type: user
        html: '<p>Could you share the script you are using to save the model?</p>

          '
        raw: Could you share the script you are using to save the model?
        updatedAt: '2023-07-02T12:53:13.697Z'
      numEdits: 0
      reactions: []
    id: 64a17339649f9b505f36f8f9
    type: comment
  author: multi-train
  content: Could you share the script you are using to save the model?
  created_at: 2023-07-02 11:53:13+00:00
  edited: false
  hidden: false
  id: 64a17339649f9b505f36f8f9
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c4036f5eda018aa05dd4e397feaee85d.svg
      fullname: Alena
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: alena0817
      type: user
    createdAt: '2023-07-03T15:22:46.000Z'
    data:
      edited: false
      editors:
      - alena0817
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7251108288764954
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c4036f5eda018aa05dd4e397feaee85d.svg
          fullname: Alena
          isHf: false
          isPro: false
          name: alena0817
          type: user
        html: '<p>Hi this is what I am using. I am new to this, so not sure if this
          is the right way.</p>

          <p>from transformers import T5EncoderModel<br>import torch</p>

          <p>pretrained_model_name = "hkunlp/instructor-large"<br>output_path = "/tmp/traced_t5.pt"</p>

          <p>model = T5EncoderModel.from_pretrained(pretrained_model_name, torchscript=True)<br>model.eval()</p>

          <p>dummy_input = model.dummy_inputs["input_ids"]<br>traced_model = torch.jit.trace(model,
          dummy_input)<br>torch.jit.save(traced_model, output_path)</p>

          <h1 id="reload">reload</h1>

          <p>loaded_model = torch.jit.load(output_path)<br>loaded_model.eval()</p>

          <p>r = loaded_model(dummy_input)</p>

          <p>This code runs. But when I try loading the model to opensearch, I get
          this error:</p>

          <p>"forward() Expected a value of type ''Tensor'' for argument ''input_ids''
          but instead found type ''Dict[str, Tensor]''.\nPosition: 1\nDeclaration:
          forward(<strong>torch</strong>.transformers.models.t5.modeling_t5.T5EncoderModel
          self, Tensor input_ids) -&gt; ((Tensor))"}","is_async":true}</p>

          <p>Do I need to give it a different dummy input when tracing? I also tried
          passing model.dummy_inputs as example_kwarg_inputs but that did not work
          as well.</p>

          '
        raw: 'Hi this is what I am using. I am new to this, so not sure if this is
          the right way.


          from transformers import T5EncoderModel

          import torch


          pretrained_model_name = "hkunlp/instructor-large"

          output_path = "/tmp/traced_t5.pt"


          model = T5EncoderModel.from_pretrained(pretrained_model_name, torchscript=True)

          model.eval()


          dummy_input = model.dummy_inputs["input_ids"]

          traced_model = torch.jit.trace(model, dummy_input)

          torch.jit.save(traced_model, output_path)


          # reload

          loaded_model = torch.jit.load(output_path)

          loaded_model.eval()


          r = loaded_model(dummy_input)


          This code runs. But when I try loading the model to opensearch, I get this
          error:


          "forward() Expected a value of type ''Tensor'' for argument ''input_ids''
          but instead found type ''Dict[str, Tensor]''.\\nPosition: 1\\nDeclaration:
          forward(__torch__.transformers.models.t5.modeling_t5.T5EncoderModel self,
          Tensor input_ids) -> ((Tensor))\"}","is_async":true}


          Do I need to give it a different dummy input when tracing? I also tried
          passing model.dummy_inputs as example_kwarg_inputs but that did not work
          as well.'
        updatedAt: '2023-07-03T15:22:46.727Z'
      numEdits: 0
      reactions: []
    id: 64a2e7c60daa18733dd55a55
    type: comment
  author: alena0817
  content: 'Hi this is what I am using. I am new to this, so not sure if this is the
    right way.


    from transformers import T5EncoderModel

    import torch


    pretrained_model_name = "hkunlp/instructor-large"

    output_path = "/tmp/traced_t5.pt"


    model = T5EncoderModel.from_pretrained(pretrained_model_name, torchscript=True)

    model.eval()


    dummy_input = model.dummy_inputs["input_ids"]

    traced_model = torch.jit.trace(model, dummy_input)

    torch.jit.save(traced_model, output_path)


    # reload

    loaded_model = torch.jit.load(output_path)

    loaded_model.eval()


    r = loaded_model(dummy_input)


    This code runs. But when I try loading the model to opensearch, I get this error:


    "forward() Expected a value of type ''Tensor'' for argument ''input_ids'' but
    instead found type ''Dict[str, Tensor]''.\\nPosition: 1\\nDeclaration: forward(__torch__.transformers.models.t5.modeling_t5.T5EncoderModel
    self, Tensor input_ids) -> ((Tensor))\"}","is_async":true}


    Do I need to give it a different dummy input when tracing? I also tried passing
    model.dummy_inputs as example_kwarg_inputs but that did not work as well.'
  created_at: 2023-07-03 14:22:46+00:00
  edited: false
  hidden: false
  id: 64a2e7c60daa18733dd55a55
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/b7d0a895e669bcd1303c4716b5401c36.svg
      fullname: Hongjin SU
      isHf: false
      isOrgMember: true
      isOwner: false
      isPro: false
      name: multi-train
      type: user
    createdAt: '2023-07-22T10:30:03.000Z'
    data:
      edited: false
      editors:
      - multi-train
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7732806205749512
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/b7d0a895e669bcd1303c4716b5401c36.svg
          fullname: Hongjin SU
          isHf: false
          isPro: false
          name: multi-train
          type: user
        html: "<p>Hi, to fix the problem, you may try the following:</p>\n<p>Instead\
          \ of passing the entire dictionary (model.dummy_inputs), pass only the input_ids\
          \ tensor.</p>\n<pre><code>dummy_input = model.dummy_inputs[\"input_ids\"\
          ]\ntraced_model = torch.jit.trace(model, (dummy_input,)) \n</code></pre>\n\
          <p>When you reload the model and want to test it, ensure you're passing\
          \ just the tensor, not the dictionary:</p>\n<pre><code>r = loaded_model(dummy_input)\n\
          </code></pre>\n"
        raw: "Hi, to fix the problem, you may try the following:\n\nInstead of passing\
          \ the entire dictionary (model.dummy_inputs), pass only the input_ids tensor.\n\
          \n```\ndummy_input = model.dummy_inputs[\"input_ids\"]\ntraced_model = torch.jit.trace(model,\
          \ (dummy_input,)) \n```\n\nWhen you reload the model and want to test it,\
          \ ensure you're passing just the tensor, not the dictionary:\n```\nr = loaded_model(dummy_input)\n\
          ```"
        updatedAt: '2023-07-22T10:30:03.987Z'
      numEdits: 0
      reactions: []
    id: 64bbafab140491ca9f2a47e8
    type: comment
  author: multi-train
  content: "Hi, to fix the problem, you may try the following:\n\nInstead of passing\
    \ the entire dictionary (model.dummy_inputs), pass only the input_ids tensor.\n\
    \n```\ndummy_input = model.dummy_inputs[\"input_ids\"]\ntraced_model = torch.jit.trace(model,\
    \ (dummy_input,)) \n```\n\nWhen you reload the model and want to test it, ensure\
    \ you're passing just the tensor, not the dictionary:\n```\nr = loaded_model(dummy_input)\n\
    ```"
  created_at: 2023-07-22 09:30:03+00:00
  edited: false
  hidden: false
  id: 64bbafab140491ca9f2a47e8
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 12
repo_id: hkunlp/instructor-large
repo_type: model
status: open
target_branch: null
title: Saving the model as torchscript
