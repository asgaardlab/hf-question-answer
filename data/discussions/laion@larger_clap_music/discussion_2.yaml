!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Xenova
conflicting_files: null
created_at: 2023-12-05 17:46:43+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/61b253b7ac5ecaae3d1efe0c/hwiQ0uvz3t-L5a-NtBIO6.png?w=200&h=200&f=face
      fullname: Joshua
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Xenova
      type: user
    createdAt: '2023-12-05T17:46:43.000Z'
    data:
      edited: true
      editors:
      - Xenova
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6453049778938293
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/61b253b7ac5ecaae3d1efe0c/hwiQ0uvz3t-L5a-NtBIO6.png?w=200&h=200&f=face
          fullname: Joshua
          isHf: true
          isPro: false
          name: Xenova
          type: user
        html: '<p>When running the model with transformers'' <code>pipeline</code>
          API, the model labels each class with ~0.5 score:</p>

          <pre><code class="language-py"><span class="hljs-keyword">from</span> transformers
          <span class="hljs-keyword">import</span> pipeline


          audio = <span class="hljs-string">''https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/piano.wav''</span>


          audio_classifier = pipeline(task=<span class="hljs-string">"zero-shot-audio-classification"</span>,
          model=<span class="hljs-string">"laion/larger_clap_music"</span>)

          output = audio_classifier(audio, candidate_labels=[<span class="hljs-string">''calm
          piano music''</span>, <span class="hljs-string">''heavy metal''</span>])

          <span class="hljs-built_in">print</span>(output)

          <span class="hljs-comment"># [{''score'': 0.5001561641693115, ''label'':
          ''calm piano music''}, {''score'': 0.49984389543533325, ''label'': ''heavy
          metal''}]</span>

          </code></pre>

          <p>Is this a limitation of the model, or perhaps a usage error? If the latter,
          could you update the model card with example code that shows intended usage?</p>

          <p>The example code provided in the README: also has the same issue:</p>

          <pre><code class="language-py"><span class="hljs-keyword">from</span> datasets
          <span class="hljs-keyword">import</span> load_dataset

          <span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span>
          pipeline


          dataset = load_dataset(<span class="hljs-string">"ashraq/esc50"</span>)

          audio = dataset[<span class="hljs-string">"train"</span>][<span class="hljs-string">"audio"</span>][-<span
          class="hljs-number">1</span>][<span class="hljs-string">"array"</span>]


          audio_classifier = pipeline(task=<span class="hljs-string">"zero-shot-audio-classification"</span>,
          model=<span class="hljs-string">"laion/larger_clap_music"</span>)

          output = audio_classifier(audio, candidate_labels=[<span class="hljs-string">"Sound
          of a dog"</span>, <span class="hljs-string">"Sound of vaccum cleaner"</span>])

          <span class="hljs-built_in">print</span>(output)

          <span class="hljs-comment"># [{''score'': 0.5000357627868652, ''label'':
          ''Sound of a dog''}, {''score'': 0.49996429681777954, ''label'': ''Sound
          of vaccum cleaner''}]</span>

          </code></pre>

          '
        raw: 'When running the model with transformers'' `pipeline` API, the model
          labels each class with ~0.5 score:


          ```py

          from transformers import pipeline


          audio = ''https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/piano.wav''


          audio_classifier = pipeline(task="zero-shot-audio-classification", model="laion/larger_clap_music")

          output = audio_classifier(audio, candidate_labels=[''calm piano music'',
          ''heavy metal''])

          print(output)

          # [{''score'': 0.5001561641693115, ''label'': ''calm piano music''}, {''score'':
          0.49984389543533325, ''label'': ''heavy metal''}]

          ```


          Is this a limitation of the model, or perhaps a usage error? If the latter,
          could you update the model card with example code that shows intended usage?


          The example code provided in the README: also has the same issue:

          ```py

          from datasets import load_dataset

          from transformers import pipeline


          dataset = load_dataset("ashraq/esc50")

          audio = dataset["train"]["audio"][-1]["array"]


          audio_classifier = pipeline(task="zero-shot-audio-classification", model="laion/larger_clap_music")

          output = audio_classifier(audio, candidate_labels=["Sound of a dog", "Sound
          of vaccum cleaner"])

          print(output)

          # [{''score'': 0.5000357627868652, ''label'': ''Sound of a dog''}, {''score'':
          0.49996429681777954, ''label'': ''Sound of vaccum cleaner''}]

          ```'
        updatedAt: '2023-12-05T18:24:01.566Z'
      numEdits: 1
      reactions: []
    id: 656f620334440bdf2ec07959
    type: comment
  author: Xenova
  content: 'When running the model with transformers'' `pipeline` API, the model labels
    each class with ~0.5 score:


    ```py

    from transformers import pipeline


    audio = ''https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/piano.wav''


    audio_classifier = pipeline(task="zero-shot-audio-classification", model="laion/larger_clap_music")

    output = audio_classifier(audio, candidate_labels=[''calm piano music'', ''heavy
    metal''])

    print(output)

    # [{''score'': 0.5001561641693115, ''label'': ''calm piano music''}, {''score'':
    0.49984389543533325, ''label'': ''heavy metal''}]

    ```


    Is this a limitation of the model, or perhaps a usage error? If the latter, could
    you update the model card with example code that shows intended usage?


    The example code provided in the README: also has the same issue:

    ```py

    from datasets import load_dataset

    from transformers import pipeline


    dataset = load_dataset("ashraq/esc50")

    audio = dataset["train"]["audio"][-1]["array"]


    audio_classifier = pipeline(task="zero-shot-audio-classification", model="laion/larger_clap_music")

    output = audio_classifier(audio, candidate_labels=["Sound of a dog", "Sound of
    vaccum cleaner"])

    print(output)

    # [{''score'': 0.5000357627868652, ''label'': ''Sound of a dog''}, {''score'':
    0.49996429681777954, ''label'': ''Sound of vaccum cleaner''}]

    ```'
  created_at: 2023-12-05 17:46:43+00:00
  edited: true
  hidden: false
  id: 656f620334440bdf2ec07959
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: laion/larger_clap_music
repo_type: model
status: open
target_branch: null
title: Equally-weighted output when using with HF transformers `pipeline` API
