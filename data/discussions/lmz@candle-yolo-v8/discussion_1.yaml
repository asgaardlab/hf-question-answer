!!python/object:huggingface_hub.community.DiscussionWithDetails
author: rkingzhong
conflicting_files: null
created_at: 2023-09-19 08:13:38+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1a6c603c6cc9fdc8007aa79122e5dea2.svg
      fullname: kingzcheung
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rkingzhong
      type: user
    createdAt: '2023-09-19T09:13:38.000Z'
    data:
      edited: true
      editors:
      - rkingzhong
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9262205362319946
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1a6c603c6cc9fdc8007aa79122e5dea2.svg
          fullname: kingzcheung
          isHf: false
          isPro: false
          name: rkingzhong
          type: user
        html: '<p>Can you provide scripts that convert to safetensors format?<br>I
          found that the results were different from yours, and the model was converted
          through the safetensors tool.</p>

          '
        raw: 'Can you provide scripts that convert to safetensors format?

          I found that the results were different from yours, and the model was converted
          through the safetensors tool.'
        updatedAt: '2023-09-19T09:15:18.905Z'
      numEdits: 2
      reactions: []
    id: 650966422feb9570c50ecd9c
    type: comment
  author: rkingzhong
  content: 'Can you provide scripts that convert to safetensors format?

    I found that the results were different from yours, and the model was converted
    through the safetensors tool.'
  created_at: 2023-09-19 08:13:38+00:00
  edited: true
  hidden: false
  id: 650966422feb9570c50ecd9c
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/eaf7f30a334d23c1c561a4512f55c9b3.svg
      fullname: Laurent Mazare
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: lmz
      type: user
    createdAt: '2023-09-19T13:28:53.000Z'
    data:
      edited: false
      editors:
      - lmz
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.2850693464279175
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/eaf7f30a334d23c1c561a4512f55c9b3.svg
          fullname: Laurent Mazare
          isHf: false
          isPro: false
          name: lmz
          type: user
        html: "<p>Here is the very hacky script that I used to create the weight files.</p>\n\
          <pre><code class=\"language-python\"><span class=\"hljs-keyword\">import</span>\
          \ torch\n<span class=\"hljs-keyword\">from</span> safetensors.torch <span\
          \ class=\"hljs-keyword\">import</span> load_file\n<span class=\"hljs-keyword\"\
          >from</span> safetensors.torch <span class=\"hljs-keyword\">import</span>\
          \ save_file\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\
          \ function_\">rename</span>(<span class=\"hljs-params\">name: <span class=\"\
          hljs-built_in\">str</span></span>):\n    name = name.replace(<span class=\"\
          hljs-string\">\"model.0.\"</span>, <span class=\"hljs-string\">\"net.b1.0.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.1.\"\
          </span>, <span class=\"hljs-string\">\"net.b1.1.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.2.m.\"</span>, <span class=\"hljs-string\"\
          >\"net.b2.0.bottleneck.\"</span>)\n    name = name.replace(<span class=\"\
          hljs-string\">\"model.2.\"</span>, <span class=\"hljs-string\">\"net.b2.0.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.3.\"\
          </span>, <span class=\"hljs-string\">\"net.b2.1.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.3.\"</span>, <span class=\"hljs-string\"\
          >\"net.b2.1.\"</span>)\n    name = name.replace(<span class=\"hljs-string\"\
          >\"model.4.m.\"</span>, <span class=\"hljs-string\">\"net.b2.2.bottleneck.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.4.\"\
          </span>, <span class=\"hljs-string\">\"net.b2.2.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.5.\"</span>, <span class=\"hljs-string\"\
          >\"net.b3.0.\"</span>)\n    name = name.replace(<span class=\"hljs-string\"\
          >\"model.6.m.\"</span>, <span class=\"hljs-string\">\"net.b3.1.bottleneck.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.6.\"\
          </span>, <span class=\"hljs-string\">\"net.b3.1.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.7.\"</span>, <span class=\"hljs-string\"\
          >\"net.b4.0.\"</span>)\n    name = name.replace(<span class=\"hljs-string\"\
          >\"model.8.m.\"</span>, <span class=\"hljs-string\">\"net.b4.1.bottleneck.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.8.\"\
          </span>, <span class=\"hljs-string\">\"net.b4.1.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.9.\"</span>, <span class=\"hljs-string\"\
          >\"net.b5.0.\"</span>)\n    name = name.replace(<span class=\"hljs-string\"\
          >\"model.12.m.\"</span>, <span class=\"hljs-string\">\"fpn.n1.bottleneck.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.12.\"\
          </span>, <span class=\"hljs-string\">\"fpn.n1.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.15.m.\"</span>, <span class=\"hljs-string\"\
          >\"fpn.n2.bottleneck.\"</span>)\n    name = name.replace(<span class=\"\
          hljs-string\">\"model.15.\"</span>, <span class=\"hljs-string\">\"fpn.n2.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.16.\"\
          </span>, <span class=\"hljs-string\">\"fpn.n3.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.18.m.\"</span>, <span class=\"hljs-string\"\
          >\"fpn.n4.bottleneck.\"</span>)\n    name = name.replace(<span class=\"\
          hljs-string\">\"model.18.\"</span>, <span class=\"hljs-string\">\"fpn.n4.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.19.\"\
          </span>, <span class=\"hljs-string\">\"fpn.n5.\"</span>)\n    name = name.replace(<span\
          \ class=\"hljs-string\">\"model.21.m.\"</span>, <span class=\"hljs-string\"\
          >\"fpn.n6.bottleneck.\"</span>)\n    name = name.replace(<span class=\"\
          hljs-string\">\"model.21.\"</span>, <span class=\"hljs-string\">\"fpn.n6.\"\
          </span>)\n    name = name.replace(<span class=\"hljs-string\">\"model.22.\"\
          </span>, <span class=\"hljs-string\">\"head.\"</span>)\n    <span class=\"\
          hljs-keyword\">return</span> name\n\ndata = torch.load(<span class=\"hljs-string\"\
          >\"/tmp/yolov8s-pose.pt\"</span>)\n<span class=\"hljs-comment\">#data =\
          \ torch.load(\"/tmp/yolov8s.pt\")</span>\n<span class=\"hljs-built_in\"\
          >print</span>(data)\ntensors = data[<span class=\"hljs-string\">'model'</span>].state_dict().items()\n\
          tensors = <span class=\"hljs-built_in\">dict</span>(tensors)\ntensors =\
          \ {rename(k): t <span class=\"hljs-keyword\">for</span> k, t <span class=\"\
          hljs-keyword\">in</span> tensors.items()}\n<span class=\"hljs-built_in\"\
          >print</span>(data[<span class=\"hljs-string\">\"model\"</span>])\nsave_file(tensors,\
          \ <span class=\"hljs-string\">\"/tmp/model.safetensors\"</span>)\n<span\
          \ class=\"hljs-keyword\">for</span> k, v <span class=\"hljs-keyword\">in</span>\
          \ tensors.items():\n    <span class=\"hljs-built_in\">print</span>(<span\
          \ class=\"hljs-built_in\">str</span>(k), v.shape)\n</code></pre>\n"
        raw: "Here is the very hacky script that I used to create the weight files.\n\
          \n```python\nimport torch\nfrom safetensors.torch import load_file\nfrom\
          \ safetensors.torch import save_file\n\ndef rename(name: str):\n    name\
          \ = name.replace(\"model.0.\", \"net.b1.0.\")\n    name = name.replace(\"\
          model.1.\", \"net.b1.1.\")\n    name = name.replace(\"model.2.m.\", \"net.b2.0.bottleneck.\"\
          )\n    name = name.replace(\"model.2.\", \"net.b2.0.\")\n    name = name.replace(\"\
          model.3.\", \"net.b2.1.\")\n    name = name.replace(\"model.3.\", \"net.b2.1.\"\
          )\n    name = name.replace(\"model.4.m.\", \"net.b2.2.bottleneck.\")\n \
          \   name = name.replace(\"model.4.\", \"net.b2.2.\")\n    name = name.replace(\"\
          model.5.\", \"net.b3.0.\")\n    name = name.replace(\"model.6.m.\", \"net.b3.1.bottleneck.\"\
          )\n    name = name.replace(\"model.6.\", \"net.b3.1.\")\n    name = name.replace(\"\
          model.7.\", \"net.b4.0.\")\n    name = name.replace(\"model.8.m.\", \"net.b4.1.bottleneck.\"\
          )\n    name = name.replace(\"model.8.\", \"net.b4.1.\")\n    name = name.replace(\"\
          model.9.\", \"net.b5.0.\")\n    name = name.replace(\"model.12.m.\", \"\
          fpn.n1.bottleneck.\")\n    name = name.replace(\"model.12.\", \"fpn.n1.\"\
          )\n    name = name.replace(\"model.15.m.\", \"fpn.n2.bottleneck.\")\n  \
          \  name = name.replace(\"model.15.\", \"fpn.n2.\")\n    name = name.replace(\"\
          model.16.\", \"fpn.n3.\")\n    name = name.replace(\"model.18.m.\", \"fpn.n4.bottleneck.\"\
          )\n    name = name.replace(\"model.18.\", \"fpn.n4.\")\n    name = name.replace(\"\
          model.19.\", \"fpn.n5.\")\n    name = name.replace(\"model.21.m.\", \"fpn.n6.bottleneck.\"\
          )\n    name = name.replace(\"model.21.\", \"fpn.n6.\")\n    name = name.replace(\"\
          model.22.\", \"head.\")\n    return name\n\ndata = torch.load(\"/tmp/yolov8s-pose.pt\"\
          )\n#data = torch.load(\"/tmp/yolov8s.pt\")\nprint(data)\ntensors = data['model'].state_dict().items()\n\
          tensors = dict(tensors)\ntensors = {rename(k): t for k, t in tensors.items()}\n\
          print(data[\"model\"])\nsave_file(tensors, \"/tmp/model.safetensors\")\n\
          for k, v in tensors.items():\n    print(str(k), v.shape)\n```\n"
        updatedAt: '2023-09-19T13:28:53.874Z'
      numEdits: 0
      reactions: []
    id: 6509a2158cf251f4f1ae2294
    type: comment
  author: lmz
  content: "Here is the very hacky script that I used to create the weight files.\n\
    \n```python\nimport torch\nfrom safetensors.torch import load_file\nfrom safetensors.torch\
    \ import save_file\n\ndef rename(name: str):\n    name = name.replace(\"model.0.\"\
    , \"net.b1.0.\")\n    name = name.replace(\"model.1.\", \"net.b1.1.\")\n    name\
    \ = name.replace(\"model.2.m.\", \"net.b2.0.bottleneck.\")\n    name = name.replace(\"\
    model.2.\", \"net.b2.0.\")\n    name = name.replace(\"model.3.\", \"net.b2.1.\"\
    )\n    name = name.replace(\"model.3.\", \"net.b2.1.\")\n    name = name.replace(\"\
    model.4.m.\", \"net.b2.2.bottleneck.\")\n    name = name.replace(\"model.4.\"\
    , \"net.b2.2.\")\n    name = name.replace(\"model.5.\", \"net.b3.0.\")\n    name\
    \ = name.replace(\"model.6.m.\", \"net.b3.1.bottleneck.\")\n    name = name.replace(\"\
    model.6.\", \"net.b3.1.\")\n    name = name.replace(\"model.7.\", \"net.b4.0.\"\
    )\n    name = name.replace(\"model.8.m.\", \"net.b4.1.bottleneck.\")\n    name\
    \ = name.replace(\"model.8.\", \"net.b4.1.\")\n    name = name.replace(\"model.9.\"\
    , \"net.b5.0.\")\n    name = name.replace(\"model.12.m.\", \"fpn.n1.bottleneck.\"\
    )\n    name = name.replace(\"model.12.\", \"fpn.n1.\")\n    name = name.replace(\"\
    model.15.m.\", \"fpn.n2.bottleneck.\")\n    name = name.replace(\"model.15.\"\
    , \"fpn.n2.\")\n    name = name.replace(\"model.16.\", \"fpn.n3.\")\n    name\
    \ = name.replace(\"model.18.m.\", \"fpn.n4.bottleneck.\")\n    name = name.replace(\"\
    model.18.\", \"fpn.n4.\")\n    name = name.replace(\"model.19.\", \"fpn.n5.\"\
    )\n    name = name.replace(\"model.21.m.\", \"fpn.n6.bottleneck.\")\n    name\
    \ = name.replace(\"model.21.\", \"fpn.n6.\")\n    name = name.replace(\"model.22.\"\
    , \"head.\")\n    return name\n\ndata = torch.load(\"/tmp/yolov8s-pose.pt\")\n\
    #data = torch.load(\"/tmp/yolov8s.pt\")\nprint(data)\ntensors = data['model'].state_dict().items()\n\
    tensors = dict(tensors)\ntensors = {rename(k): t for k, t in tensors.items()}\n\
    print(data[\"model\"])\nsave_file(tensors, \"/tmp/model.safetensors\")\nfor k,\
    \ v in tensors.items():\n    print(str(k), v.shape)\n```\n"
  created_at: 2023-09-19 12:28:53+00:00
  edited: false
  hidden: false
  id: 6509a2158cf251f4f1ae2294
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/1a6c603c6cc9fdc8007aa79122e5dea2.svg
      fullname: kingzcheung
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rkingzhong
      type: user
    createdAt: '2023-09-20T01:32:19.000Z'
    data:
      edited: false
      editors:
      - rkingzhong
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.7638582587242126
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/1a6c603c6cc9fdc8007aa79122e5dea2.svg
          fullname: kingzcheung
          isHf: false
          isPro: false
          name: rkingzhong
          type: user
        html: '<p>thks your script.</p>

          '
        raw: thks your script.
        updatedAt: '2023-09-20T01:32:19.404Z'
      numEdits: 0
      reactions: []
    id: 650a4ba3ce81b73e638378e6
    type: comment
  author: rkingzhong
  content: thks your script.
  created_at: 2023-09-20 00:32:19+00:00
  edited: false
  hidden: false
  id: 650a4ba3ce81b73e638378e6
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/771dce6694c96993c83ecfae3badb619.svg
      fullname: will jiang
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dayn9t
      type: user
    createdAt: '2024-01-04T11:16:10.000Z'
    data:
      edited: false
      editors:
      - dayn9t
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9529412984848022
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/771dce6694c96993c83ecfae3badb619.svg
          fullname: will jiang
          isHf: false
          isPro: false
          name: dayn9t
          type: user
        html: '<p>Thank you for your script, it works very well. I am looking forward
          to your model supporting classification tasks.</p>

          '
        raw: Thank you for your script, it works very well. I am looking forward to
          your model supporting classification tasks.
        updatedAt: '2024-01-04T11:16:10.908Z'
      numEdits: 0
      reactions: []
    id: 6596937af9644536663db274
    type: comment
  author: dayn9t
  content: Thank you for your script, it works very well. I am looking forward to
    your model supporting classification tasks.
  created_at: 2024-01-04 11:16:10+00:00
  edited: false
  hidden: false
  id: 6596937af9644536663db274
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 1
repo_id: lmz/candle-yolo-v8
repo_type: model
status: open
target_branch: null
title: Can you provide scripts that convert to safetensors format?
