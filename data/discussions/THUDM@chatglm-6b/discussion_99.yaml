!!python/object:huggingface_hub.community.DiscussionWithDetails
author: Kissacat
conflicting_files: null
created_at: 2023-10-27 02:01:47+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/0c6c987dab9accc326e07d9a2ec371ef.svg
      fullname: Liu
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Kissacat
      type: user
    createdAt: '2023-10-27T03:01:47.000Z'
    data:
      edited: false
      editors:
      - Kissacat
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6574327945709229
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/0c6c987dab9accc326e07d9a2ec371ef.svg
          fullname: Liu
          isHf: false
          isPro: false
          name: Kissacat
          type: user
        html: '<p>Hello, thank you for your work!!<br>I''ve got a problem when I run
          ChatGLM with LoRa:</p>

          <p> File "/home//Hongwei/.cache/huggingface/modules/transformers_modules/THUDM/chatglm-6b/8b7d33596d18c5e83e2da052d05ca4db02e60620/modeling_chatglm.py",
          line 267, in attention_fn<br>    query_key_layer_scaling_coeff = float(layer_id
          + 1)<br>RuntimeError: CUDA error: no kernel image is available for execution
          on the device</p>

          <p> I found this is because tensor variable (layer_id) is added by non-tensor
          (1). So I change layer_id to .cpu().numpy(). But I DO not know why layer_id
          is a tensor? Is there something wrong in the code?</p>

          <p><a rel="nofollow" href="https://cdn-uploads.huggingface.co/production/uploads/650aec0e7a0d72c9092ee660/uYyvAXoq2udR0M7IvCV20.png"><img
          alt="2.png" src="https://cdn-uploads.huggingface.co/production/uploads/650aec0e7a0d72c9092ee660/uYyvAXoq2udR0M7IvCV20.png"></a></p>

          '
        raw: "Hello, thank you for your work!!\r\nI've got a problem when I run ChatGLM\
          \ with LoRa:\r\n\r\n File \"/home//Hongwei/.cache/huggingface/modules/transformers_modules/THUDM/chatglm-6b/8b7d33596d18c5e83e2da052d05ca4db02e60620/modeling_chatglm.py\"\
          , line 267, in attention_fn\r\n    query_key_layer_scaling_coeff = float(layer_id\
          \ + 1)\r\nRuntimeError: CUDA error: no kernel image is available for execution\
          \ on the device\r\n\r\n\r\n I found this is because tensor variable (layer_id)\
          \ is added by non-tensor (1). So I change layer_id to .cpu().numpy(). But\
          \ I DO not know why layer_id is a tensor? Is there something wrong in the\
          \ code?\r\n\r\n\r\n![2.png](https://cdn-uploads.huggingface.co/production/uploads/650aec0e7a0d72c9092ee660/uYyvAXoq2udR0M7IvCV20.png)\r\
          \n\r\n"
        updatedAt: '2023-10-27T03:01:47.795Z'
      numEdits: 0
      reactions: []
    id: 653b281b251b430ac06effa2
    type: comment
  author: Kissacat
  content: "Hello, thank you for your work!!\r\nI've got a problem when I run ChatGLM\
    \ with LoRa:\r\n\r\n File \"/home//Hongwei/.cache/huggingface/modules/transformers_modules/THUDM/chatglm-6b/8b7d33596d18c5e83e2da052d05ca4db02e60620/modeling_chatglm.py\"\
    , line 267, in attention_fn\r\n    query_key_layer_scaling_coeff = float(layer_id\
    \ + 1)\r\nRuntimeError: CUDA error: no kernel image is available for execution\
    \ on the device\r\n\r\n\r\n I found this is because tensor variable (layer_id)\
    \ is added by non-tensor (1). So I change layer_id to .cpu().numpy(). But I DO\
    \ not know why layer_id is a tensor? Is there something wrong in the code?\r\n\
    \r\n\r\n![2.png](https://cdn-uploads.huggingface.co/production/uploads/650aec0e7a0d72c9092ee660/uYyvAXoq2udR0M7IvCV20.png)\r\
    \n\r\n"
  created_at: 2023-10-27 02:01:47+00:00
  edited: false
  hidden: false
  id: 653b281b251b430ac06effa2
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 99
repo_id: THUDM/chatglm-6b
repo_type: model
status: open
target_branch: null
title: 'Problem: query_key_layer_scaling_coeff = float(layer_id + 1)'
