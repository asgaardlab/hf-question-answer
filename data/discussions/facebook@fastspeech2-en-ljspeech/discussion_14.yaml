!!python/object:huggingface_hub.community.DiscussionWithDetails
author: dekislev
conflicting_files: null
created_at: 2023-06-17 14:51:43+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/7a07ce003299178a8ce0bbd244976219.svg
      fullname: shachar dascalu
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: dekislev
      type: user
    createdAt: '2023-06-17T15:51:43.000Z'
    data:
      edited: true
      editors:
      - dekislev
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.6758860349655151
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/7a07ce003299178a8ce0bbd244976219.svg
          fullname: shachar dascalu
          isHf: false
          isPro: false
          name: dekislev
          type: user
        html: "<p>just wanted to share what worked for me</p>\n<p>i noticed the model\
          \ has a bit of an issue dealing with numbers and punctuations. but it deals\
          \ quite well with a ','<br>so processed my text with:</p>\n<pre><code>text\
          \ = text.replace(\".\", \",\").replace(\"!\", \",\").replace(\"?\", \",\"\
          ).replace(\":\", \",\").replace(\";\", \",\")\ntext= text.replace(\"(\"\
          ,',').replace(\")\",',').replace(\"[\",',').replace(\"]\",',').replace(\"\
          {\",',').replace(\"}\",',')\ntext= text.replace('\"',',').replace(\"\u201C\
          \",',').replace(\"\u201D\",',')\ntext= text.replace(\"-\",' ').replace(\"\
          _\",' ').replace(\"\u2014\",' ').replace(\"\u2013\",' ').replace(\"\u2026\
          \",' ')\n</code></pre>\n<p>in addition i saw it has a bit of a problem pronouncing\
          \ numbers like years.. so even before the replacing i processed it with</p>\n\
          <p>from num2words import num2words<br>import re</p>\n<pre><code>def convert_numbers_to_text(text):\n\
          \    # Regular expression pattern to match numbers\n    pattern = r'\\b\\\
          d+\\b'\n    \n    def replace(match):\n        number = int(match.group())\n\
          \        return num2words(number)\n    \n    # Replace numbers in the text\
          \ with their textual representation\n    converted_text = re.sub(pattern,\
          \ replace, text)\n\n    return converted_text\n\ntext= convert_numbers_to_text(text)\n\
          </code></pre>\n<p>hope it helps you too</p>\n"
        raw: "just wanted to share what worked for me\n\ni noticed the model has a\
          \ bit of an issue dealing with numbers and punctuations. but it deals quite\
          \ well with a ','\nso processed my text with:\n\n    text = text.replace(\"\
          .\", \",\").replace(\"!\", \",\").replace(\"?\", \",\").replace(\":\", \"\
          ,\").replace(\";\", \",\")\n    text= text.replace(\"(\",',').replace(\"\
          )\",',').replace(\"[\",',').replace(\"]\",',').replace(\"{\",',').replace(\"\
          }\",',')\n    text= text.replace('\"',',').replace(\"\u201C\",',').replace(\"\
          \u201D\",',')\n    text= text.replace(\"-\",' ').replace(\"_\",' ').replace(\"\
          \u2014\",' ').replace(\"\u2013\",' ').replace(\"\u2026\",' ')\n\nin addition\
          \ i saw it has a bit of a problem pronouncing numbers like years.. so even\
          \ before the replacing i processed it with\n\nfrom num2words import num2words\n\
          import re\n\n    def convert_numbers_to_text(text):\n        # Regular expression\
          \ pattern to match numbers\n        pattern = r'\\b\\d+\\b'\n        \n\
          \        def replace(match):\n            number = int(match.group())\n\
          \            return num2words(number)\n        \n        # Replace numbers\
          \ in the text with their textual representation\n        converted_text\
          \ = re.sub(pattern, replace, text)\n    \n        return converted_text\n\
          \n    text= convert_numbers_to_text(text)\n\nhope it helps you too\n"
        updatedAt: '2023-06-17T15:53:02.248Z'
      numEdits: 1
      reactions:
      - count: 4
        reaction: "\u2764\uFE0F"
        users:
        - Curlynoemi
        - csro7788
        - potatocharlie
        - MadameMinty
    id: 648dd68f1d237187c9c9edc9
    type: comment
  author: dekislev
  content: "just wanted to share what worked for me\n\ni noticed the model has a bit\
    \ of an issue dealing with numbers and punctuations. but it deals quite well with\
    \ a ','\nso processed my text with:\n\n    text = text.replace(\".\", \",\").replace(\"\
    !\", \",\").replace(\"?\", \",\").replace(\":\", \",\").replace(\";\", \",\")\n\
    \    text= text.replace(\"(\",',').replace(\")\",',').replace(\"[\",',').replace(\"\
    ]\",',').replace(\"{\",',').replace(\"}\",',')\n    text= text.replace('\"',',').replace(\"\
    \u201C\",',').replace(\"\u201D\",',')\n    text= text.replace(\"-\",' ').replace(\"\
    _\",' ').replace(\"\u2014\",' ').replace(\"\u2013\",' ').replace(\"\u2026\",'\
    \ ')\n\nin addition i saw it has a bit of a problem pronouncing numbers like years..\
    \ so even before the replacing i processed it with\n\nfrom num2words import num2words\n\
    import re\n\n    def convert_numbers_to_text(text):\n        # Regular expression\
    \ pattern to match numbers\n        pattern = r'\\b\\d+\\b'\n        \n      \
    \  def replace(match):\n            number = int(match.group())\n            return\
    \ num2words(number)\n        \n        # Replace numbers in the text with their\
    \ textual representation\n        converted_text = re.sub(pattern, replace, text)\n\
    \    \n        return converted_text\n\n    text= convert_numbers_to_text(text)\n\
    \nhope it helps you too\n"
  created_at: 2023-06-17 14:51:43+00:00
  edited: true
  hidden: false
  id: 648dd68f1d237187c9c9edc9
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/bbaff61778471d9e2c5a18ca20a97318.svg
      fullname: Alireza Ataei
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: aXlireza
      type: user
    createdAt: '2023-06-23T15:28:52.000Z'
    data:
      edited: false
      editors:
      - aXlireza
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9884032607078552
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/bbaff61778471d9e2c5a18ca20a97318.svg
          fullname: Alireza Ataei
          isHf: false
          isPro: false
          name: aXlireza
          type: user
        html: '<p>That did the job, thanks a lot!</p>

          '
        raw: That did the job, thanks a lot!
        updatedAt: '2023-06-23T15:28:52.144Z'
      numEdits: 0
      reactions: []
    id: 6495ba34961457314f42ccd1
    type: comment
  author: aXlireza
  content: That did the job, thanks a lot!
  created_at: 2023-06-23 14:28:52+00:00
  edited: false
  hidden: false
  id: 6495ba34961457314f42ccd1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/bbaff61778471d9e2c5a18ca20a97318.svg
      fullname: Alireza Ataei
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: aXlireza
      type: user
    createdAt: '2023-06-25T16:45:52.000Z'
    data:
      edited: false
      editors:
      - aXlireza
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9762452840805054
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/bbaff61778471d9e2c5a18ca20a97318.svg
          fullname: Alireza Ataei
          isHf: false
          isPro: false
          name: aXlireza
          type: user
        html: '<p>I actually ended up splitting the paragraphs by the "dot"s in there
          and feed them to the model separately which showed a better result</p>

          '
        raw: I actually ended up splitting the paragraphs by the "dot"s in there and
          feed them to the model separately which showed a better result
        updatedAt: '2023-06-25T16:45:52.918Z'
      numEdits: 0
      reactions: []
    id: 64986f405b5d43c1c785e9e4
    type: comment
  author: aXlireza
  content: I actually ended up splitting the paragraphs by the "dot"s in there and
    feed them to the model separately which showed a better result
  created_at: 2023-06-25 15:45:52+00:00
  edited: false
  hidden: false
  id: 64986f405b5d43c1c785e9e4
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 14
repo_id: facebook/fastspeech2-en-ljspeech
repo_type: model
status: open
target_branch: null
title: adding pauses and dealing with numbers
