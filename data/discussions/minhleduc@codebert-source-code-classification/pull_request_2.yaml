!!python/object:huggingface_hub.community.DiscussionWithDetails
author: nassi
conflicting_files: []
created_at: 2023-07-03 11:27:06+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d3d4504e52a91675ca9ddda9b877c275.svg
      fullname: nassima
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nassi
      type: user
    createdAt: '2023-07-03T12:27:06.000Z'
    data:
      edited: true
      editors:
      - nassi
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5521208047866821
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d3d4504e52a91675ca9ddda9b877c275.svg
          fullname: nassima
          isHf: false
          isPro: false
          name: nassi
          type: user
        html: '<p>To classifier a code source use </p>

          <p>import torch<br>from transformers import RobertaTokenizer, RobertaConfig,
          RobertaModel</p>

          <p>device = torch.device("cuda" if torch.cuda.is_available() else "cpu")<br>tokenizer
          = RobertaTokenizer.from_pretrained("microsoft/codebert-base")<br>model =
          RobertaModel.from_pretrained("microsoft/codebert-base")<br>model.to(device)</p>

          <p>If you want more informations you can go to <a rel="nofollow" href="https://github.com/microsoft/CodeBERT">https://github.com/microsoft/CodeBERT</a></p>

          <p>It tokenizes the source code as well</p>

          <p>But I need a help to create a binary classification depending in the
          result of the tokenizer</p>

          '
        raw: "To classifier a code source use \n\nimport torch\nfrom transformers\
          \ import RobertaTokenizer, RobertaConfig, RobertaModel\n\ndevice = torch.device(\"\
          cuda\" if torch.cuda.is_available() else \"cpu\")\ntokenizer = RobertaTokenizer.from_pretrained(\"\
          microsoft/codebert-base\")\nmodel = RobertaModel.from_pretrained(\"microsoft/codebert-base\"\
          )\nmodel.to(device)\n\nIf you want more informations you can go to https://github.com/microsoft/CodeBERT\n\
          \nIt tokenizes the source code as well\n\nBut I need a help to create a\
          \ binary classification depending in the result of the tokenizer"
        updatedAt: '2023-07-03T12:28:00.935Z'
      numEdits: 1
      reactions: []
    id: 64a2be9a674199d4361489f0
    type: comment
  author: nassi
  content: "To classifier a code source use \n\nimport torch\nfrom transformers import\
    \ RobertaTokenizer, RobertaConfig, RobertaModel\n\ndevice = torch.device(\"cuda\"\
    \ if torch.cuda.is_available() else \"cpu\")\ntokenizer = RobertaTokenizer.from_pretrained(\"\
    microsoft/codebert-base\")\nmodel = RobertaModel.from_pretrained(\"microsoft/codebert-base\"\
    )\nmodel.to(device)\n\nIf you want more informations you can go to https://github.com/microsoft/CodeBERT\n\
    \nIt tokenizes the source code as well\n\nBut I need a help to create a binary\
    \ classification depending in the result of the tokenizer"
  created_at: 2023-07-03 11:27:06+00:00
  edited: true
  hidden: false
  id: 64a2be9a674199d4361489f0
  type: comment
- !!python/object:huggingface_hub.community.DiscussionCommit
  _event:
    author:
      avatarUrl: /avatars/d3d4504e52a91675ca9ddda9b877c275.svg
      fullname: nassima
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: nassi
      type: user
    createdAt: '2023-07-03T12:27:07.000Z'
    data:
      oid: e8609a381037025c61ba7961e5a2d3ef448b8a61
      parents:
      - 55b8ad397e54432016bc0ca954659e86e9a2b6ab
      subject: Create README.md
    id: 64a2be9b0000000000000000
    type: commit
  author: nassi
  created_at: 2023-07-03 11:27:07+00:00
  id: 64a2be9b0000000000000000
  oid: e8609a381037025c61ba7961e5a2d3ef448b8a61
  summary: Create README.md
  type: commit
is_pull_request: true
merge_commit_oid: null
num: 2
repo_id: minhleduc/codebert-source-code-classification
repo_type: model
status: open
target_branch: refs/heads/main
title: Create README.md
