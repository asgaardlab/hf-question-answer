!!python/object:huggingface_hub.community.DiscussionWithDetails
author: snedubey
conflicting_files: null
created_at: 2023-08-04 15:59:39+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0db04af534b2885ea1d319a1ca0477e.svg
      fullname: Sneha Dubey
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: snedubey
      type: user
    createdAt: '2023-08-04T16:59:39.000Z'
    data:
      edited: false
      editors:
      - snedubey
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9489202499389648
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0db04af534b2885ea1d319a1ca0477e.svg
          fullname: Sneha Dubey
          isHf: false
          isPro: false
          name: snedubey
          type: user
        html: '<p>Hello. I wanted to finetune this model on my data and was wondering
          what operator indexes you used in order to initially train this model. For
          instance, I see that your model supports the "like" operator and wanted
          to know how I can finetune this for my data.</p>

          '
        raw: Hello. I wanted to finetune this model on my data and was wondering what
          operator indexes you used in order to initially train this model. For instance,
          I see that your model supports the "like" operator and wanted to know how
          I can finetune this for my data.
        updatedAt: '2023-08-04T16:59:39.276Z'
      numEdits: 0
      reactions: []
    id: 64cd2e7be7b70e91a204aef4
    type: comment
  author: snedubey
  content: Hello. I wanted to finetune this model on my data and was wondering what
    operator indexes you used in order to initially train this model. For instance,
    I see that your model supports the "like" operator and wanted to know how I can
    finetune this for my data.
  created_at: 2023-08-04 15:59:39+00:00
  edited: false
  hidden: false
  id: 64cd2e7be7b70e91a204aef4
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
      fullname: Siwa Boonpunmongkol
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: juierror
      type: user
    createdAt: '2023-08-06T01:28:05.000Z'
    data:
      edited: false
      editors:
      - juierror
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9062370657920837
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
          fullname: Siwa Boonpunmongkol
          isHf: false
          isPro: false
          name: juierror
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;snedubey&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/snedubey\">@<span class=\"\
          underline\">snedubey</span></a></span>\n\n\t</span></span> </p>\n<p>Hi,\
          \ I use T5 model and tokenizer as a base, so it already support the token\
          \ \"like\". Also, I think the result is depends on the finetune data, for\
          \ example in my case, the data already contains the word \"like\" in query,\
          \ so it can learn this word.</p>\n"
        raw: "@snedubey \n\nHi, I use T5 model and tokenizer as a base, so it already\
          \ support the token \"like\". Also, I think the result is depends on the\
          \ finetune data, for example in my case, the data already contains the word\
          \ \"like\" in query, so it can learn this word."
        updatedAt: '2023-08-06T01:28:05.380Z'
      numEdits: 0
      reactions: []
    id: 64cef725f6925572dae2e0a1
    type: comment
  author: juierror
  content: "@snedubey \n\nHi, I use T5 model and tokenizer as a base, so it already\
    \ support the token \"like\". Also, I think the result is depends on the finetune\
    \ data, for example in my case, the data already contains the word \"like\" in\
    \ query, so it can learn this word."
  created_at: 2023-08-06 00:28:05+00:00
  edited: false
  hidden: false
  id: 64cef725f6925572dae2e0a1
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c0db04af534b2885ea1d319a1ca0477e.svg
      fullname: Sneha Dubey
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: snedubey
      type: user
    createdAt: '2023-08-07T16:51:17.000Z'
    data:
      edited: true
      editors:
      - snedubey
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9396480321884155
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c0db04af534b2885ea1d319a1ca0477e.svg
          fullname: Sneha Dubey
          isHf: false
          isPro: false
          name: snedubey
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;juierror&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/juierror\">@<span class=\"\
          underline\">juierror</span></a></span>\n\n\t</span></span> Say for instance\
          \ that I wanted to train the model to specifically output \" select * from\
          \ table where studentID like \"%1001%\" \" when I ask for a list of students\
          \ whose ID's contain the sequence \"1001\", how would I go about training\
          \ the \"like\" operator to adapt to my data? What about the \"in\" and \"\
          between\" operators? How would I fine-tune other specific operators according\
          \ to my data schema?</p>\n"
        raw: '@juierror Say for instance that I wanted to train the model to specifically
          output " select * from table where studentID like "%1001%" " when I ask
          for a list of students whose ID''s contain the sequence "1001", how would
          I go about training the "like" operator to adapt to my data? What about
          the "in" and "between" operators? How would I fine-tune other specific operators
          according to my data schema?'
        updatedAt: '2023-08-08T16:46:49.697Z'
      numEdits: 1
      reactions: []
    id: 64d1210544d373d7065e04e9
    type: comment
  author: snedubey
  content: '@juierror Say for instance that I wanted to train the model to specifically
    output " select * from table where studentID like "%1001%" " when I ask for a
    list of students whose ID''s contain the sequence "1001", how would I go about
    training the "like" operator to adapt to my data? What about the "in" and "between"
    operators? How would I fine-tune other specific operators according to my data
    schema?'
  created_at: 2023-08-07 15:51:17+00:00
  edited: true
  hidden: false
  id: 64d1210544d373d7065e04e9
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
      fullname: Siwa Boonpunmongkol
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: juierror
      type: user
    createdAt: '2023-08-11T00:16:46.000Z'
    data:
      edited: false
      editors:
      - juierror
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9071800112724304
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
          fullname: Siwa Boonpunmongkol
          isHf: false
          isPro: false
          name: juierror
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;snedubey&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/snedubey\">@<span class=\"\
          underline\">snedubey</span></a></span>\n\n\t</span></span> </p>\n<p>Sorry\
          \ for late reply, actually, I have some code for this <a rel=\"nofollow\"\
          \ href=\"https://github.com/juierror/flan-t5-text-to-sql\">https://github.com/juierror/flan-t5-text-to-sql</a>.\
          \ The idea is simple, if you want to train model to know each operator Ex.\
          \ like, in, between, your training data should contain it for traning the\
          \ model. From the example code, you can see that I load the wikisql data\
          \ and it should contain operator I want to train. (However, in this model,\
          \ I use other dataset that have example about multiple table instead)</p>\n"
        raw: "@snedubey \n\nSorry for late reply, actually, I have some code for this\
          \ https://github.com/juierror/flan-t5-text-to-sql. The idea is simple, if\
          \ you want to train model to know each operator Ex. like, in, between, your\
          \ training data should contain it for traning the model. From the example\
          \ code, you can see that I load the wikisql data and it should contain operator\
          \ I want to train. (However, in this model, I use other dataset that have\
          \ example about multiple table instead)"
        updatedAt: '2023-08-11T00:16:46.583Z'
      numEdits: 0
      reactions: []
    id: 64d57deebcab729cb48ad23d
    type: comment
  author: juierror
  content: "@snedubey \n\nSorry for late reply, actually, I have some code for this\
    \ https://github.com/juierror/flan-t5-text-to-sql. The idea is simple, if you\
    \ want to train model to know each operator Ex. like, in, between, your training\
    \ data should contain it for traning the model. From the example code, you can\
    \ see that I load the wikisql data and it should contain operator I want to train.\
    \ (However, in this model, I use other dataset that have example about multiple\
    \ table instead)"
  created_at: 2023-08-10 23:16:46+00:00
  edited: false
  hidden: false
  id: 64d57deebcab729cb48ad23d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d6d8ec893b26d14f4ff044ffbb33d583.svg
      fullname: Nisha Goyal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Nisha25
      type: user
    createdAt: '2023-08-18T12:14:45.000Z'
    data:
      edited: false
      editors:
      - Nisha25
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9204613566398621
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d6d8ec893b26d14f4ff044ffbb33d583.svg
          fullname: Nisha Goyal
          isHf: false
          isPro: false
          name: Nisha25
          type: user
        html: '<p>Hi, I wanted to ask how you are extracting the table name for given
          data because sometimes it creates its own table name. If I want to change
          the table name how can I do that?</p>

          '
        raw: Hi, I wanted to ask how you are extracting the table name for given data
          because sometimes it creates its own table name. If I want to change the
          table name how can I do that?
        updatedAt: '2023-08-18T12:14:45.261Z'
      numEdits: 0
      reactions: []
    id: 64df60b5f1c0da1d0bccaf69
    type: comment
  author: Nisha25
  content: Hi, I wanted to ask how you are extracting the table name for given data
    because sometimes it creates its own table name. If I want to change the table
    name how can I do that?
  created_at: 2023-08-18 11:14:45+00:00
  edited: false
  hidden: false
  id: 64df60b5f1c0da1d0bccaf69
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
      fullname: Siwa Boonpunmongkol
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: juierror
      type: user
    createdAt: '2023-08-21T12:42:57.000Z'
    data:
      edited: false
      editors:
      - juierror
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9692630767822266
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
          fullname: Siwa Boonpunmongkol
          isHf: false
          isPro: false
          name: juierror
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;Nisha25&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Nisha25\">@<span class=\"\
          underline\">Nisha25</span></a></span>\n\n\t</span></span> </p>\n<p>Sorry\
          \ for late reply.</p>\n<p>Actually, I didn't do anything special to extract\
          \ the table name. The training data has the table name in it, and we fine-tuned\
          \ the model with the hope that it would learn which token represents the\
          \ table name. In this case, the model might not have learned it correctly.</p>\n"
        raw: "@Nisha25 \n\nSorry for late reply.\n\nActually, I didn't do anything\
          \ special to extract the table name. The training data has the table name\
          \ in it, and we fine-tuned the model with the hope that it would learn which\
          \ token represents the table name. In this case, the model might not have\
          \ learned it correctly."
        updatedAt: '2023-08-21T12:42:57.515Z'
      numEdits: 0
      reactions: []
    id: 64e35bd152a2eece10a8a898
    type: comment
  author: juierror
  content: "@Nisha25 \n\nSorry for late reply.\n\nActually, I didn't do anything special\
    \ to extract the table name. The training data has the table name in it, and we\
    \ fine-tuned the model with the hope that it would learn which token represents\
    \ the table name. In this case, the model might not have learned it correctly."
  created_at: 2023-08-21 11:42:57+00:00
  edited: false
  hidden: false
  id: 64e35bd152a2eece10a8a898
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/d6d8ec893b26d14f4ff044ffbb33d583.svg
      fullname: Nisha Goyal
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Nisha25
      type: user
    createdAt: '2023-08-22T11:10:24.000Z'
    data:
      edited: false
      editors:
      - Nisha25
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.9457060694694519
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/d6d8ec893b26d14f4ff044ffbb33d583.svg
          fullname: Nisha Goyal
          isHf: false
          isPro: false
          name: Nisha25
          type: user
        html: '<p>Thank you so much for the reply. I have one more doubt: sometimes
          the model generates very complex queries for simple questions, unnecessarily
          adding a join operator which throws an error. Can you help with this issue?</p>

          '
        raw: 'Thank you so much for the reply. I have one more doubt: sometimes the
          model generates very complex queries for simple questions, unnecessarily
          adding a join operator which throws an error. Can you help with this issue?'
        updatedAt: '2023-08-22T11:10:24.446Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F44D"
        users:
        - AayushShah
    id: 64e497a082110e1785643f37
    type: comment
  author: Nisha25
  content: 'Thank you so much for the reply. I have one more doubt: sometimes the
    model generates very complex queries for simple questions, unnecessarily adding
    a join operator which throws an error. Can you help with this issue?'
  created_at: 2023-08-22 10:10:24+00:00
  edited: false
  hidden: false
  id: 64e497a082110e1785643f37
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
      fullname: Siwa Boonpunmongkol
      isHf: false
      isOrgMember: false
      isOwner: true
      isPro: false
      name: juierror
      type: user
    createdAt: '2023-08-23T12:34:33.000Z'
    data:
      edited: false
      editors:
      - juierror
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8945932388305664
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c90043d021dfce39448979dee01350eb.svg
          fullname: Siwa Boonpunmongkol
          isHf: false
          isPro: false
          name: juierror
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;Nisha25&quot;}\" data-target=\"\
          UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\">\n\n<span class=\"\
          inline-block\"><span class=\"contents\"><a href=\"/Nisha25\">@<span class=\"\
          underline\">Nisha25</span></a></span>\n\n\t</span></span> </p>\n<p>Hi, actually,\
          \ I notice that as well. From my opinion, the data I used to finetuned the\
          \ model right now is a little bit small, so the result is not good and I'm\
          \ not sure how to improve the result. </p>\n<p>I also provide the code for\
          \ finetuned the model, so if you have your own data, you can try it as well</p>\n\
          <p><a rel=\"nofollow\" href=\"https://github.com/juierror/flan-t5-text-to-sql/blob/main/flan_t5_text2sql_multi_table.ipynb\"\
          >https://github.com/juierror/flan-t5-text-to-sql/blob/main/flan_t5_text2sql_multi_table.ipynb</a></p>\n"
        raw: "@Nisha25 \n\nHi, actually, I notice that as well. From my opinion, the\
          \ data I used to finetuned the model right now is a little bit small, so\
          \ the result is not good and I'm not sure how to improve the result. \n\n\
          I also provide the code for finetuned the model, so if you have your own\
          \ data, you can try it as well\n\nhttps://github.com/juierror/flan-t5-text-to-sql/blob/main/flan_t5_text2sql_multi_table.ipynb"
        updatedAt: '2023-08-23T12:34:33.382Z'
      numEdits: 0
      reactions: []
    id: 64e5fcd96c3628dd7a5de4c8
    type: comment
  author: juierror
  content: "@Nisha25 \n\nHi, actually, I notice that as well. From my opinion, the\
    \ data I used to finetuned the model right now is a little bit small, so the result\
    \ is not good and I'm not sure how to improve the result. \n\nI also provide the\
    \ code for finetuned the model, so if you have your own data, you can try it as\
    \ well\n\nhttps://github.com/juierror/flan-t5-text-to-sql/blob/main/flan_t5_text2sql_multi_table.ipynb"
  created_at: 2023-08-23 11:34:33+00:00
  edited: false
  hidden: false
  id: 64e5fcd96c3628dd7a5de4c8
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/a66881860f4593242772ba629202f07f.svg
      fullname: ved deo
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: vedica1011
      type: user
    createdAt: '2023-11-08T20:12:56.000Z'
    data:
      edited: false
      editors:
      - vedica1011
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.96236652135849
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/a66881860f4593242772ba629202f07f.svg
          fullname: ved deo
          isHf: false
          isPro: false
          name: vedica1011
          type: user
        html: '<p>can we train this on CPU as well? and what we should do if we have
          to add the domain information in the model</p>

          '
        raw: can we train this on CPU as well? and what we should do if we have to
          add the domain information in the model
        updatedAt: '2023-11-08T20:12:56.462Z'
      numEdits: 0
      reactions: []
    id: 654bebc818a515089b660b12
    type: comment
  author: vedica1011
  content: can we train this on CPU as well? and what we should do if we have to add
    the domain information in the model
  created_at: 2023-11-08 20:12:56+00:00
  edited: false
  hidden: false
  id: 654bebc818a515089b660b12
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: juierror/flan-t5-text2sql-with-schema-v2
repo_type: model
status: open
target_branch: null
title: Finetuning Operators
