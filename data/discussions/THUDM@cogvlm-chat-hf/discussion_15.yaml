!!python/object:huggingface_hub.community.DiscussionWithDetails
author: HClovo
conflicting_files: null
created_at: 2023-12-21 02:50:51+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/c9c2c834add52cd6aeb94da07e47a7c1.svg
      fullname: Alan Yan
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: HClovo
      type: user
    createdAt: '2023-12-21T02:50:51.000Z'
    data:
      edited: false
      editors:
      - HClovo
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.33174002170562744
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/c9c2c834add52cd6aeb94da07e47a7c1.svg
          fullname: Alan Yan
          isHf: false
          isPro: false
          name: HClovo
          type: user
        html: '<p>NotImplementedError                       Traceback (most recent
          call last)<br>Cell In[2], line 14<br>     11 gen_kwargs = {"max_length":
          2048, "do_sample": False}<br>     13 with torch.no_grad():<br>---&gt; 14     outputs
          = model.generate(**inputs, **gen_kwargs)<br>     15     outputs = outputs[:,
          inputs[''input_ids''].shape[1]:]<br>     16     print(tokenizer.decode(outputs[0]))</p>

          <p>File ~/.local/lib/python3.10/site-packages/torch/utils/_contextlib.py:115,
          in context_decorator..decorate_context(*args, **kwargs)<br>    112 @functools.wraps(func)<br>    113
          def decorate_context(*args, **kwargs):<br>    114     with ctx_factory():<br>--&gt;
          115         return func(*args, **kwargs)</p>

          <p>File ~/.local/lib/python3.10/site-packages/transformers/generation/utils.py:1718,
          in GenerationMixin.generate(self, inputs, generation_config, logits_processor,
          stopping_criteria, prefix_allowed_tokens_fn, synced_gpus, assistant_model,
          streamer, negative_prompt_ids, negative_prompt_attention_mask, **kwargs)<br>   1701     return
          self.assisted_decoding(<br>   1702         input_ids,<br>   1703         assistant_model=assistant_model,<br>   (...)<br>   1714         **model_kwargs,<br>   1715     )<br>   1716
          if generation_mode == GenerationMode.GREEDY_SEARCH:<br>   1717     # 11.
          run greedy search<br>-&gt; 1718     return self.greedy_search(<br>...<br>    max(query.shape[-1]
          != value.shape[-1]) &gt; 32<br>    dtype=torch.bfloat16 (supported: {torch.float32})<br>    has
          custom scale<br>    bf16 is only supported on A100+ GPUs<br>    unsupported
          embed per head: 112</p>

          '
        raw: "NotImplementedError                       Traceback (most recent call\
          \ last)\r\nCell In[2], line 14\r\n     11 gen_kwargs = {\"max_length\":\
          \ 2048, \"do_sample\": False}\r\n     13 with torch.no_grad():\r\n---> 14\
          \     outputs = model.generate(**inputs, **gen_kwargs)\r\n     15     outputs\
          \ = outputs[:, inputs['input_ids'].shape[1]:]\r\n     16     print(tokenizer.decode(outputs[0]))\r\
          \n\r\nFile ~/.local/lib/python3.10/site-packages/torch/utils/_contextlib.py:115,\
          \ in context_decorator.<locals>.decorate_context(*args, **kwargs)\r\n  \
          \  112 @functools.wraps(func)\r\n    113 def decorate_context(*args, **kwargs):\r\
          \n    114     with ctx_factory():\r\n--> 115         return func(*args,\
          \ **kwargs)\r\n\r\nFile ~/.local/lib/python3.10/site-packages/transformers/generation/utils.py:1718,\
          \ in GenerationMixin.generate(self, inputs, generation_config, logits_processor,\
          \ stopping_criteria, prefix_allowed_tokens_fn, synced_gpus, assistant_model,\
          \ streamer, negative_prompt_ids, negative_prompt_attention_mask, **kwargs)\r\
          \n   1701     return self.assisted_decoding(\r\n   1702         input_ids,\r\
          \n   1703         assistant_model=assistant_model,\r\n   (...)\r\n   1714\
          \         **model_kwargs,\r\n   1715     )\r\n   1716 if generation_mode\
          \ == GenerationMode.GREEDY_SEARCH:\r\n   1717     # 11. run greedy search\r\
          \n-> 1718     return self.greedy_search(\r\n...\r\n    max(query.shape[-1]\
          \ != value.shape[-1]) > 32\r\n    dtype=torch.bfloat16 (supported: {torch.float32})\r\
          \n    has custom scale\r\n    bf16 is only supported on A100+ GPUs\r\n \
          \   unsupported embed per head: 112"
        updatedAt: '2023-12-21T02:50:51.219Z'
      numEdits: 0
      reactions: []
    id: 6583a80be09e5df0307d2e30
    type: comment
  author: HClovo
  content: "NotImplementedError                       Traceback (most recent call\
    \ last)\r\nCell In[2], line 14\r\n     11 gen_kwargs = {\"max_length\": 2048,\
    \ \"do_sample\": False}\r\n     13 with torch.no_grad():\r\n---> 14     outputs\
    \ = model.generate(**inputs, **gen_kwargs)\r\n     15     outputs = outputs[:,\
    \ inputs['input_ids'].shape[1]:]\r\n     16     print(tokenizer.decode(outputs[0]))\r\
    \n\r\nFile ~/.local/lib/python3.10/site-packages/torch/utils/_contextlib.py:115,\
    \ in context_decorator.<locals>.decorate_context(*args, **kwargs)\r\n    112 @functools.wraps(func)\r\
    \n    113 def decorate_context(*args, **kwargs):\r\n    114     with ctx_factory():\r\
    \n--> 115         return func(*args, **kwargs)\r\n\r\nFile ~/.local/lib/python3.10/site-packages/transformers/generation/utils.py:1718,\
    \ in GenerationMixin.generate(self, inputs, generation_config, logits_processor,\
    \ stopping_criteria, prefix_allowed_tokens_fn, synced_gpus, assistant_model, streamer,\
    \ negative_prompt_ids, negative_prompt_attention_mask, **kwargs)\r\n   1701  \
    \   return self.assisted_decoding(\r\n   1702         input_ids,\r\n   1703  \
    \       assistant_model=assistant_model,\r\n   (...)\r\n   1714         **model_kwargs,\r\
    \n   1715     )\r\n   1716 if generation_mode == GenerationMode.GREEDY_SEARCH:\r\
    \n   1717     # 11. run greedy search\r\n-> 1718     return self.greedy_search(\r\
    \n...\r\n    max(query.shape[-1] != value.shape[-1]) > 32\r\n    dtype=torch.bfloat16\
    \ (supported: {torch.float32})\r\n    has custom scale\r\n    bf16 is only supported\
    \ on A100+ GPUs\r\n    unsupported embed per head: 112"
  created_at: 2023-12-21 02:50:51+00:00
  edited: false
  hidden: false
  id: 6583a80be09e5df0307d2e30
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 15
repo_id: THUDM/cogvlm-chat-hf
repo_type: model
status: open
target_branch: null
title: bf16 is only supported on A100+ GPUs
