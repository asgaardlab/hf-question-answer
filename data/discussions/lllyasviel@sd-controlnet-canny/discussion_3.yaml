!!python/object:huggingface_hub.community.DiscussionWithDetails
author: kmcgrath
conflicting_files: null
created_at: 2023-03-15 20:45:57+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/409d687a9d08cc7cf3d75fdce840fd82.svg
      fullname: Kyle McGrath
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: kmcgrath
      type: user
    createdAt: '2023-03-15T21:45:57.000Z'
    data:
      edited: false
      editors:
      - kmcgrath
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/409d687a9d08cc7cf3d75fdce840fd82.svg
          fullname: Kyle McGrath
          isHf: false
          isPro: false
          name: kmcgrath
          type: user
        html: "<h2 id=\"questions-are-listed-at-bottom\">Questions are listed at bottom!\
          \ </h2>\n<p>Hello,</p>\n<p>Thank you for the work bringing this to the Diffusers\
          \ library! I wanted to understand if  Optimum ONNX export was possible with\
          \ slight modifications to the repo (i.e. adding a valid model_index.json),\
          \ or if changes were needed on the \U0001F917 Optimum codebase as well.</p>\n\
          <p>I attempted to create a <code>StableDiffusionControlNetPipeline</code>\
          \ instance in <code>model_index.json</code> in my personal forked repo:\
          \  <a href=\"https://huggingface.co/kmcgrath/sd-controlnet-canny-fork\"\
          >kmcgrath/sd-controlnet-canny-fork</a>.</p>\n<p>In python the model is constructed\
          \ by creating a <code>ControlNetModel</code>object and then passing this\
          \ into the <code>StableDiffusionControlNetModel</code> object.</p>\n<p>I\
          \ tried to represent this in <a href=\"https://huggingface.co/kmcgrath/sd-controlnet-canny-fork/blob/main/model_index.json\"\
          ><code>model_index.json</code></a> similarly:</p>\n<pre><code>{\n  \"_class_name\"\
          : \"StableDiffusionControlNetPipeline\",\n  \"_diffusers_version\": \"0.14.0.dev0\"\
          ,\n  \"controlnet\": [\n    \"diffusers\",\n    \"ControlNetModel\"\n  ],\n\
          \  \"feature_extractor\": [\n    \"transformers\",\n    \"CLIPFeatureExtractor\"\
          \n  ],\n  \"safety_checker\": [\n    null,\n    null\n  ],\n  \"scheduler\"\
          : [\n    \"diffusers\",\n    \"PNDMScheduler\"\n  ],\n  \"text_encoder\"\
          : [\n    \"transformers\",\n    \"CLIPTextModel\"\n  ],\n  \"tokenizer\"\
          : [\n    \"transformers\",\n    \"CLIPTokenizer\"\n  ],\n  \"unet\": [\n\
          \    \"diffusers\",\n    \"UNet2DConditionModel\"\n  ],\n  \"vae\": [\n\
          \    \"diffusers\",\n    \"AutoencoderKL\"\n  ]\n}\n</code></pre>\n<p>Since\
          \ the above requires the \"feature_extractor\", \"vae\", \"unet\", etc...\
          \ models and configs in seperate folders, I copied these models and configs\
          \ from <a href=\"https://huggingface.co/runwayml/stable-diffusion-v1-5\"\
          >runwayml/stable-diffusion-v1-5</a> and placed them into the forked copy\
          \ of this branch.</p>\n<p>I then attempted export:<br><code>python  -m optimum.exporters.onnx\
          \ --model sd-controlnet-canny-fork/ --task stable-diffusion .</code></p>\n\
          <p>Optimum was able to run, but it seemed that the extra folder and argument\
          \ I had created for controlnet was not recognized, instead, optimum seemed\
          \ to do a basic export of <em>just</em> the runwayml/stable-diffusion-v1-5\
          \ models, and the output model_index.json had:  <code>\"_class_name\": \"\
          StableDiffusionPipeline\"</code> indicating that it did not recognize the\
          \ <code>\"StableDiffusionControlNetPipeline\"</code> argument.</p>\n<h2\
          \ id=\"questions\">Questions</h2>\n<ol>\n<li>Is this supported already in\
          \ Huggingface Optimum and I just did not get the model_index.json correct?</li>\n\
          <li>Or is more work required in Optimum to allow for export of <code>StableDiffusionControlNetModel</code>\
          \ objects?</li>\n</ol>\n<p>Tagging <span data-props=\"{&quot;user&quot;:&quot;patrickvonplaten&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/patrickvonplaten\"\
          >@<span class=\"underline\">patrickvonplaten</span></a></span>\n\n\t</span></span>:\
          \ if you have any advice it would be greatly appreciated!</p>\n<p>Thank\
          \ you</p>\n"
        raw: "Questions are listed at bottom! \r\n---\r\nHello,\r\n\r\nThank you for\
          \ the work bringing this to the Diffusers library! I wanted to understand\
          \ if  Optimum ONNX export was possible with slight modifications to the\
          \ repo (i.e. adding a valid model_index.json), or if changes were needed\
          \ on the \U0001F917 Optimum codebase as well.\r\n\r\nI attempted to create\
          \ a `StableDiffusionControlNetPipeline` instance in `model_index.json` in\
          \ my personal forked repo:  [kmcgrath/sd-controlnet-canny-fork](https://huggingface.co/kmcgrath/sd-controlnet-canny-fork).\r\
          \n\r\nIn python the model is constructed by creating a `ControlNetModel`object\
          \ and then passing this into the `StableDiffusionControlNetModel` object.\r\
          \n\r\nI tried to represent this in [`model_index.json`](https://huggingface.co/kmcgrath/sd-controlnet-canny-fork/blob/main/model_index.json)\
          \ similarly:\r\n```\r\n{\r\n  \"_class_name\": \"StableDiffusionControlNetPipeline\"\
          ,\r\n  \"_diffusers_version\": \"0.14.0.dev0\",\r\n  \"controlnet\": [\r\
          \n    \"diffusers\",\r\n    \"ControlNetModel\"\r\n  ],\r\n  \"feature_extractor\"\
          : [\r\n    \"transformers\",\r\n    \"CLIPFeatureExtractor\"\r\n  ],\r\n\
          \  \"safety_checker\": [\r\n    null,\r\n    null\r\n  ],\r\n  \"scheduler\"\
          : [\r\n    \"diffusers\",\r\n    \"PNDMScheduler\"\r\n  ],\r\n  \"text_encoder\"\
          : [\r\n    \"transformers\",\r\n    \"CLIPTextModel\"\r\n  ],\r\n  \"tokenizer\"\
          : [\r\n    \"transformers\",\r\n    \"CLIPTokenizer\"\r\n  ],\r\n  \"unet\"\
          : [\r\n    \"diffusers\",\r\n    \"UNet2DConditionModel\"\r\n  ],\r\n  \"\
          vae\": [\r\n    \"diffusers\",\r\n    \"AutoencoderKL\"\r\n  ]\r\n}\r\n\
          ```\r\nSince the above requires the \"feature_extractor\", \"vae\", \"unet\"\
          , etc... models and configs in seperate folders, I copied these models and\
          \ configs from [runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)\
          \ and placed them into the forked copy of this branch.\r\n\r\nI then attempted\
          \ export: \r\n```python  -m optimum.exporters.onnx --model sd-controlnet-canny-fork/\
          \ --task stable-diffusion .```\r\n\r\nOptimum was able to run, but it seemed\
          \ that the extra folder and argument I had created for controlnet was not\
          \ recognized, instead, optimum seemed to do a basic export of *just* the\
          \ runwayml/stable-diffusion-v1-5 models, and the output model_index.json\
          \ had:  `\"_class_name\": \"StableDiffusionPipeline\"` indicating that it\
          \ did not recognize the `\"StableDiffusionControlNetPipeline\"` argument.\r\
          \n\r\n## Questions\r\n1. Is this supported already in Huggingface Optimum\
          \ and I just did not get the model_index.json correct?\r\n2. Or is more\
          \ work required in Optimum to allow for export of `StableDiffusionControlNetModel`\
          \ objects?\r\n\r\nTagging @patrickvonplaten: if you have any advice it would\
          \ be greatly appreciated!\r\n\r\nThank you"
        updatedAt: '2023-03-15T21:45:57.159Z'
      numEdits: 0
      reactions: []
    id: 64123c951e42164b9f118902
    type: comment
  author: kmcgrath
  content: "Questions are listed at bottom! \r\n---\r\nHello,\r\n\r\nThank you for\
    \ the work bringing this to the Diffusers library! I wanted to understand if \
    \ Optimum ONNX export was possible with slight modifications to the repo (i.e.\
    \ adding a valid model_index.json), or if changes were needed on the \U0001F917\
    \ Optimum codebase as well.\r\n\r\nI attempted to create a `StableDiffusionControlNetPipeline`\
    \ instance in `model_index.json` in my personal forked repo:  [kmcgrath/sd-controlnet-canny-fork](https://huggingface.co/kmcgrath/sd-controlnet-canny-fork).\r\
    \n\r\nIn python the model is constructed by creating a `ControlNetModel`object\
    \ and then passing this into the `StableDiffusionControlNetModel` object.\r\n\r\
    \nI tried to represent this in [`model_index.json`](https://huggingface.co/kmcgrath/sd-controlnet-canny-fork/blob/main/model_index.json)\
    \ similarly:\r\n```\r\n{\r\n  \"_class_name\": \"StableDiffusionControlNetPipeline\"\
    ,\r\n  \"_diffusers_version\": \"0.14.0.dev0\",\r\n  \"controlnet\": [\r\n   \
    \ \"diffusers\",\r\n    \"ControlNetModel\"\r\n  ],\r\n  \"feature_extractor\"\
    : [\r\n    \"transformers\",\r\n    \"CLIPFeatureExtractor\"\r\n  ],\r\n  \"safety_checker\"\
    : [\r\n    null,\r\n    null\r\n  ],\r\n  \"scheduler\": [\r\n    \"diffusers\"\
    ,\r\n    \"PNDMScheduler\"\r\n  ],\r\n  \"text_encoder\": [\r\n    \"transformers\"\
    ,\r\n    \"CLIPTextModel\"\r\n  ],\r\n  \"tokenizer\": [\r\n    \"transformers\"\
    ,\r\n    \"CLIPTokenizer\"\r\n  ],\r\n  \"unet\": [\r\n    \"diffusers\",\r\n\
    \    \"UNet2DConditionModel\"\r\n  ],\r\n  \"vae\": [\r\n    \"diffusers\",\r\n\
    \    \"AutoencoderKL\"\r\n  ]\r\n}\r\n```\r\nSince the above requires the \"feature_extractor\"\
    , \"vae\", \"unet\", etc... models and configs in seperate folders, I copied these\
    \ models and configs from [runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)\
    \ and placed them into the forked copy of this branch.\r\n\r\nI then attempted\
    \ export: \r\n```python  -m optimum.exporters.onnx --model sd-controlnet-canny-fork/\
    \ --task stable-diffusion .```\r\n\r\nOptimum was able to run, but it seemed that\
    \ the extra folder and argument I had created for controlnet was not recognized,\
    \ instead, optimum seemed to do a basic export of *just* the runwayml/stable-diffusion-v1-5\
    \ models, and the output model_index.json had:  `\"_class_name\": \"StableDiffusionPipeline\"\
    ` indicating that it did not recognize the `\"StableDiffusionControlNetPipeline\"\
    ` argument.\r\n\r\n## Questions\r\n1. Is this supported already in Huggingface\
    \ Optimum and I just did not get the model_index.json correct?\r\n2. Or is more\
    \ work required in Optimum to allow for export of `StableDiffusionControlNetModel`\
    \ objects?\r\n\r\nTagging @patrickvonplaten: if you have any advice it would be\
    \ greatly appreciated!\r\n\r\nThank you"
  created_at: 2023-03-15 20:45:57+00:00
  edited: false
  hidden: false
  id: 64123c951e42164b9f118902
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
      fullname: Patrick von Platen
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: patrickvonplaten
      type: user
    createdAt: '2023-04-09T10:37:13.000Z'
    data:
      edited: false
      editors:
      - patrickvonplaten
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1584435275418-5dfcb1aada6d0311fd3d5448.jpeg?w=200&h=200&f=face
          fullname: Patrick von Platen
          isHf: true
          isPro: false
          name: patrickvonplaten
          type: user
        html: '<p>Thanks for the issue! Forwarding it to the Optimum repository!</p>

          '
        raw: Thanks for the issue! Forwarding it to the Optimum repository!
        updatedAt: '2023-04-09T10:37:13.067Z'
      numEdits: 0
      reactions: []
    id: 64329559701755347c45dced
    type: comment
  author: patrickvonplaten
  content: Thanks for the issue! Forwarding it to the Optimum repository!
  created_at: 2023-04-09 09:37:13+00:00
  edited: false
  hidden: false
  id: 64329559701755347c45dced
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/409d687a9d08cc7cf3d75fdce840fd82.svg
      fullname: Kyle McGrath
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: kmcgrath
      type: user
    createdAt: '2023-04-11T23:00:16.000Z'
    data:
      edited: false
      editors:
      - kmcgrath
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/409d687a9d08cc7cf3d75fdce840fd82.svg
          fullname: Kyle McGrath
          isHf: false
          isPro: false
          name: kmcgrath
          type: user
        html: "<p><span data-props=\"{&quot;user&quot;:&quot;patrickvonplaten&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/patrickvonplaten\"\
          >@<span class=\"underline\">patrickvonplaten</span></a></span>\n\n\t</span></span>\
          \ thanks so much!</p>\n"
        raw: '@patrickvonplaten thanks so much!'
        updatedAt: '2023-04-11T23:00:16.637Z'
      numEdits: 0
      reactions: []
    id: 6435e680adb7b87154eb483d
    type: comment
  author: kmcgrath
  content: '@patrickvonplaten thanks so much!'
  created_at: 2023-04-11 22:00:16+00:00
  edited: false
  hidden: false
  id: 6435e680adb7b87154eb483d
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1651743336129-624c60cba8ec93a7ac188b56.png?w=200&h=200&f=face
      fullname: "F\xE9lix Marty"
      isHf: true
      isOrgMember: false
      isOwner: false
      isPro: false
      name: fxmarty
      type: user
    createdAt: '2023-04-13T09:06:13.000Z'
    data:
      edited: false
      editors:
      - fxmarty
      hidden: false
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1651743336129-624c60cba8ec93a7ac188b56.png?w=200&h=200&f=face
          fullname: "F\xE9lix Marty"
          isHf: true
          isPro: false
          name: fxmarty
          type: user
        html: "<p>Hi <span data-props=\"{&quot;user&quot;:&quot;kmcgrath&quot;}\"\
          \ data-target=\"UserMention\" class=\"SVELTE_PARTIAL_HYDRATER contents\"\
          >\n\n<span class=\"inline-block\"><span class=\"contents\"><a href=\"/kmcgrath\"\
          >@<span class=\"underline\">kmcgrath</span></a></span>\n\n\t</span></span>\
          \ , would you like to be able to export the ControlNet standalone or to\
          \ fuse it in the unet? I've started working on this, the tricky part is\
          \ that depending on whether ControlNet is used or not, the inputs to the\
          \ UNet should be different (the <code>down_block_additional_residuals</code>\
          \ and <code>mid_block_additional_residual</code> args). So it is not as\
          \ easy as exporting separately the UNet and ControlNet and done. So It's\
          \ a bit tricky.</p>\n<p>See: <a rel=\"nofollow\" href=\"https://github.com/huggingface/optimum/pull/970\"\
          >https://github.com/huggingface/optimum/pull/970</a></p>\n"
        raw: 'Hi @kmcgrath , would you like to be able to export the ControlNet standalone
          or to fuse it in the unet? I''ve started working on this, the tricky part
          is that depending on whether ControlNet is used or not, the inputs to the
          UNet should be different (the `down_block_additional_residuals` and `mid_block_additional_residual`
          args). So it is not as easy as exporting separately the UNet and ControlNet
          and done. So It''s a bit tricky.


          See: https://github.com/huggingface/optimum/pull/970'
        updatedAt: '2023-04-13T09:06:13.460Z'
      numEdits: 0
      reactions: []
    id: 6437c605f8a71f96bcdc7570
    type: comment
  author: fxmarty
  content: 'Hi @kmcgrath , would you like to be able to export the ControlNet standalone
    or to fuse it in the unet? I''ve started working on this, the tricky part is that
    depending on whether ControlNet is used or not, the inputs to the UNet should
    be different (the `down_block_additional_residuals` and `mid_block_additional_residual`
    args). So it is not as easy as exporting separately the UNet and ControlNet and
    done. So It''s a bit tricky.


    See: https://github.com/huggingface/optimum/pull/970'
  created_at: 2023-04-13 08:06:13+00:00
  edited: false
  hidden: false
  id: 6437c605f8a71f96bcdc7570
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 3
repo_id: lllyasviel/sd-controlnet-canny
repo_type: model
status: open
target_branch: null
title: "Compatibility with \U0001F917 Optimum ONNX Export"
