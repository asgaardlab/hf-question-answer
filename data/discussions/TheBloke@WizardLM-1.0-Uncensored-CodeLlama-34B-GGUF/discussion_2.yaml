!!python/object:huggingface_hub.community.DiscussionWithDetails
author: rombodawg
conflicting_files: null
created_at: 2023-11-22 06:09:30+00:00
diff: null
endpoint: https://huggingface.co
events:
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
      fullname: rombo dawg
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: rombodawg
      type: user
    createdAt: '2023-11-22T06:09:30.000Z'
    data:
      edited: false
      editors:
      - rombodawg
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.5096516013145447
      isReport: false
      latest:
        author:
          avatarUrl: https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/642cc1c253e76b4c2286c58e/n8h5JKRgaAoYrE36BtHRO.jpeg?w=200&h=200&f=face
          fullname: rombo dawg
          isHf: false
          isPro: false
          name: rombodawg
          type: user
        html: "<p>I used the 5k_m version</p>\n<p>Here is the code:</p>\n<p>snake.py</p>\n\
          <pre><code>import sys\nimport random\nimport pygame\nfrom pygame.locals\
          \ import *\n\n# set up pygame\npygame.init()\nmainClock = pygame.time.Clock()\n\
          \n# set up the window\nWINDOWWIDTH = 480\nWINDOWHEIGHT = 320\nwindowSurface\
          \ = pygame.display.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0, 32)\npygame.display.set_caption('Snake')\n\
          \n# set up the colors\nWHITE = (255, 255, 255)\nGREEN = (0, 255, 0)\nBLACK\
          \ = (0, 0, 0)\nRED = (255, 0, 0)\nYELLOW = (255, 255, 0)\n\n# set up the\
          \ snake\nSNAKECOLOR = GREEN\nAPPLECOLOR = RED\nsnakeList = []\nsnakeLength\
          \ = 1\napplePos = [WINDOWWIDTH/2, WINDOWHEIGHT/2]\ndirection = 'right'\n\
          \n# set up the apple and snake starting position\nfor i in range(snakeLength):\n\
          \    x = WINDOWWIDTH/2 - (i * 10)\n    y = WINDOWHEIGHT/2\n    snakeList.append([x,y])\n\
          \n# run the game loop\nwhile True:\n    for event in pygame.event.get():\n\
          \        if event.type == QUIT:\n            pygame.quit()\n           \
          \ sys.exit()\n\n    # check if the user has pressed a key\n    key = pygame.key.get_pressed()\n\
          \    if key[K_LEFT]:\n        direction = 'left'\n    elif key[K_RIGHT]:\n\
          \        direction = 'right'\n    elif key[K_UP]:\n        direction = 'up'\n\
          \    elif key[K_DOWN]:\n        direction = 'down'\n\n    # move the snake\
          \ in the current direction\n    if direction == 'left':\n        head =\
          \ [snakeList[-1][0]-10, snakeList[-1][1]]\n    elif direction == 'right':\n\
          \        head = [snakeList[-1][0]+10, snakeList[-1][1]]\n    elif direction\
          \ == 'up':\n        head = [snakeList[-1][0], snakeList[-1][1]-10]\n   \
          \ elif direction == 'down':\n        head = [snakeList[-1][0], snakeList[-1][1]+10]\n\
          \n    # check if the snake has hit itself or the edge\n    if any(head in\
          \ pos for pos in snakeList[:-1]) or \\\n            not (WINDOWWIDTH &gt;\
          \ head[0] &gt;= 0 and WINDOWHEIGHT &gt; head[1] &gt;= 0):\n        pygame.quit()\n\
          \        sys.exit()\n\n    # check if the snake has eaten an apple\n   \
          \ if head == applePos:\n        applePos = [random.randint(1, (WINDOWWIDTH-10)/10)*10,\
          \ random.randint(1, (WINDOWHEIGHT-10)/10)*10]\n        snakeLength += 1\n\
          \    else:\n        del snakeList[0]\n\n    # add the new head to the front\
          \ of the list\n    snakeList.append(head)\n\n    # draw the black background\
          \ onto the surface\n    windowSurface.fill(BLACK)\n\n    # draw the apple\
          \ onto the surface\n    pygame.draw.rect(windowSurface, APPLECOLOR, [applePos[0],\
          \ applePos[1], 10, 10])\n\n    # draw the snake onto the surface\n    for\
          \ pos in snakeList:\n        pygame.draw.rect(windowSurface, SNAKECOLOR,\
          \ [pos[0], pos[1], 10, 10])\n\n    # refresh the display\n    pygame.display.update()\n\
          \    mainClock.tick(40)\n</code></pre>\n"
        raw: "I used the 5k_m version\r\n\r\nHere is the code:\r\n\r\nsnake.py\r\n\
          ```\r\nimport sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals\
          \ import *\r\n\r\n# set up pygame\r\npygame.init()\r\nmainClock = pygame.time.Clock()\r\
          \n\r\n# set up the window\r\nWINDOWWIDTH = 480\r\nWINDOWHEIGHT = 320\r\n\
          windowSurface = pygame.display.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0,\
          \ 32)\r\npygame.display.set_caption('Snake')\r\n\r\n# set up the colors\r\
          \nWHITE = (255, 255, 255)\r\nGREEN = (0, 255, 0)\r\nBLACK = (0, 0, 0)\r\n\
          RED = (255, 0, 0)\r\nYELLOW = (255, 255, 0)\r\n\r\n# set up the snake\r\n\
          SNAKECOLOR = GREEN\r\nAPPLECOLOR = RED\r\nsnakeList = []\r\nsnakeLength\
          \ = 1\r\napplePos = [WINDOWWIDTH/2, WINDOWHEIGHT/2]\r\ndirection = 'right'\r\
          \n\r\n# set up the apple and snake starting position\r\nfor i in range(snakeLength):\r\
          \n    x = WINDOWWIDTH/2 - (i * 10)\r\n    y = WINDOWHEIGHT/2\r\n    snakeList.append([x,y])\r\
          \n\r\n# run the game loop\r\nwhile True:\r\n    for event in pygame.event.get():\r\
          \n        if event.type == QUIT:\r\n            pygame.quit()\r\n      \
          \      sys.exit()\r\n\r\n    # check if the user has pressed a key\r\n \
          \   key = pygame.key.get_pressed()\r\n    if key[K_LEFT]:\r\n        direction\
          \ = 'left'\r\n    elif key[K_RIGHT]:\r\n        direction = 'right'\r\n\
          \    elif key[K_UP]:\r\n        direction = 'up'\r\n    elif key[K_DOWN]:\r\
          \n        direction = 'down'\r\n\r\n    # move the snake in the current\
          \ direction\r\n    if direction == 'left':\r\n        head = [snakeList[-1][0]-10,\
          \ snakeList[-1][1]]\r\n    elif direction == 'right':\r\n        head =\
          \ [snakeList[-1][0]+10, snakeList[-1][1]]\r\n    elif direction == 'up':\r\
          \n        head = [snakeList[-1][0], snakeList[-1][1]-10]\r\n    elif direction\
          \ == 'down':\r\n        head = [snakeList[-1][0], snakeList[-1][1]+10]\r\
          \n\r\n    # check if the snake has hit itself or the edge\r\n    if any(head\
          \ in pos for pos in snakeList[:-1]) or \\\r\n            not (WINDOWWIDTH\
          \ > head[0] >= 0 and WINDOWHEIGHT > head[1] >= 0):\r\n        pygame.quit()\r\
          \n        sys.exit()\r\n\r\n    # check if the snake has eaten an apple\r\
          \n    if head == applePos:\r\n        applePos = [random.randint(1, (WINDOWWIDTH-10)/10)*10,\
          \ random.randint(1, (WINDOWHEIGHT-10)/10)*10]\r\n        snakeLength +=\
          \ 1\r\n    else:\r\n        del snakeList[0]\r\n\r\n    # add the new head\
          \ to the front of the list\r\n    snakeList.append(head)\r\n\r\n    # draw\
          \ the black background onto the surface\r\n    windowSurface.fill(BLACK)\r\
          \n\r\n    # draw the apple onto the surface\r\n    pygame.draw.rect(windowSurface,\
          \ APPLECOLOR, [applePos[0], applePos[1], 10, 10])\r\n\r\n    # draw the\
          \ snake onto the surface\r\n    for pos in snakeList:\r\n        pygame.draw.rect(windowSurface,\
          \ SNAKECOLOR, [pos[0], pos[1], 10, 10])\r\n\r\n    # refresh the display\r\
          \n    pygame.display.update()\r\n    mainClock.tick(40)\r\n```"
        updatedAt: '2023-11-22T06:09:30.168Z'
      numEdits: 0
      reactions:
      - count: 1
        reaction: "\U0001F92F"
        users:
        - Yhyu13
    id: 655d9b1ac38270696b11f560
    type: comment
  author: rombodawg
  content: "I used the 5k_m version\r\n\r\nHere is the code:\r\n\r\nsnake.py\r\n```\r\
    \nimport sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals import *\r\
    \n\r\n# set up pygame\r\npygame.init()\r\nmainClock = pygame.time.Clock()\r\n\r\
    \n# set up the window\r\nWINDOWWIDTH = 480\r\nWINDOWHEIGHT = 320\r\nwindowSurface\
    \ = pygame.display.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0, 32)\r\npygame.display.set_caption('Snake')\r\
    \n\r\n# set up the colors\r\nWHITE = (255, 255, 255)\r\nGREEN = (0, 255, 0)\r\n\
    BLACK = (0, 0, 0)\r\nRED = (255, 0, 0)\r\nYELLOW = (255, 255, 0)\r\n\r\n# set\
    \ up the snake\r\nSNAKECOLOR = GREEN\r\nAPPLECOLOR = RED\r\nsnakeList = []\r\n\
    snakeLength = 1\r\napplePos = [WINDOWWIDTH/2, WINDOWHEIGHT/2]\r\ndirection = 'right'\r\
    \n\r\n# set up the apple and snake starting position\r\nfor i in range(snakeLength):\r\
    \n    x = WINDOWWIDTH/2 - (i * 10)\r\n    y = WINDOWHEIGHT/2\r\n    snakeList.append([x,y])\r\
    \n\r\n# run the game loop\r\nwhile True:\r\n    for event in pygame.event.get():\r\
    \n        if event.type == QUIT:\r\n            pygame.quit()\r\n            sys.exit()\r\
    \n\r\n    # check if the user has pressed a key\r\n    key = pygame.key.get_pressed()\r\
    \n    if key[K_LEFT]:\r\n        direction = 'left'\r\n    elif key[K_RIGHT]:\r\
    \n        direction = 'right'\r\n    elif key[K_UP]:\r\n        direction = 'up'\r\
    \n    elif key[K_DOWN]:\r\n        direction = 'down'\r\n\r\n    # move the snake\
    \ in the current direction\r\n    if direction == 'left':\r\n        head = [snakeList[-1][0]-10,\
    \ snakeList[-1][1]]\r\n    elif direction == 'right':\r\n        head = [snakeList[-1][0]+10,\
    \ snakeList[-1][1]]\r\n    elif direction == 'up':\r\n        head = [snakeList[-1][0],\
    \ snakeList[-1][1]-10]\r\n    elif direction == 'down':\r\n        head = [snakeList[-1][0],\
    \ snakeList[-1][1]+10]\r\n\r\n    # check if the snake has hit itself or the edge\r\
    \n    if any(head in pos for pos in snakeList[:-1]) or \\\r\n            not (WINDOWWIDTH\
    \ > head[0] >= 0 and WINDOWHEIGHT > head[1] >= 0):\r\n        pygame.quit()\r\n\
    \        sys.exit()\r\n\r\n    # check if the snake has eaten an apple\r\n   \
    \ if head == applePos:\r\n        applePos = [random.randint(1, (WINDOWWIDTH-10)/10)*10,\
    \ random.randint(1, (WINDOWHEIGHT-10)/10)*10]\r\n        snakeLength += 1\r\n\
    \    else:\r\n        del snakeList[0]\r\n\r\n    # add the new head to the front\
    \ of the list\r\n    snakeList.append(head)\r\n\r\n    # draw the black background\
    \ onto the surface\r\n    windowSurface.fill(BLACK)\r\n\r\n    # draw the apple\
    \ onto the surface\r\n    pygame.draw.rect(windowSurface, APPLECOLOR, [applePos[0],\
    \ applePos[1], 10, 10])\r\n\r\n    # draw the snake onto the surface\r\n    for\
    \ pos in snakeList:\r\n        pygame.draw.rect(windowSurface, SNAKECOLOR, [pos[0],\
    \ pos[1], 10, 10])\r\n\r\n    # refresh the display\r\n    pygame.display.update()\r\
    \n    mainClock.tick(40)\r\n```"
  created_at: 2023-11-22 06:09:30+00:00
  edited: false
  hidden: false
  id: 655d9b1ac38270696b11f560
  type: comment
- !!python/object:huggingface_hub.community.DiscussionComment
  _event:
    author:
      avatarUrl: /avatars/f7b6289b88ea10380b912d4efe680cb0.svg
      fullname: Kayla keiser
      isHf: false
      isOrgMember: false
      isOwner: false
      isPro: false
      name: Kayla32714kayla
      type: user
    createdAt: '2023-12-27T09:30:09.000Z'
    data:
      edited: false
      editors:
      - Kayla32714kayla
      hidden: false
      identifiedLanguage:
        language: en
        probability: 0.8895153403282166
      isReport: false
      latest:
        author:
          avatarUrl: /avatars/f7b6289b88ea10380b912d4efe680cb0.svg
          fullname: Kayla keiser
          isHf: false
          isPro: false
          name: Kayla32714kayla
          type: user
        html: '<p>Try making snake game in physical logic gates or even pacman</p>

          '
        raw: Try making snake game in physical logic gates or even pacman
        updatedAt: '2023-12-27T09:30:09.294Z'
      numEdits: 0
      reactions: []
    id: 658beea10ccb77b89a163444
    type: comment
  author: Kayla32714kayla
  content: Try making snake game in physical logic gates or even pacman
  created_at: 2023-12-27 09:30:09+00:00
  edited: false
  hidden: false
  id: 658beea10ccb77b89a163444
  type: comment
is_pull_request: false
merge_commit_oid: null
num: 2
repo_id: TheBloke/WizardLM-1.0-Uncensored-CodeLlama-34B-GGUF
repo_type: model
status: open
target_branch: null
title: This model might just be a hidden treasure. It made a perfect snake game the
  first try.
